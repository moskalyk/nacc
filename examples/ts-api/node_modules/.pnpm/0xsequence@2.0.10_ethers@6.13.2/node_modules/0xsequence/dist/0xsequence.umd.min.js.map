{"version":3,"file":"0xsequence.umd.min.js","sources":["../../abi/src/wallet/erc5719.ts","../../abi/src/wallet/erc1271.ts","../../abi/src/wallet/index.ts","../../abi/src/wallet/erc6492.ts","../../abi/src/wallet/factory.ts","../../abi/src/wallet/mainModule.ts","../../abi/src/wallet/mainModuleUpgradable.ts","../../abi/src/wallet/sequenceUtils.ts","../../abi/src/wallet/libs/requireFreshSigners.ts","../../api/src/api.gen.ts","../../api/src/index.ts","../../../node_modules/.pnpm/js-base64@3.7.7/node_modules/js-base64/base64.mjs","../../../node_modules/.pnpm/@0xsequence+ethauth@1.0.0_ethers@6.13.0_bufferutil@4.0.8_utf-8-validate@6.0.3_/node_modules/@0xsequence/ethauth/dist/index.es.js","../../network/src/constants.ts","../../network/src/utils.ts","../../utils/src/bigint.ts","../../utils/src/base64.ts","../../utils/src/digest.ts","../../utils/src/is-node-or-browser.ts","../../utils/src/jwt-decode.ts","../../utils/src/logger.ts","../../utils/src/merkletree/Base.ts","../../utils/src/merkletree/MerkleTree.ts","../../utils/src/merkle.ts","../../utils/src/network.ts","../../utils/src/promise-cache.ts","../../utils/src/rand.ts","../../utils/src/sanitize.ts","../../utils/src/typed-data.ts","../../utils/src/types.ts","../../network/src/config.ts","../../network/src/json-rpc/router.ts","../../network/src/json-rpc/utils.ts","../../network/src/json-rpc/handler.ts","../../network/src/json-rpc/middleware/allow-provider.ts","../../network/src/json-rpc/middleware/cached-provider.ts","../../network/src/json-rpc/middleware/eager-provider.ts","../../network/src/json-rpc/middleware/exception-provider.ts","../../network/src/json-rpc/middleware/logging-provider.ts","../../network/src/json-rpc/middleware/signing-provider.ts","../../network/src/json-rpc/middleware/singleflight.ts","../../network/src/json-rpc-provider.ts","../../core/src/commons/signature.ts","../../core/src/commons/validateEIP1271.ts","../../core/src/commons/signer.ts","../../core/src/v1/signature.ts","../../core/src/v1/config.ts","../../core/src/v1/index.ts","../../core/src/v2/chained.ts","../../core/src/v2/signature.ts","../../core/src/v2/config.ts","../../core/src/v2/index.ts","../../core/src/commons/context.ts","../../core/src/commons/transaction.ts","../../core/src/commons/validateEIP6492.ts","../../core/src/commons/reader.ts","../../core/src/commons/orchestrator.ts","../../core/src/universal/index.ts","../../core/src/version.ts","../../core/src/index.ts","../../migration/src/version.ts","../../migration/src/migrations/index.ts","../../migration/src/migrations/migration_01_02.ts","../../migration/src/migrator.ts","../../migration/src/defaults.ts","../../relayer/src/provider-relayer.ts","../../relayer/src/rpc-relayer/relayer.gen.ts","../../relayer/src/rpc-relayer/index.ts","../../relayer/src/index.ts","../../wallet/src/signer.ts","../../wallet/src/utils.ts","../../signhub/src/signers/signer.ts","../../signhub/src/signers/wrapper.ts","../../signhub/src/orchestrator.ts","../../wallet/src/wallet.ts","../../account/src/signer.ts","../../account/src/account.ts","../../indexer/src/indexer.gen.ts","../../indexer/src/index.ts","../../metadata/src/metadata.gen.ts","../../metadata/src/index.ts","../../auth/src/services.ts","../../auth/src/authorization.ts","../../sessions/src/tracker.ts","../../sessions/src/trackers/debug.ts","../../replacer/src/cached.ts","../../replacer/src/index.ts","../../replacer/src/ipfs.ts","../../sessions/src/trackers/stores/memoryStore.ts","../../../node_modules/.pnpm/idb@7.1.1/node_modules/idb/build/wrap-idb-value.js","../../../node_modules/.pnpm/idb@7.1.1/node_modules/idb/build/index.js","../../sessions/src/trackers/stores/indexedDBStore.ts","../../sessions/src/trackers/stores/index.ts","../../sessions/src/trackers/local.ts","../../sessions/src/trackers/remote/sessions.gen.ts","../../sessions/src/trackers/remote/index.ts","../../sessions/src/trackers/multiple.ts","../../sessions/src/trackers/promise-cache.ts","../../sessions/src/trackers/deduped.ts","../../sessions/src/trackers/cached.ts","../../auth/src/session.ts","../../auth/src/proof.ts","../../guard/src/guard.gen.ts","../../guard/src/signer.ts","../../network/src/json-rpc/middleware/network-provider.ts","../../network/src/json-rpc/middleware/public-provider.ts","../../provider/src/transactions.ts","../../../node_modules/.pnpm/eventemitter2@6.4.9/node_modules/eventemitter2/lib/eventemitter2.js","../../provider/src/types.ts","../../provider/src/transports/base-provider-transport.ts","../../provider/src/eip191exceptions.ts","../../provider/src/utils.ts","../../provider/src/transports/base-wallet-transport.ts","../../provider/src/transports/proxy-transport/proxy-message-channel.ts","../../provider/src/transports/proxy-transport/proxy-message-provider.ts","../../provider/src/transports/unreal-transport/overridelogs.ts","../../provider/src/transports/unreal-transport/unreal-message-provider.ts","../../provider/src/transports/extension-transport/extension-message-handler.ts","../../provider/src/transports/extension-transport/extension-message-provider.ts","../../provider/src/transports/extension-transport/base-injected-transport.ts","../../provider/src/transports/window-transport/window-message-provider.ts","../../provider/src/transports/mux-transport/mux-message-provider.ts","../../provider/src/transports/wallet-request-handler.ts","../../provider/src/signer.ts","../../provider/src/utils/index.ts","../../provider/src/provider.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/_assert.js","../../../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/utils.js","../../../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/_sha2.js","../../../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/esm/sha256.js","../../../node_modules/.pnpm/@databeat+tracker@0.9.2/node_modules/@databeat/tracker/dist/databeat-tracker.mjs","../../provider/src/analytics.ts","../../provider/src/client.ts","../../provider/src/extended.ts","../../provider/src/init.ts","../../provider/src/transports/proxy-transport/proxy-message-handler.ts","../../provider/src/transports/window-transport/window-message-handler.ts","../../provider/src/transports/unreal-transport/unreal-message-handler.ts","../../relayer/src/local-relayer.ts","../src/transactions.ts","../../utils/src/access-key.ts","../../utils/src/promisify.ts","../../utils/src/query-string.ts","../../utils/src/sleep.ts","../../utils/src/web.ts"],"sourcesContent":["export const abi = [\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        type: 'bytes32'\n      }\n    ],\n    name: 'getAlternativeSignature',\n    outputs: [\n      {\n        internalType: 'string',\n        type: 'string'\n      }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  }\n]\n","export const abi = [\n  {\n    type: 'function',\n    name: 'isValidSignature',\n    constant: true,\n    inputs: [\n      {\n        type: 'bytes32'\n      },\n      {\n        type: 'bytes'\n      }\n    ],\n    outputs: [\n      {\n        type: 'bytes4'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view'\n  }\n]\n\nexport const returns = {\n  isValidSignatureBytes32: '0x1626ba7e'\n}\n","import * as erc5719 from './erc5719'\nimport * as erc1271 from './erc1271'\nimport * as erc6492 from './erc6492'\nimport * as factory from './factory'\nimport * as mainModule from './mainModule'\nimport * as mainModuleUpgradable from './mainModuleUpgradable'\nimport * as sequenceUtils from './sequenceUtils'\nimport * as requireFreshSigner from './libs/requireFreshSigners'\n\nexport const walletContracts = {\n  erc6492,\n  erc5719,\n  erc1271,\n  factory,\n  mainModule,\n  mainModuleUpgradable,\n  sequenceUtils,\n  requireFreshSigner\n}\n","export const abi = [\n  { inputs: [{ internalType: 'bytes', name: 'error', type: 'bytes' }], name: 'ERC1271Revert', type: 'error' },\n  { inputs: [{ internalType: 'bytes', name: 'error', type: 'bytes' }], name: 'ERC6492DeployFailed', type: 'error' },\n  {\n    inputs: [\n      { internalType: 'address', name: '_signer', type: 'address' },\n      { internalType: 'bytes32', name: '_hash', type: 'bytes32' },\n      { internalType: 'bytes', name: '_signature', type: 'bytes' }\n    ],\n    name: 'isValidSig',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: '_signer', type: 'address' },\n      { internalType: 'bytes32', name: '_hash', type: 'bytes32' },\n      { internalType: 'bytes', name: '_signature', type: 'bytes' },\n      { internalType: 'bool', name: 'allowSideEffects', type: 'bool' },\n      { internalType: 'bool', name: 'deployAlreadyDeployed', type: 'bool' }\n    ],\n    name: 'isValidSigImpl',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: '_signer', type: 'address' },\n      { internalType: 'bytes32', name: '_hash', type: 'bytes32' },\n      { internalType: 'bytes', name: '_signature', type: 'bytes' }\n    ],\n    name: 'isValidSigNoThrow',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: '_signer', type: 'address' },\n      { internalType: 'bytes32', name: '_hash', type: 'bytes32' },\n      { internalType: 'bytes', name: '_signature', type: 'bytes' }\n    ],\n    name: 'isValidSigWithSideEffects',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: '_signer', type: 'address' },\n      { internalType: 'bytes32', name: '_hash', type: 'bytes32' },\n      { internalType: 'bytes', name: '_signature', type: 'bytes' }\n    ],\n    name: 'isValidSigWithSideEffectsNoThrow',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  }\n]\n","export const abi = [\n  {\n    type: 'function',\n    name: 'deploy',\n    constant: false,\n    inputs: [\n      {\n        type: 'address'\n      },\n      {\n        type: 'bytes32'\n      }\n    ],\n    outputs: [],\n    payable: true,\n    stateMutability: 'payable'\n  }\n]\n","export const abi = [\n  {\n    type: 'function',\n    name: 'nonce',\n    constant: true,\n    inputs: [],\n    outputs: [\n      {\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view'\n  },\n  {\n    type: 'function',\n    name: 'readNonce',\n    constant: true,\n    inputs: [\n      {\n        type: 'uint256'\n      }\n    ],\n    outputs: [\n      {\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view'\n  },\n  {\n    type: 'function',\n    name: 'updateImplementation',\n    constant: false,\n    inputs: [\n      {\n        type: 'address'\n      }\n    ],\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable'\n  },\n  {\n    type: 'function',\n    name: 'selfExecute',\n    constant: false,\n    inputs: [\n      {\n        components: [\n          {\n            type: 'bool',\n            name: 'delegateCall'\n          },\n          {\n            type: 'bool',\n            name: 'revertOnError'\n          },\n          {\n            type: 'uint256',\n            name: 'gasLimit'\n          },\n          {\n            type: 'address',\n            name: 'target'\n          },\n          {\n            type: 'uint256',\n            name: 'value'\n          },\n          {\n            type: 'bytes',\n            name: 'data'\n          }\n        ],\n        type: 'tuple[]'\n      }\n    ],\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable'\n  },\n  {\n    type: 'function',\n    name: 'execute',\n    constant: false,\n    inputs: [\n      {\n        components: [\n          {\n            type: 'bool',\n            name: 'delegateCall'\n          },\n          {\n            type: 'bool',\n            name: 'revertOnError'\n          },\n          {\n            type: 'uint256',\n            name: 'gasLimit'\n          },\n          {\n            type: 'address',\n            name: 'target'\n          },\n          {\n            type: 'uint256',\n            name: 'value'\n          },\n          {\n            type: 'bytes',\n            name: 'data'\n          }\n        ],\n        type: 'tuple[]'\n      },\n      {\n        type: 'uint256'\n      },\n      {\n        type: 'bytes'\n      }\n    ],\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable'\n  },\n  {\n    type: 'function',\n    name: 'createContract',\n    inputs: [\n      {\n        type: 'bytes'\n      }\n    ],\n    payable: true,\n    stateMutability: 'payable'\n  },\n  {\n    type: 'function',\n    name: 'setExtraImageHash',\n    constant: false,\n    inputs: [\n      {\n        type: 'bytes32',\n        name: 'imageHash'\n      },\n      {\n        type: 'uint256',\n        name: 'expiration'\n      }\n    ],\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable'\n  }\n]\n","export const abi = [\n  {\n    type: 'function',\n    name: 'updateImageHash',\n    constant: true,\n    inputs: [\n      {\n        type: 'bytes32'\n      }\n    ],\n    outputs: [],\n    payable: false,\n    stateMutability: 'view'\n  },\n  {\n    type: 'function',\n    name: 'imageHash',\n    constant: true,\n    inputs: [],\n    outputs: [\n      {\n        type: 'bytes32'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view'\n  }\n]\n","export const abi = [\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_factory',\n        type: 'address'\n      },\n      {\n        internalType: 'address',\n        name: '_mainModule',\n        type: 'address'\n      }\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: '_wallet',\n        type: 'address'\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: '_imageHash',\n        type: 'bytes32'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: '_threshold',\n        type: 'uint256'\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: '_signers',\n        type: 'bytes'\n      }\n    ],\n    name: 'RequiredConfig',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: '_wallet',\n        type: 'address'\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: '_signer',\n        type: 'address'\n      }\n    ],\n    name: 'RequiredSigner',\n    type: 'event'\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_addr',\n        type: 'address'\n      }\n    ],\n    name: 'callBalanceOf',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'callBlockNumber',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_i',\n        type: 'uint256'\n      }\n    ],\n    name: 'callBlockhash',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32'\n      }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'callChainId',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'id',\n        type: 'uint256'\n      }\n    ],\n    stateMutability: 'pure',\n    type: 'function'\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_addr',\n        type: 'address'\n      }\n    ],\n    name: 'callCode',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: 'code',\n        type: 'bytes'\n      }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_addr',\n        type: 'address'\n      }\n    ],\n    name: 'callCodeHash',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: 'codeHash',\n        type: 'bytes32'\n      }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_addr',\n        type: 'address'\n      }\n    ],\n    name: 'callCodeSize',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'size',\n        type: 'uint256'\n      }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'callCoinbase',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address'\n      }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'callDifficulty',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'callGasLeft',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'callGasLimit',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'callGasPrice',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'callOrigin',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address'\n      }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    name: 'callTimestamp',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address'\n      }\n    ],\n    name: 'knownImageHashes',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32'\n      }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32'\n      }\n    ],\n    name: 'lastImageHashUpdate',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address'\n      }\n    ],\n    name: 'lastSignerUpdate',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address'\n      }\n    ],\n    name: 'lastWalletUpdate',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'bool',\n            name: 'delegateCall',\n            type: 'bool'\n          },\n          {\n            internalType: 'bool',\n            name: 'revertOnError',\n            type: 'bool'\n          },\n          {\n            internalType: 'uint256',\n            name: 'gasLimit',\n            type: 'uint256'\n          },\n          {\n            internalType: 'address',\n            name: 'target',\n            type: 'address'\n          },\n          {\n            internalType: 'uint256',\n            name: 'value',\n            type: 'uint256'\n          },\n          {\n            internalType: 'bytes',\n            name: 'data',\n            type: 'bytes'\n          }\n        ],\n        internalType: 'struct IModuleCalls.Transaction[]',\n        name: '_txs',\n        type: 'tuple[]'\n      }\n    ],\n    name: 'multiCall',\n    outputs: [\n      {\n        internalType: 'bool[]',\n        name: '_successes',\n        type: 'bool[]'\n      },\n      {\n        internalType: 'bytes[]',\n        name: '_results',\n        type: 'bytes[]'\n      }\n    ],\n    stateMutability: 'payable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_wallet',\n        type: 'address'\n      },\n      {\n        internalType: 'uint256',\n        name: '_threshold',\n        type: 'uint256'\n      },\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'weight',\n            type: 'uint256'\n          },\n          {\n            internalType: 'address',\n            name: 'signer',\n            type: 'address'\n          }\n        ],\n        internalType: 'struct RequireUtils.Member[]',\n        name: '_members',\n        type: 'tuple[]'\n      },\n      {\n        internalType: 'bool',\n        name: '_index',\n        type: 'bool'\n      }\n    ],\n    name: 'publishConfig',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_wallet',\n        type: 'address'\n      },\n      {\n        internalType: 'bytes32',\n        name: '_hash',\n        type: 'bytes32'\n      },\n      {\n        internalType: 'uint256',\n        name: '_sizeMembers',\n        type: 'uint256'\n      },\n      {\n        internalType: 'bytes',\n        name: '_signature',\n        type: 'bytes'\n      },\n      {\n        internalType: 'bool',\n        name: '_index',\n        type: 'bool'\n      }\n    ],\n    name: 'publishInitialSigners',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_wallet',\n        type: 'address'\n      },\n      {\n        internalType: 'uint256',\n        name: '_nonce',\n        type: 'uint256'\n      }\n    ],\n    name: 'requireMinNonce',\n    outputs: [],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_expiration',\n        type: 'uint256'\n      }\n    ],\n    name: 'requireNonExpired',\n    outputs: [],\n    stateMutability: 'view',\n    type: 'function'\n  }\n]\n","export const abi = [\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address'\n      }\n    ],\n    name: 'requireFreshSigner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  }\n]\n","/* eslint-disable */\n// sequence-api v0.4.0 d3f5f1338693d60d58f87bc408a076218201a097\n// --\n// Code generated by webrpc-gen@v0.18.7 with typescript generator. DO NOT EDIT.\n//\n// webrpc-gen -schema=api.ridl -target=typescript -client -out=./clients/api.gen.ts\n\n// WebRPC description and code-gen version\nexport const WebRPCVersion = 'v1'\n\n// Schema version of your RIDL schema\nexport const WebRPCSchemaVersion = 'v0.4.0'\n\n// Schema hash generated from your RIDL schema\nexport const WebRPCSchemaHash = 'd3f5f1338693d60d58f87bc408a076218201a097'\n\n//\n// Types\n//\n\nexport enum SortOrder {\n  DESC = 'DESC',\n  ASC = 'ASC'\n}\n\nexport enum TokenType {\n  ERC20 = 'ERC20',\n  ERC721 = 'ERC721',\n  ERC1155 = 'ERC1155'\n}\n\nexport interface Version {\n  webrpcVersion: string\n  schemaVersion: string\n  schemaHash: string\n  appVersion: string\n}\n\nexport interface RuntimeStatus {\n  healthOK: boolean\n  startTime: string\n  uptime: number\n  ver: string\n  branch: string\n  commitHash: string\n  checks: RuntimeChecks\n  numTxnsRelayed: { [key: string]: NumTxnsRelayed }\n}\n\nexport interface NumTxnsRelayed {\n  chainID: number\n  prev: number\n  current: number\n  period: number\n}\n\nexport interface RuntimeChecks {}\n\nexport interface SequenceContext {\n  factory: string\n  mainModule: string\n  mainModuleUpgradable: string\n  guestModule: string\n  utils: string\n}\n\nexport interface User {\n  address: string\n  username: string\n  avatar: string\n  bio: string\n  location: string\n  locale: string\n  backup?: boolean\n  backupConfirmed?: boolean\n  maxInvites?: number\n  updatedAt?: string\n  createdAt?: string\n}\n\nexport interface WalletBackup {\n  accountAddress: string\n  secretHash: string\n  encryptedWallet: string\n  userConfirmed: boolean\n  updatedAt?: string\n  createdAt?: string\n}\n\nexport interface Friend {\n  id: number\n  userAddress: string\n  friendAddress: string\n  nickname: string\n  user?: User\n  createdAt?: string\n}\n\nexport interface InviteCode {\n  usesLeft: number\n  ownerAccount: string\n  email?: string\n  url: string\n  createdAt?: string\n  expiresAt?: string\n}\n\nexport interface InviteCodeAccount {\n  claimedByUserAddress: string\n  claimedAt?: string\n}\n\nexport interface InviteInfo {\n  expiryInHours: number\n  max: number\n  invites: Array<InviteCode>\n}\n\nexport interface ContractCall {\n  signature: string\n  function: string\n  args: Array<TupleComponent>\n}\n\nexport interface TupleComponent {\n  name?: string\n  type: string\n  value: any\n}\n\nexport interface Transaction {\n  delegateCall: boolean\n  revertOnError: boolean\n  gasLimit: string\n  target: string\n  value: string\n  data: string\n  call?: ContractCall\n}\n\nexport interface UserStorage {\n  userAddress: string\n  key: string\n  value: any\n}\n\nexport interface Token {\n  chainId: number\n  contractAddress: string\n  tokenId?: string\n}\n\nexport interface Price {\n  value: number\n  currency: string\n}\n\nexport interface TokenPrice {\n  token: Token\n  price?: Price\n  price24hChange?: Price\n  floorPrice: Price\n  buyPrice: Price\n  sellPrice: Price\n  updatedAt: string\n}\n\nexport interface ExchangeRate {\n  name: string\n  symbol: string\n  value: number\n  vsCurrency: string\n  currencyType: string\n}\n\nexport interface LinkedWallet {\n  id: number\n  walletAddress: string\n  linkedWalletAddress: string\n  createdAt?: string\n}\n\nexport interface Page {\n  pageSize?: number\n  page?: number\n  totalRecords?: number\n  column?: string\n  before?: any\n  after?: any\n  sort?: Array<SortBy>\n  more?: boolean\n}\n\nexport interface SortBy {\n  column: string\n  order: SortOrder\n}\n\nexport interface NftCheckoutParams {\n  name: string\n  imageUrl: string\n  network: string\n  recipientAddress: string\n  blockchainNftId: string\n  contractAddress: string\n  quantity: number\n  decimals?: number\n  tokenAmount: string\n  tokenAddress: string\n  tokenSymbol: string\n  tokenDecimals?: number\n  calldata: string\n  platform: string\n  approvedSpenderAddress?: string\n}\n\nexport interface NftCheckout {\n  token: string\n  expiresAt: string\n  orderId: string\n}\n\nexport interface SardineOrder {\n  id: string\n  createdAt?: string\n  referenceId: string\n  status: string\n  fiatCurrency: string\n  fiatExchangeRateUSD: number\n  transactionId: string\n  expiresAt?: string\n  total: number\n  subTotal: number\n  transactionFee: number\n  networkFee: number\n  paymentCurrency?: string\n  paymentMethodType?: string\n  transactionType: string\n  name: string\n  price: number\n  imageUrl: string\n  contractAddress?: string\n  transactionHash?: string\n  recipientAddress: string\n}\n\nexport interface SwapQuote {\n  currencyAddress: string\n  currencyBalance: string\n  price: string\n  maxPrice: string\n  to: string\n  transactionData: string\n  approveData: string\n}\n\nexport interface CurrencyGroup {\n  id: number\n  name: string\n  tokens: Array<CurrencyGroupToken>\n}\n\nexport interface CurrencyGroupToken {\n  id: number\n  currencyGroupId: number\n  chainId: number\n  tokenAddress: string\n}\n\nexport interface InventoryPaymentConfig {\n  id: number\n  projectId: number\n  chainId: number\n  externalProductId: string\n  paymentTokenAddress: string\n  paymentTokenType: TokenType\n  paymentTokenId: number\n  paymentAmount: number\n  paymentRecipient: string\n  chainedCallAddress?: string\n  chainedCallData?: string\n  allowCrossChainPayments?: boolean\n  callbackURL?: string\n  createdAt: string\n  deletedAt?: string\n}\n\nexport interface InventoryPayment {\n  id: number\n  inventoryPaymentConfigId: number\n  productRecipient: string\n  paymentChainId: number\n  paymentTokenAddress: string\n  expiration: string\n  createdAt: string\n  completedAt?: string\n  processedAt?: string\n}\n\nexport interface InventoryPaymentResponse {\n  paymentId: number\n  inventoryPaymentConfigId: number\n  chainId: number\n  externalProductId: string\n  paymentTokenAddress: string\n  paymentTokenType: TokenType\n  paymentTokenId: number\n  paymentTotal: number\n  expiration: string\n  signature: string\n  txTo: string\n  txData: string\n}\n\nexport interface API {\n  ping(headers?: object, signal?: AbortSignal): Promise<PingReturn>\n  version(headers?: object, signal?: AbortSignal): Promise<VersionReturn>\n  runtimeStatus(headers?: object, signal?: AbortSignal): Promise<RuntimeStatusReturn>\n  clock(headers?: object, signal?: AbortSignal): Promise<ClockReturn>\n  getSequenceContext(headers?: object, signal?: AbortSignal): Promise<GetSequenceContextReturn>\n  getAuthToken(args: GetAuthTokenArgs, headers?: object, signal?: AbortSignal): Promise<GetAuthTokenReturn>\n  getAuthToken2(args: GetAuthToken2Args, headers?: object, signal?: AbortSignal): Promise<GetAuthToken2Return>\n  sendPasswordlessLink(\n    args: SendPasswordlessLinkArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<SendPasswordlessLinkReturn>\n  friendList(args: FriendListArgs, headers?: object, signal?: AbortSignal): Promise<FriendListReturn>\n  getFriendByAddress(args: GetFriendByAddressArgs, headers?: object, signal?: AbortSignal): Promise<GetFriendByAddressReturn>\n  searchFriends(args: SearchFriendsArgs, headers?: object, signal?: AbortSignal): Promise<SearchFriendsReturn>\n  addFriend(args: AddFriendArgs, headers?: object, signal?: AbortSignal): Promise<AddFriendReturn>\n  updateFriendNickname(\n    args: UpdateFriendNicknameArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<UpdateFriendNicknameReturn>\n  removeFriend(args: RemoveFriendArgs, headers?: object, signal?: AbortSignal): Promise<RemoveFriendReturn>\n  contractCall(args: ContractCallArgs, headers?: object, signal?: AbortSignal): Promise<ContractCallReturn>\n  decodeContractCall(args: DecodeContractCallArgs, headers?: object, signal?: AbortSignal): Promise<DecodeContractCallReturn>\n  lookupContractCallSelectors(\n    args: LookupContractCallSelectorsArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<LookupContractCallSelectorsReturn>\n  userStorageFetch(args: UserStorageFetchArgs, headers?: object, signal?: AbortSignal): Promise<UserStorageFetchReturn>\n  userStorageSave(args: UserStorageSaveArgs, headers?: object, signal?: AbortSignal): Promise<UserStorageSaveReturn>\n  userStorageDelete(args: UserStorageDeleteArgs, headers?: object, signal?: AbortSignal): Promise<UserStorageDeleteReturn>\n  userStorageFetchAll(args: UserStorageFetchAllArgs, headers?: object, signal?: AbortSignal): Promise<UserStorageFetchAllReturn>\n  getMoonpayLink(args: GetMoonpayLinkArgs, headers?: object, signal?: AbortSignal): Promise<GetMoonpayLinkReturn>\n  getSardineClientToken(headers?: object, signal?: AbortSignal): Promise<GetSardineClientTokenReturn>\n  getSardineNFTCheckoutToken(\n    args: GetSardineNFTCheckoutTokenArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetSardineNFTCheckoutTokenReturn>\n  getSardineNFTCheckoutOrderStatus(\n    args: GetSardineNFTCheckoutOrderStatusArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetSardineNFTCheckoutOrderStatusReturn>\n  resolveENSAddress(args: ResolveENSAddressArgs, headers?: object, signal?: AbortSignal): Promise<ResolveENSAddressReturn>\n  isValidSignature(args: IsValidSignatureArgs, headers?: object, signal?: AbortSignal): Promise<IsValidSignatureReturn>\n  isValidMessageSignature(\n    args: IsValidMessageSignatureArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<IsValidMessageSignatureReturn>\n  isValidTypedDataSignature(\n    args: IsValidTypedDataSignatureArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<IsValidTypedDataSignatureReturn>\n  isValidETHAuthProof(args: IsValidETHAuthProofArgs, headers?: object, signal?: AbortSignal): Promise<IsValidETHAuthProofReturn>\n  getCoinPrices(args: GetCoinPricesArgs, headers?: object, signal?: AbortSignal): Promise<GetCoinPricesReturn>\n  getCollectiblePrices(\n    args: GetCollectiblePricesArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetCollectiblePricesReturn>\n  getExchangeRate(args: GetExchangeRateArgs, headers?: object, signal?: AbortSignal): Promise<GetExchangeRateReturn>\n  memoryStore(args: MemoryStoreArgs, headers?: object, signal?: AbortSignal): Promise<MemoryStoreReturn>\n  memoryLoad(args: MemoryLoadArgs, headers?: object, signal?: AbortSignal): Promise<MemoryLoadReturn>\n  getInviteInfo(headers?: object, signal?: AbortSignal): Promise<GetInviteInfoReturn>\n  isValidAccessCode(args: IsValidAccessCodeArgs, headers?: object, signal?: AbortSignal): Promise<IsValidAccessCodeReturn>\n  internalClaimAccessCode(\n    args: InternalClaimAccessCodeArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<InternalClaimAccessCodeReturn>\n  blockNumberAtTime(args: BlockNumberAtTimeArgs, headers?: object, signal?: AbortSignal): Promise<BlockNumberAtTimeReturn>\n  paperSessionSecret(args: PaperSessionSecretArgs, headers?: object, signal?: AbortSignal): Promise<PaperSessionSecretReturn>\n  paperSessionSecret2(args: PaperSessionSecret2Args, headers?: object, signal?: AbortSignal): Promise<PaperSessionSecret2Return>\n  linkWallet(args: LinkWalletArgs, headers?: object, signal?: AbortSignal): Promise<LinkWalletReturn>\n  getLinkedWallets(args: GetLinkedWalletsArgs, headers?: object, signal?: AbortSignal): Promise<GetLinkedWalletsReturn>\n  removeLinkedWallet(args: RemoveLinkedWalletArgs, headers?: object, signal?: AbortSignal): Promise<RemoveLinkedWalletReturn>\n  generateWaaSVerificationURL(\n    args: GenerateWaaSVerificationURLArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GenerateWaaSVerificationURLReturn>\n  validateWaaSVerificationNonce(\n    args: ValidateWaaSVerificationNonceArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<ValidateWaaSVerificationNonceReturn>\n  getSwapQuotes(args: GetSwapQuotesArgs, headers?: object, signal?: AbortSignal): Promise<GetSwapQuotesReturn>\n  addCurrencyGroup(args: AddCurrencyGroupArgs, headers?: object, signal?: AbortSignal): Promise<AddCurrencyGroupReturn>\n  updateCurrencyGroup(args: UpdateCurrencyGroupArgs, headers?: object, signal?: AbortSignal): Promise<UpdateCurrencyGroupReturn>\n  listCurrencyGroups(headers?: object, signal?: AbortSignal): Promise<ListCurrencyGroupsReturn>\n  deleteCurrencyGroup(args: DeleteCurrencyGroupArgs, headers?: object, signal?: AbortSignal): Promise<DeleteCurrencyGroupReturn>\n  addInventoryPaymentConfig(\n    args: AddInventoryPaymentConfigArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<AddInventoryPaymentConfigReturn>\n  getInventoryPaymentConfig(\n    args: GetInventoryPaymentConfigArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetInventoryPaymentConfigReturn>\n  listInventoryPaymentConfigs(\n    args: ListInventoryPaymentConfigsArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<ListInventoryPaymentConfigsReturn>\n  updateInventoryPaymentConfig(\n    args: UpdateInventoryPaymentConfigArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<UpdateInventoryPaymentConfigReturn>\n  deleteInventoryPaymentConfig(\n    args: DeleteInventoryPaymentConfigArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<DeleteInventoryPaymentConfigReturn>\n  requestInventoryPayment(\n    args: RequestInventoryPaymentArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<RequestInventoryPaymentReturn>\n}\n\nexport interface PingArgs {}\n\nexport interface PingReturn {\n  status: boolean\n}\nexport interface VersionArgs {}\n\nexport interface VersionReturn {\n  version: Version\n}\nexport interface RuntimeStatusArgs {}\n\nexport interface RuntimeStatusReturn {\n  status: RuntimeStatus\n}\nexport interface ClockArgs {}\n\nexport interface ClockReturn {\n  serverTime: string\n}\nexport interface GetSequenceContextArgs {}\n\nexport interface GetSequenceContextReturn {\n  data: SequenceContext\n}\nexport interface GetAuthTokenArgs {\n  ewtString: string\n  testnetMode?: boolean\n}\n\nexport interface GetAuthTokenReturn {\n  status: boolean\n  jwtToken: string\n  address: string\n  user?: User\n}\nexport interface GetAuthToken2Args {\n  ewtString: string\n  chainID: string\n}\n\nexport interface GetAuthToken2Return {\n  status: boolean\n  jwtToken: string\n  address: string\n  user?: User\n}\nexport interface SendPasswordlessLinkArgs {\n  email: string\n  redirectUri: string\n  intent: string\n}\n\nexport interface SendPasswordlessLinkReturn {\n  status: boolean\n}\nexport interface FriendListArgs {\n  nickname?: string\n  page?: Page\n}\n\nexport interface FriendListReturn {\n  page: Page\n  friends: Array<Friend>\n}\nexport interface GetFriendByAddressArgs {\n  friendAddress: string\n}\n\nexport interface GetFriendByAddressReturn {\n  status: boolean\n  friend: Friend\n}\nexport interface SearchFriendsArgs {\n  filterUsername: string\n  page?: Page\n}\n\nexport interface SearchFriendsReturn {\n  friends: Array<Friend>\n}\nexport interface AddFriendArgs {\n  friendAddress: string\n  optionalNickname?: string\n}\n\nexport interface AddFriendReturn {\n  status: boolean\n  friend?: Friend\n}\nexport interface UpdateFriendNicknameArgs {\n  friendAddress: string\n  nickname: string\n}\n\nexport interface UpdateFriendNicknameReturn {\n  status: boolean\n  friend?: Friend\n}\nexport interface RemoveFriendArgs {\n  friendAddress: string\n}\n\nexport interface RemoveFriendReturn {\n  status: boolean\n}\nexport interface ContractCallArgs {\n  chainID: string\n  contract: string\n  inputExpr: string\n  outputExpr: string\n  args: Array<string>\n}\n\nexport interface ContractCallReturn {\n  returns: Array<string>\n}\nexport interface DecodeContractCallArgs {\n  callData: string\n}\n\nexport interface DecodeContractCallReturn {\n  call: ContractCall\n}\nexport interface LookupContractCallSelectorsArgs {\n  selectors: Array<string>\n}\n\nexport interface LookupContractCallSelectorsReturn {\n  signatures: Array<Array<string>>\n}\nexport interface UserStorageFetchArgs {\n  key: string\n}\n\nexport interface UserStorageFetchReturn {\n  object: any\n}\nexport interface UserStorageSaveArgs {\n  key: string\n  object: any\n}\n\nexport interface UserStorageSaveReturn {\n  ok: boolean\n}\nexport interface UserStorageDeleteArgs {\n  key: string\n}\n\nexport interface UserStorageDeleteReturn {\n  ok: boolean\n}\nexport interface UserStorageFetchAllArgs {\n  keys?: Array<string>\n}\n\nexport interface UserStorageFetchAllReturn {\n  objects: { [key: string]: any }\n}\nexport interface GetMoonpayLinkArgs {\n  url: string\n}\n\nexport interface GetMoonpayLinkReturn {\n  signedUrl: string\n}\nexport interface GetSardineClientTokenArgs {}\n\nexport interface GetSardineClientTokenReturn {\n  token: string\n}\nexport interface GetSardineNFTCheckoutTokenArgs {\n  params: NftCheckoutParams\n}\n\nexport interface GetSardineNFTCheckoutTokenReturn {\n  resp: NftCheckout\n}\nexport interface GetSardineNFTCheckoutOrderStatusArgs {\n  orderId: string\n}\n\nexport interface GetSardineNFTCheckoutOrderStatusReturn {\n  resp: SardineOrder\n}\nexport interface ResolveENSAddressArgs {\n  ens: string\n}\n\nexport interface ResolveENSAddressReturn {\n  address: string\n  ok: boolean\n}\nexport interface IsValidSignatureArgs {\n  chainId: string\n  walletAddress: string\n  digest: string\n  signature: string\n}\n\nexport interface IsValidSignatureReturn {\n  isValid: boolean\n}\nexport interface IsValidMessageSignatureArgs {\n  chainId: string\n  walletAddress: string\n  message: string\n  signature: string\n}\n\nexport interface IsValidMessageSignatureReturn {\n  isValid: boolean\n}\nexport interface IsValidTypedDataSignatureArgs {\n  chainId: string\n  walletAddress: string\n  typedData: any\n  signature: string\n}\n\nexport interface IsValidTypedDataSignatureReturn {\n  isValid: boolean\n}\nexport interface IsValidETHAuthProofArgs {\n  chainId: string\n  walletAddress: string\n  ethAuthProofString: string\n}\n\nexport interface IsValidETHAuthProofReturn {\n  isValid: boolean\n}\nexport interface GetCoinPricesArgs {\n  tokens: Array<Token>\n}\n\nexport interface GetCoinPricesReturn {\n  tokenPrices: Array<TokenPrice>\n}\nexport interface GetCollectiblePricesArgs {\n  tokens: Array<Token>\n}\n\nexport interface GetCollectiblePricesReturn {\n  tokenPrices: Array<TokenPrice>\n}\nexport interface GetExchangeRateArgs {\n  toCurrency: string\n}\n\nexport interface GetExchangeRateReturn {\n  exchangeRate: ExchangeRate\n}\nexport interface MemoryStoreArgs {\n  key: string\n  value: string\n}\n\nexport interface MemoryStoreReturn {\n  ok: boolean\n}\nexport interface MemoryLoadArgs {\n  key: string\n}\n\nexport interface MemoryLoadReturn {\n  value: string\n}\nexport interface GetInviteInfoArgs {}\n\nexport interface GetInviteInfoReturn {\n  inviteInfo: InviteInfo\n}\nexport interface IsValidAccessCodeArgs {\n  accessCode: string\n}\n\nexport interface IsValidAccessCodeReturn {\n  status: boolean\n}\nexport interface InternalClaimAccessCodeArgs {\n  address: string\n  accessCode: string\n}\n\nexport interface InternalClaimAccessCodeReturn {\n  status: boolean\n}\nexport interface BlockNumberAtTimeArgs {\n  chainId: number\n  timestamps: Array<number>\n}\n\nexport interface BlockNumberAtTimeReturn {\n  blocks: Array<number>\n}\nexport interface PaperSessionSecretArgs {\n  chainName: string\n  contractAddress: string\n  paramsJson: string\n  contractType: string\n}\n\nexport interface PaperSessionSecretReturn {\n  secret: string\n}\nexport interface PaperSessionSecret2Args {\n  chainName: string\n  contractAddress: string\n  paramsJson: string\n  abi: string\n}\n\nexport interface PaperSessionSecret2Return {\n  secret: string\n}\nexport interface LinkWalletArgs {\n  chainId: string\n  walletAddress: string\n  ethAuthProofString: string\n  linkedWalletMessage: string\n  linkedWalletSignature: string\n}\n\nexport interface LinkWalletReturn {\n  status: boolean\n  linkedWalletAddress: string\n}\nexport interface GetLinkedWalletsArgs {\n  walletAddress: string\n}\n\nexport interface GetLinkedWalletsReturn {\n  linkedWallets: Array<string>\n}\nexport interface RemoveLinkedWalletArgs {\n  chainId: string\n  walletAddress: string\n  ethAuthProofString: string\n  linkedWalletMessage: string\n  linkedWalletSignature: string\n}\n\nexport interface RemoveLinkedWalletReturn {\n  status: boolean\n}\nexport interface GenerateWaaSVerificationURLArgs {\n  walletAddress: string\n}\n\nexport interface GenerateWaaSVerificationURLReturn {\n  nonce: string\n  verificationURL: string\n}\nexport interface ValidateWaaSVerificationNonceArgs {\n  nonce: string\n  signature: string\n  sessionId: string\n  chainId: string\n}\n\nexport interface ValidateWaaSVerificationNonceReturn {\n  walletAddress: string\n}\nexport interface GetSwapQuotesArgs {\n  userAddress: string\n  currencyAddress: string\n  currencyAmount: string\n  chainId: number\n  includeApprove: boolean\n}\n\nexport interface GetSwapQuotesReturn {\n  swapQuotes: Array<SwapQuote>\n}\nexport interface AddCurrencyGroupArgs {\n  currencyGroup: CurrencyGroup\n}\n\nexport interface AddCurrencyGroupReturn {\n  groupId: number\n}\nexport interface UpdateCurrencyGroupArgs {\n  currencyGroup: CurrencyGroup\n}\n\nexport interface UpdateCurrencyGroupReturn {}\nexport interface ListCurrencyGroupsArgs {}\n\nexport interface ListCurrencyGroupsReturn {\n  currencyGroups: Array<CurrencyGroup>\n}\nexport interface DeleteCurrencyGroupArgs {\n  groupId: number\n}\n\nexport interface DeleteCurrencyGroupReturn {\n  ok: boolean\n}\nexport interface AddInventoryPaymentConfigArgs {\n  config: InventoryPaymentConfig\n}\n\nexport interface AddInventoryPaymentConfigReturn {\n  configId: number\n}\nexport interface GetInventoryPaymentConfigArgs {\n  configId: number\n}\n\nexport interface GetInventoryPaymentConfigReturn {\n  config: InventoryPaymentConfig\n}\nexport interface ListInventoryPaymentConfigsArgs {\n  projectId: number\n}\n\nexport interface ListInventoryPaymentConfigsReturn {\n  configs: Array<InventoryPaymentConfig>\n}\nexport interface UpdateInventoryPaymentConfigArgs {\n  config: InventoryPaymentConfig\n}\n\nexport interface UpdateInventoryPaymentConfigReturn {}\nexport interface DeleteInventoryPaymentConfigArgs {\n  configId: number\n}\n\nexport interface DeleteInventoryPaymentConfigReturn {\n  ok: boolean\n}\nexport interface RequestInventoryPaymentArgs {\n  configId: number\n  recipient: string\n  chainId?: number\n  tokenAddress?: string\n}\n\nexport interface RequestInventoryPaymentReturn {\n  payment: InventoryPaymentResponse\n}\n\n//\n// Client\n//\nexport class API implements API {\n  protected hostname: string\n  protected fetch: Fetch\n  protected path = '/rpc/API/'\n\n  constructor(hostname: string, fetch: Fetch) {\n    this.hostname = hostname\n    this.fetch = (input: RequestInfo, init?: RequestInit) => fetch(input, init)\n  }\n\n  private url(name: string): string {\n    return this.hostname + this.path + name\n  }\n\n  ping = (headers?: object, signal?: AbortSignal): Promise<PingReturn> => {\n    return this.fetch(this.url('Ping'), createHTTPRequest({}, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  version = (headers?: object, signal?: AbortSignal): Promise<VersionReturn> => {\n    return this.fetch(this.url('Version'), createHTTPRequest({}, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            version: <Version>_data.version\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  runtimeStatus = (headers?: object, signal?: AbortSignal): Promise<RuntimeStatusReturn> => {\n    return this.fetch(this.url('RuntimeStatus'), createHTTPRequest({}, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <RuntimeStatus>_data.status\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  clock = (headers?: object, signal?: AbortSignal): Promise<ClockReturn> => {\n    return this.fetch(this.url('Clock'), createHTTPRequest({}, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            serverTime: <string>_data.serverTime\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getSequenceContext = (headers?: object, signal?: AbortSignal): Promise<GetSequenceContextReturn> => {\n    return this.fetch(this.url('GetSequenceContext'), createHTTPRequest({}, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            data: <SequenceContext>_data.data\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getAuthToken = (args: GetAuthTokenArgs, headers?: object, signal?: AbortSignal): Promise<GetAuthTokenReturn> => {\n    return this.fetch(this.url('GetAuthToken'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status,\n            jwtToken: <string>_data.jwtToken,\n            address: <string>_data.address,\n            user: <User>_data.user\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getAuthToken2 = (args: GetAuthToken2Args, headers?: object, signal?: AbortSignal): Promise<GetAuthToken2Return> => {\n    return this.fetch(this.url('GetAuthToken2'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status,\n            jwtToken: <string>_data.jwtToken,\n            address: <string>_data.address,\n            user: <User>_data.user\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  sendPasswordlessLink = (\n    args: SendPasswordlessLinkArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<SendPasswordlessLinkReturn> => {\n    return this.fetch(this.url('SendPasswordlessLink'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  friendList = (args: FriendListArgs, headers?: object, signal?: AbortSignal): Promise<FriendListReturn> => {\n    return this.fetch(this.url('FriendList'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            page: <Page>_data.page,\n            friends: <Array<Friend>>_data.friends\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getFriendByAddress = (\n    args: GetFriendByAddressArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetFriendByAddressReturn> => {\n    return this.fetch(this.url('GetFriendByAddress'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status,\n            friend: <Friend>_data.friend\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  searchFriends = (args: SearchFriendsArgs, headers?: object, signal?: AbortSignal): Promise<SearchFriendsReturn> => {\n    return this.fetch(this.url('SearchFriends'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            friends: <Array<Friend>>_data.friends\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  addFriend = (args: AddFriendArgs, headers?: object, signal?: AbortSignal): Promise<AddFriendReturn> => {\n    return this.fetch(this.url('AddFriend'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status,\n            friend: <Friend>_data.friend\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  updateFriendNickname = (\n    args: UpdateFriendNicknameArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<UpdateFriendNicknameReturn> => {\n    return this.fetch(this.url('UpdateFriendNickname'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status,\n            friend: <Friend>_data.friend\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  removeFriend = (args: RemoveFriendArgs, headers?: object, signal?: AbortSignal): Promise<RemoveFriendReturn> => {\n    return this.fetch(this.url('RemoveFriend'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  contractCall = (args: ContractCallArgs, headers?: object, signal?: AbortSignal): Promise<ContractCallReturn> => {\n    return this.fetch(this.url('ContractCall'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            returns: <Array<string>>_data.returns\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  decodeContractCall = (\n    args: DecodeContractCallArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<DecodeContractCallReturn> => {\n    return this.fetch(this.url('DecodeContractCall'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            call: <ContractCall>_data.call\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  lookupContractCallSelectors = (\n    args: LookupContractCallSelectorsArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<LookupContractCallSelectorsReturn> => {\n    return this.fetch(this.url('LookupContractCallSelectors'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            signatures: <Array<Array<string>>>_data.signatures\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  userStorageFetch = (args: UserStorageFetchArgs, headers?: object, signal?: AbortSignal): Promise<UserStorageFetchReturn> => {\n    return this.fetch(this.url('UserStorageFetch'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            object: <any>_data.object\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  userStorageSave = (args: UserStorageSaveArgs, headers?: object, signal?: AbortSignal): Promise<UserStorageSaveReturn> => {\n    return this.fetch(this.url('UserStorageSave'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            ok: <boolean>_data.ok\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  userStorageDelete = (args: UserStorageDeleteArgs, headers?: object, signal?: AbortSignal): Promise<UserStorageDeleteReturn> => {\n    return this.fetch(this.url('UserStorageDelete'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            ok: <boolean>_data.ok\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  userStorageFetchAll = (\n    args: UserStorageFetchAllArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<UserStorageFetchAllReturn> => {\n    return this.fetch(this.url('UserStorageFetchAll'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            objects: <{ [key: string]: any }>_data.objects\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getMoonpayLink = (args: GetMoonpayLinkArgs, headers?: object, signal?: AbortSignal): Promise<GetMoonpayLinkReturn> => {\n    return this.fetch(this.url('GetMoonpayLink'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            signedUrl: <string>_data.signedUrl\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getSardineClientToken = (headers?: object, signal?: AbortSignal): Promise<GetSardineClientTokenReturn> => {\n    return this.fetch(this.url('GetSardineClientToken'), createHTTPRequest({}, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            token: <string>_data.token\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getSardineNFTCheckoutToken = (\n    args: GetSardineNFTCheckoutTokenArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetSardineNFTCheckoutTokenReturn> => {\n    return this.fetch(this.url('GetSardineNFTCheckoutToken'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            resp: <NftCheckout>_data.resp\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getSardineNFTCheckoutOrderStatus = (\n    args: GetSardineNFTCheckoutOrderStatusArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetSardineNFTCheckoutOrderStatusReturn> => {\n    return this.fetch(this.url('GetSardineNFTCheckoutOrderStatus'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            resp: <SardineOrder>_data.resp\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  resolveENSAddress = (args: ResolveENSAddressArgs, headers?: object, signal?: AbortSignal): Promise<ResolveENSAddressReturn> => {\n    return this.fetch(this.url('ResolveENSAddress'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            address: <string>_data.address,\n            ok: <boolean>_data.ok\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  isValidSignature = (args: IsValidSignatureArgs, headers?: object, signal?: AbortSignal): Promise<IsValidSignatureReturn> => {\n    return this.fetch(this.url('IsValidSignature'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            isValid: <boolean>_data.isValid\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  isValidMessageSignature = (\n    args: IsValidMessageSignatureArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<IsValidMessageSignatureReturn> => {\n    return this.fetch(this.url('IsValidMessageSignature'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            isValid: <boolean>_data.isValid\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  isValidTypedDataSignature = (\n    args: IsValidTypedDataSignatureArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<IsValidTypedDataSignatureReturn> => {\n    return this.fetch(this.url('IsValidTypedDataSignature'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            isValid: <boolean>_data.isValid\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  isValidETHAuthProof = (\n    args: IsValidETHAuthProofArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<IsValidETHAuthProofReturn> => {\n    return this.fetch(this.url('IsValidETHAuthProof'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            isValid: <boolean>_data.isValid\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getCoinPrices = (args: GetCoinPricesArgs, headers?: object, signal?: AbortSignal): Promise<GetCoinPricesReturn> => {\n    return this.fetch(this.url('GetCoinPrices'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            tokenPrices: <Array<TokenPrice>>_data.tokenPrices\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getCollectiblePrices = (\n    args: GetCollectiblePricesArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetCollectiblePricesReturn> => {\n    return this.fetch(this.url('GetCollectiblePrices'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            tokenPrices: <Array<TokenPrice>>_data.tokenPrices\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getExchangeRate = (args: GetExchangeRateArgs, headers?: object, signal?: AbortSignal): Promise<GetExchangeRateReturn> => {\n    return this.fetch(this.url('GetExchangeRate'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            exchangeRate: <ExchangeRate>_data.exchangeRate\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  memoryStore = (args: MemoryStoreArgs, headers?: object, signal?: AbortSignal): Promise<MemoryStoreReturn> => {\n    return this.fetch(this.url('MemoryStore'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            ok: <boolean>_data.ok\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  memoryLoad = (args: MemoryLoadArgs, headers?: object, signal?: AbortSignal): Promise<MemoryLoadReturn> => {\n    return this.fetch(this.url('MemoryLoad'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            value: <string>_data.value\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getInviteInfo = (headers?: object, signal?: AbortSignal): Promise<GetInviteInfoReturn> => {\n    return this.fetch(this.url('GetInviteInfo'), createHTTPRequest({}, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            inviteInfo: <InviteInfo>_data.inviteInfo\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  isValidAccessCode = (args: IsValidAccessCodeArgs, headers?: object, signal?: AbortSignal): Promise<IsValidAccessCodeReturn> => {\n    return this.fetch(this.url('IsValidAccessCode'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  internalClaimAccessCode = (\n    args: InternalClaimAccessCodeArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<InternalClaimAccessCodeReturn> => {\n    return this.fetch(this.url('InternalClaimAccessCode'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  blockNumberAtTime = (args: BlockNumberAtTimeArgs, headers?: object, signal?: AbortSignal): Promise<BlockNumberAtTimeReturn> => {\n    return this.fetch(this.url('BlockNumberAtTime'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            blocks: <Array<number>>_data.blocks\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  paperSessionSecret = (\n    args: PaperSessionSecretArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<PaperSessionSecretReturn> => {\n    return this.fetch(this.url('PaperSessionSecret'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            secret: <string>_data.secret\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  paperSessionSecret2 = (\n    args: PaperSessionSecret2Args,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<PaperSessionSecret2Return> => {\n    return this.fetch(this.url('PaperSessionSecret2'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            secret: <string>_data.secret\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  linkWallet = (args: LinkWalletArgs, headers?: object, signal?: AbortSignal): Promise<LinkWalletReturn> => {\n    return this.fetch(this.url('LinkWallet'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status,\n            linkedWalletAddress: <string>_data.linkedWalletAddress\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getLinkedWallets = (args: GetLinkedWalletsArgs, headers?: object, signal?: AbortSignal): Promise<GetLinkedWalletsReturn> => {\n    return this.fetch(this.url('GetLinkedWallets'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            linkedWallets: <Array<string>>_data.linkedWallets\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  removeLinkedWallet = (\n    args: RemoveLinkedWalletArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<RemoveLinkedWalletReturn> => {\n    return this.fetch(this.url('RemoveLinkedWallet'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  generateWaaSVerificationURL = (\n    args: GenerateWaaSVerificationURLArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GenerateWaaSVerificationURLReturn> => {\n    return this.fetch(this.url('GenerateWaaSVerificationURL'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            nonce: <string>_data.nonce,\n            verificationURL: <string>_data.verificationURL\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  validateWaaSVerificationNonce = (\n    args: ValidateWaaSVerificationNonceArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<ValidateWaaSVerificationNonceReturn> => {\n    return this.fetch(this.url('ValidateWaaSVerificationNonce'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            walletAddress: <string>_data.walletAddress\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getSwapQuotes = (args: GetSwapQuotesArgs, headers?: object, signal?: AbortSignal): Promise<GetSwapQuotesReturn> => {\n    return this.fetch(this.url('GetSwapQuotes'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            swapQuotes: <Array<SwapQuote>>_data.swapQuotes\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  addCurrencyGroup = (args: AddCurrencyGroupArgs, headers?: object, signal?: AbortSignal): Promise<AddCurrencyGroupReturn> => {\n    return this.fetch(this.url('AddCurrencyGroup'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            groupId: <number>_data.groupId\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  updateCurrencyGroup = (\n    args: UpdateCurrencyGroupArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<UpdateCurrencyGroupReturn> => {\n    return this.fetch(this.url('UpdateCurrencyGroup'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {}\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  listCurrencyGroups = (headers?: object, signal?: AbortSignal): Promise<ListCurrencyGroupsReturn> => {\n    return this.fetch(this.url('ListCurrencyGroups'), createHTTPRequest({}, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            currencyGroups: <Array<CurrencyGroup>>_data.currencyGroups\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  deleteCurrencyGroup = (\n    args: DeleteCurrencyGroupArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<DeleteCurrencyGroupReturn> => {\n    return this.fetch(this.url('DeleteCurrencyGroup'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            ok: <boolean>_data.ok\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  addInventoryPaymentConfig = (\n    args: AddInventoryPaymentConfigArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<AddInventoryPaymentConfigReturn> => {\n    return this.fetch(this.url('AddInventoryPaymentConfig'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            configId: <number>_data.configId\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getInventoryPaymentConfig = (\n    args: GetInventoryPaymentConfigArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetInventoryPaymentConfigReturn> => {\n    return this.fetch(this.url('GetInventoryPaymentConfig'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            config: <InventoryPaymentConfig>_data.config\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  listInventoryPaymentConfigs = (\n    args: ListInventoryPaymentConfigsArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<ListInventoryPaymentConfigsReturn> => {\n    return this.fetch(this.url('ListInventoryPaymentConfigs'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            configs: <Array<InventoryPaymentConfig>>_data.configs\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  updateInventoryPaymentConfig = (\n    args: UpdateInventoryPaymentConfigArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<UpdateInventoryPaymentConfigReturn> => {\n    return this.fetch(this.url('UpdateInventoryPaymentConfig'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {}\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  deleteInventoryPaymentConfig = (\n    args: DeleteInventoryPaymentConfigArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<DeleteInventoryPaymentConfigReturn> => {\n    return this.fetch(this.url('DeleteInventoryPaymentConfig'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            ok: <boolean>_data.ok\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  requestInventoryPayment = (\n    args: RequestInventoryPaymentArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<RequestInventoryPaymentReturn> => {\n    return this.fetch(this.url('RequestInventoryPayment'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            payment: <InventoryPaymentResponse>_data.payment\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n}\n\nconst createHTTPRequest = (body: object = {}, headers: object = {}, signal: AbortSignal | null = null): object => {\n  return {\n    method: 'POST',\n    headers: { ...headers, 'Content-Type': 'application/json' },\n    body: JSON.stringify(body || {}),\n    signal\n  }\n}\n\nconst buildResponse = (res: Response): Promise<any> => {\n  return res.text().then(text => {\n    let data\n    try {\n      data = JSON.parse(text)\n    } catch (error) {\n      let message = ''\n      if (error instanceof Error) {\n        message = error.message\n      }\n      throw WebrpcBadResponseError.new({\n        status: res.status,\n        cause: `JSON.parse(): ${message}: response text: ${text}`\n      })\n    }\n    if (!res.ok) {\n      const code: number = typeof data.code === 'number' ? data.code : 0\n      throw (webrpcErrorByCode[code] || WebrpcError).new(data)\n    }\n    return data\n  })\n}\n\n//\n// Errors\n//\n\nexport class WebrpcError extends Error {\n  name: string\n  code: number\n  message: string\n  status: number\n  cause?: string\n\n  /** @deprecated Use message instead of msg. Deprecated in webrpc v0.11.0. */\n  msg: string\n\n  constructor(name: string, code: number, message: string, status: number, cause?: string) {\n    super(message)\n    this.name = name || 'WebrpcError'\n    this.code = typeof code === 'number' ? code : 0\n    this.message = message || `endpoint error ${this.code}`\n    this.msg = this.message\n    this.status = typeof status === 'number' ? status : 0\n    this.cause = cause\n    Object.setPrototypeOf(this, WebrpcError.prototype)\n  }\n\n  static new(payload: any): WebrpcError {\n    return new this(payload.error, payload.code, payload.message || payload.msg, payload.status, payload.cause)\n  }\n}\n\n// Webrpc errors\n\nexport class WebrpcEndpointError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcEndpoint',\n    code: number = 0,\n    message: string = 'endpoint error',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcEndpointError.prototype)\n  }\n}\n\nexport class WebrpcRequestFailedError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcRequestFailed',\n    code: number = -1,\n    message: string = 'request failed',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcRequestFailedError.prototype)\n  }\n}\n\nexport class WebrpcBadRouteError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcBadRoute',\n    code: number = -2,\n    message: string = 'bad route',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcBadRouteError.prototype)\n  }\n}\n\nexport class WebrpcBadMethodError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcBadMethod',\n    code: number = -3,\n    message: string = 'bad method',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcBadMethodError.prototype)\n  }\n}\n\nexport class WebrpcBadRequestError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcBadRequest',\n    code: number = -4,\n    message: string = 'bad request',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcBadRequestError.prototype)\n  }\n}\n\nexport class WebrpcBadResponseError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcBadResponse',\n    code: number = -5,\n    message: string = 'bad response',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcBadResponseError.prototype)\n  }\n}\n\nexport class WebrpcServerPanicError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcServerPanic',\n    code: number = -6,\n    message: string = 'server panic',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcServerPanicError.prototype)\n  }\n}\n\nexport class WebrpcInternalErrorError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcInternalError',\n    code: number = -7,\n    message: string = 'internal error',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcInternalErrorError.prototype)\n  }\n}\n\nexport class WebrpcClientDisconnectedError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcClientDisconnected',\n    code: number = -8,\n    message: string = 'client disconnected',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcClientDisconnectedError.prototype)\n  }\n}\n\nexport class WebrpcStreamLostError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcStreamLost',\n    code: number = -9,\n    message: string = 'stream lost',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcStreamLostError.prototype)\n  }\n}\n\nexport class WebrpcStreamFinishedError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcStreamFinished',\n    code: number = -10,\n    message: string = 'stream finished',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcStreamFinishedError.prototype)\n  }\n}\n\n// Schema errors\n\nexport class UnauthorizedError extends WebrpcError {\n  constructor(\n    name: string = 'Unauthorized',\n    code: number = 1000,\n    message: string = 'Unauthorized access',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, UnauthorizedError.prototype)\n  }\n}\n\nexport class PermissionDeniedError extends WebrpcError {\n  constructor(\n    name: string = 'PermissionDenied',\n    code: number = 1001,\n    message: string = 'Permission denied',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, PermissionDeniedError.prototype)\n  }\n}\n\nexport class SessionExpiredError extends WebrpcError {\n  constructor(\n    name: string = 'SessionExpired',\n    code: number = 1002,\n    message: string = 'Session expired',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, SessionExpiredError.prototype)\n  }\n}\n\nexport class AbortedError extends WebrpcError {\n  constructor(\n    name: string = 'Aborted',\n    code: number = 1005,\n    message: string = 'Request aborted',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, AbortedError.prototype)\n  }\n}\n\nexport class GeoblockedError extends WebrpcError {\n  constructor(\n    name: string = 'Geoblocked',\n    code: number = 1006,\n    message: string = 'Geoblocked region',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, GeoblockedError.prototype)\n  }\n}\n\nexport class InvalidArgumentError extends WebrpcError {\n  constructor(\n    name: string = 'InvalidArgument',\n    code: number = 2000,\n    message: string = 'Invalid argument',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, InvalidArgumentError.prototype)\n  }\n}\n\nexport class UnavailableError extends WebrpcError {\n  constructor(\n    name: string = 'Unavailable',\n    code: number = 2002,\n    message: string = 'Unavailable resource',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, UnavailableError.prototype)\n  }\n}\n\nexport class QueryFailedError extends WebrpcError {\n  constructor(\n    name: string = 'QueryFailed',\n    code: number = 2003,\n    message: string = 'Query failed',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, QueryFailedError.prototype)\n  }\n}\n\nexport class NotFoundError extends WebrpcError {\n  constructor(\n    name: string = 'NotFound',\n    code: number = 3000,\n    message: string = 'Resource not found',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, NotFoundError.prototype)\n  }\n}\n\nexport enum errors {\n  WebrpcEndpoint = 'WebrpcEndpoint',\n  WebrpcRequestFailed = 'WebrpcRequestFailed',\n  WebrpcBadRoute = 'WebrpcBadRoute',\n  WebrpcBadMethod = 'WebrpcBadMethod',\n  WebrpcBadRequest = 'WebrpcBadRequest',\n  WebrpcBadResponse = 'WebrpcBadResponse',\n  WebrpcServerPanic = 'WebrpcServerPanic',\n  WebrpcInternalError = 'WebrpcInternalError',\n  WebrpcClientDisconnected = 'WebrpcClientDisconnected',\n  WebrpcStreamLost = 'WebrpcStreamLost',\n  WebrpcStreamFinished = 'WebrpcStreamFinished',\n  Unauthorized = 'Unauthorized',\n  PermissionDenied = 'PermissionDenied',\n  SessionExpired = 'SessionExpired',\n  Aborted = 'Aborted',\n  Geoblocked = 'Geoblocked',\n  InvalidArgument = 'InvalidArgument',\n  Unavailable = 'Unavailable',\n  QueryFailed = 'QueryFailed',\n  NotFound = 'NotFound'\n}\n\nconst webrpcErrorByCode: { [code: number]: any } = {\n  [0]: WebrpcEndpointError,\n  [-1]: WebrpcRequestFailedError,\n  [-2]: WebrpcBadRouteError,\n  [-3]: WebrpcBadMethodError,\n  [-4]: WebrpcBadRequestError,\n  [-5]: WebrpcBadResponseError,\n  [-6]: WebrpcServerPanicError,\n  [-7]: WebrpcInternalErrorError,\n  [-8]: WebrpcClientDisconnectedError,\n  [-9]: WebrpcStreamLostError,\n  [-10]: WebrpcStreamFinishedError,\n  [1000]: UnauthorizedError,\n  [1001]: PermissionDeniedError,\n  [1002]: SessionExpiredError,\n  [1005]: AbortedError,\n  [1006]: GeoblockedError,\n  [2000]: InvalidArgumentError,\n  [2002]: UnavailableError,\n  [2003]: QueryFailedError,\n  [3000]: NotFoundError\n}\n\nexport type Fetch = (input: RequestInfo, init?: RequestInit) => Promise<Response>\n","export * from './api.gen'\n\nimport { API as ApiRpc } from './api.gen'\n\nconst fetch = globalThis.fetch\n\nexport class SequenceAPIClient extends ApiRpc {\n  constructor(\n    hostname: string,\n    public projectAccessKey?: string,\n    public jwtAuth?: string\n  ) {\n    super(hostname.endsWith('/') ? hostname.slice(0, -1) : hostname, fetch)\n    this.fetch = this._fetch\n  }\n\n  _fetch = (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n    // automatically include jwt and access key auth header to requests\n    // if its been set on the api client\n    const headers: { [key: string]: any } = {}\n\n    const jwtAuth = this.jwtAuth\n    const projectAccessKey = this.projectAccessKey\n\n    if (jwtAuth && jwtAuth.length > 0) {\n      headers['Authorization'] = `BEARER ${jwtAuth}`\n    }\n\n    if (projectAccessKey && projectAccessKey.length > 0) {\n      headers['X-Access-Key'] = projectAccessKey\n    }\n\n    // before the request is made\n    init!.headers = { ...init!.headers, ...headers }\n\n    return fetch(input, init)\n  }\n}\n","/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.7';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it) => new Uint8Array(Array.prototype.slice.call(it, 0));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = typeof btoa === 'function' ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = typeof atob === 'function' ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a).split('').map(c => c.charCodeAt(0)));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n","import { ethers } from 'ethers';\nimport { Base64 } from 'js-base64';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\n\nvar encodeTypedDataHash = function (typedData) {\r\n    return ethers.TypedDataEncoder.hash(typedData.domain, typedData.types, typedData.message);\r\n};\r\nvar encodeTypedDataDigest = function (typedData) {\r\n    var hash = encodeTypedDataHash(typedData);\r\n    var digest = ethers.getBytes(ethers.keccak256(hash));\r\n    return digest;\r\n};\n\nvar ETHAuthVersion = '1';\r\nvar ETHAuthPrefix = 'eth';\r\nvar ETHAuthEIP712Domain = {\r\n    name: 'ETHAuth',\r\n    version: ETHAuthVersion\r\n};\r\nvar Proof = /** @class */ (function () {\r\n    function Proof(args) {\r\n        this.prefix = ETHAuthPrefix;\r\n        this.address = (args === null || args === void 0 ? void 0 : args.address) ? args.address.toLowerCase() : '';\r\n        this.claims = (args === null || args === void 0 ? void 0 : args.claims) ? args.claims : { app: '', iat: 0, exp: 0, v: ETHAuthVersion };\r\n        this.signature = (args === null || args === void 0 ? void 0 : args.signature) ? args.signature : '';\r\n        this.extra = (args === null || args === void 0 ? void 0 : args.extra) ? args.extra : '';\r\n    }\r\n    Proof.prototype.setIssuedAtNow = function () {\r\n        this.claims.iat = Math.round(new Date().getTime() / 1000);\r\n    };\r\n    Proof.prototype.setExpiryIn = function (seconds) {\r\n        this.claims.exp = Math.round(new Date().getTime() / 1000) + seconds;\r\n    };\r\n    Proof.prototype.validateClaims = function () {\r\n        return validateClaims(this.claims);\r\n    };\r\n    Proof.prototype.messageDigest = function () {\r\n        var isValid = this.validateClaims();\r\n        if (isValid.err) {\r\n            throw isValid.err;\r\n        }\r\n        return ethers.getBytes(encodeTypedDataHash(this.messageTypedData()));\r\n    };\r\n    Proof.prototype.messageTypedData = function () {\r\n        var domain = __assign({}, ETHAuthEIP712Domain);\r\n        var types = {\r\n            Claims: []\r\n        };\r\n        var message = {};\r\n        var typedData = { domain: domain, types: types, message: message };\r\n        if (this.claims.app && this.claims.app.length > 0) {\r\n            typedData.types.Claims.push({ name: 'app', type: 'string' });\r\n            typedData.message['app'] = this.claims.app;\r\n        }\r\n        if (this.claims.iat && this.claims.iat > 0) {\r\n            typedData.types.Claims.push({ name: 'iat', type: 'int64' });\r\n            typedData.message['iat'] = this.claims.iat;\r\n        }\r\n        if (this.claims.exp && this.claims.exp > 0) {\r\n            typedData.types.Claims.push({ name: 'exp', type: 'int64' });\r\n            typedData.message['exp'] = this.claims.exp;\r\n        }\r\n        if (this.claims.n && this.claims.n > 0) {\r\n            typedData.types.Claims.push({ name: 'n', type: 'uint64' });\r\n            typedData.message['n'] = this.claims.n;\r\n        }\r\n        if (this.claims.typ && this.claims.typ.length > 0) {\r\n            typedData.types.Claims.push({ name: 'typ', type: 'string' });\r\n            typedData.message['typ'] = this.claims.typ;\r\n        }\r\n        if (this.claims.ogn && this.claims.ogn.length > 0) {\r\n            typedData.types.Claims.push({ name: 'ogn', type: 'string' });\r\n            typedData.message['ogn'] = this.claims.ogn;\r\n        }\r\n        if (this.claims.v && this.claims.v.length > 0) {\r\n            typedData.types.Claims.push({ name: 'v', type: 'string' });\r\n            typedData.message['v'] = this.claims.v;\r\n        }\r\n        return typedData;\r\n    };\r\n    return Proof;\r\n}());\r\nvar validateClaims = function (claims) {\r\n    if (claims.app === '') {\r\n        return { ok: false, err: new Error('claims: app is empty') };\r\n    }\r\n    var now = Math.round(new Date().getTime() / 1000);\r\n    var drift = 5 * 60; // 5 minutes\r\n    var max = 60 * 60 * 24 * 365 + drift; // 1 year\r\n    if (claims.v === '') {\r\n        return { ok: false, err: new Error('claims: ethauth version is empty') };\r\n    }\r\n    if (claims.iat && claims.iat !== 0 && (claims.iat > now + drift || claims.iat < now - max)) {\r\n        return { ok: false, err: new Error('claims: iat is invalid') };\r\n    }\r\n    if (claims.exp < now - drift || claims.exp > now + max) {\r\n        return { ok: false, err: new Error('claims: token has expired') };\r\n    }\r\n    return { ok: true };\r\n};\n\n// ValidateEOAProof verifies the account proof, testing if the proof claims have been signed with an\r\n// EOA (externally owned account) and will return success/failture, the account address as a string, and any errors.\r\nvar ValidateEOAProof = function (provider, chainId, proof) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var messageDigest, address;\r\n    return __generator(this, function (_a) {\r\n        messageDigest = proof.messageDigest();\r\n        address = ethers.verifyMessage(messageDigest, proof.signature);\r\n        if (address.slice(0, 2) === '0x' && address.length === 42 && address.toLowerCase() === proof.address.toLowerCase()) {\r\n            return [2 /*return*/, { isValid: true, address: proof.address }];\r\n        }\r\n        else {\r\n            return [2 /*return*/, { isValid: false }];\r\n        }\r\n    });\r\n}); };\r\n// ValidateContractAccountProof verifies the account proof, testing if the\r\n// proof claims have been signed with a smart-contract based account by calling the EIP-1271\r\n// method of the remote contract. This method will return success/failure, the\r\n// account address as a string, and any errors. The wallet contract must be deployed in\r\n// order for this call to be successful. In order test an undeployed smart-wallet, you\r\n// will have to implement your own custom validator method.\r\nvar ValidateContractAccountProof = function (provider, chainId, proof) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var messageDigest, walletCode, abi, contract, isValidSignature;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (!provider || provider === undefined) {\r\n                    return [2 /*return*/, { isValid: false }];\r\n                }\r\n                messageDigest = proof.messageDigest();\r\n                return [4 /*yield*/, provider.getCode(proof.address)];\r\n            case 1:\r\n                walletCode = _a.sent();\r\n                if (walletCode === '0x' || walletCode.length <= 2) {\r\n                    throw new Error('ValidateContractAccountProof failed. unable to fetch wallet contract code');\r\n                }\r\n                abi = ['function isValidSignature(bytes32, bytes) public view returns (bytes4)'];\r\n                contract = new ethers.Contract(proof.address, abi, provider);\r\n                return [4 /*yield*/, contract.isValidSignature(messageDigest, ethers.getBytes(proof.signature))];\r\n            case 2:\r\n                isValidSignature = _a.sent();\r\n                if (isValidSignature === IsValidSignatureBytes32MagicValue) {\r\n                    return [2 /*return*/, { isValid: true, address: proof.address }];\r\n                }\r\n                else {\r\n                    return [2 /*return*/, { isValid: false }];\r\n                }\r\n        }\r\n    });\r\n}); };\r\n// IsValidSignatureBytes32 is the EIP-1271 magic value we test\r\nvar IsValidSignatureBytes32MagicValue = '0x1626ba7e';\n\nvar ETHAuth = /** @class */ (function () {\r\n    function ETHAuth() {\r\n        var validators = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            validators[_i] = arguments[_i];\r\n        }\r\n        var _this = this;\r\n        this.configJsonRpcProvider = function (ethereumJsonRpcURL) { return __awaiter(_this, void 0, void 0, function () {\r\n            var netVersion;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.provider = new ethers.JsonRpcProvider(ethereumJsonRpcURL);\r\n                        return [4 /*yield*/, this.provider.send('net_version', [])];\r\n                    case 1:\r\n                        netVersion = _a.sent();\r\n                        this.chainId = parseInt(netVersion);\r\n                        if (!this.chainId) {\r\n                            throw new Error('ethauth: unable to get chainId');\r\n                        }\r\n                        this.ethereumJsonRpcURL = ethereumJsonRpcURL;\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); };\r\n        this.configValidators = function () {\r\n            var validators = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                validators[_i] = arguments[_i];\r\n            }\r\n            if (validators.length == 0) {\r\n                throw new Error('validators list is empty');\r\n            }\r\n            _this.validators = validators;\r\n        };\r\n        this.encodeProof = function (proof, skipSignatureValidation) {\r\n            if (skipSignatureValidation === void 0) { skipSignatureValidation = false; }\r\n            return __awaiter(_this, void 0, void 0, function () {\r\n                var isValid, claimsJSON, proofString;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            if (proof.address.length !== 42 || proof.address.slice(0, 2) !== '0x') {\r\n                                throw new Error('ethauth: invalid address');\r\n                            }\r\n                            if (proof.signature === '' || proof.signature.slice(0, 2) !== '0x') {\r\n                                throw new Error('ethauth: invalid signature');\r\n                            }\r\n                            if (proof.extra && proof.extra.slice(0, 2) !== '0x') {\r\n                                throw new Error('ethauth: invalid extra encoding, expecting hex data');\r\n                            }\r\n                            return [4 /*yield*/, this.validateProof(proof, skipSignatureValidation)];\r\n                        case 1:\r\n                            isValid = _a.sent();\r\n                            if (!isValid) {\r\n                                throw new Error(\"ethauth: proof is invalid\");\r\n                            }\r\n                            claimsJSON = JSON.stringify(proof.claims);\r\n                            proofString = ETHAuthPrefix + '.' + proof.address.toLowerCase() + '.' + Base64.encode(claimsJSON, true) + '.' + proof.signature;\r\n                            if (proof.extra && proof.extra.length > 0) {\r\n                                proofString += '.' + proof.extra;\r\n                            }\r\n                            return [2 /*return*/, proofString];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        this.decodeProof = function (proofString, skipSignatureValidation) {\r\n            if (skipSignatureValidation === void 0) { skipSignatureValidation = false; }\r\n            return __awaiter(_this, void 0, void 0, function () {\r\n                var parts, prefix, address, messageBase64, signature, extra, message, claims, proof, isValid;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            parts = proofString.split('.');\r\n                            if (parts.length < 4 || parts.length > 5) {\r\n                                throw new Error('ethauth: invalid proof string');\r\n                            }\r\n                            prefix = parts[0], address = parts[1], messageBase64 = parts[2], signature = parts[3], extra = parts[4];\r\n                            // check prefix\r\n                            if (prefix !== ETHAuthPrefix) {\r\n                                throw new Error('ethauth: not an ethauth proof');\r\n                            }\r\n                            message = Base64.decode(messageBase64);\r\n                            claims = JSON.parse(message);\r\n                            proof = new Proof({ address: address, claims: claims, signature: signature, extra: extra });\r\n                            return [4 /*yield*/, this.validateProof(proof, skipSignatureValidation)];\r\n                        case 1:\r\n                            isValid = _a.sent();\r\n                            if (!isValid) {\r\n                                throw new Error(\"ethauth: proof is invalid\");\r\n                            }\r\n                            return [2 /*return*/, proof];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        this.validateProof = function (proof, skipSignatureValidation) {\r\n            if (skipSignatureValidation === void 0) { skipSignatureValidation = false; }\r\n            return __awaiter(_this, void 0, void 0, function () {\r\n                var isValidClaims, isValidSig;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            isValidClaims = this.validateProofClaims(proof);\r\n                            if (isValidClaims.err) {\r\n                                throw new Error(\"ethauth: proof claims are invalid \".concat(isValidClaims.err));\r\n                            }\r\n                            if (!(skipSignatureValidation !== true)) return [3 /*break*/, 2];\r\n                            return [4 /*yield*/, this.validateProofSignature(proof)];\r\n                        case 1:\r\n                            isValidSig = _a.sent();\r\n                            if (isValidSig !== true) {\r\n                                throw new Error('ethauth: proof signature is invalid');\r\n                            }\r\n                            _a.label = 2;\r\n                        case 2: return [2 /*return*/, true];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        this.validateProofSignature = function (proof) { return __awaiter(_this, void 0, void 0, function () {\r\n            var retIsValid, i, validator, isValid, i;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        retIsValid = [];\r\n                        i = 0;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        if (!(i < this.validators.length)) return [3 /*break*/, 6];\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 4, , 5]);\r\n                        validator = this.validators[i];\r\n                        return [4 /*yield*/, validator(this.provider, this.chainId, proof)];\r\n                    case 3:\r\n                        isValid = (_a.sent()).isValid;\r\n                        if (isValid === true) {\r\n                            // preemptively return true if we've determined it to be valid\r\n                            return [2 /*return*/, true];\r\n                        }\r\n                        retIsValid.push(isValid);\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        _a.sent();\r\n                        retIsValid.push(false);\r\n                        return [3 /*break*/, 5];\r\n                    case 5:\r\n                        i++;\r\n                        return [3 /*break*/, 1];\r\n                    case 6:\r\n                        for (i = 0; i < retIsValid.length; i++) {\r\n                            if (retIsValid[i]) {\r\n                                return [2 /*return*/, true];\r\n                            }\r\n                        }\r\n                        return [2 /*return*/, false];\r\n                }\r\n            });\r\n        }); };\r\n        this.validateProofClaims = function (proof) {\r\n            return proof.validateClaims();\r\n        };\r\n        if (validators.length == 0) {\r\n            this.validators = [ValidateEOAProof, ValidateContractAccountProof];\r\n        }\r\n        else {\r\n            this.validators = validators;\r\n        }\r\n    }\r\n    return ETHAuth;\r\n}());\n\nexport { ETHAuth, ETHAuthEIP712Domain, ETHAuthPrefix, ETHAuthVersion, IsValidSignatureBytes32MagicValue, Proof, ValidateContractAccountProof, ValidateEOAProof, encodeTypedDataDigest, encodeTypedDataHash, validateClaims };\n","export enum ChainId {\n  // Ethereum\n  MAINNET = 1,\n  ROPSTEN = 3, // network is deprecated\n  RINKEBY = 4, // network is deprecated\n  GOERLI = 5, // network is deprecated\n  KOVAN = 42, // network is deprecated\n  SEPOLIA = 11155111,\n\n  // Polygon\n  POLYGON = 137,\n  POLYGON_MUMBAI = 80001, // network is deprecated\n  POLYGON_ZKEVM = 1101,\n  POLYGON_AMOY = 80002,\n\n  // BSC\n  BSC = 56,\n  BSC_TESTNET = 97,\n\n  // Optimism\n  OPTIMISM = 10,\n  OPTIMISM_KOVAN = 69, // network is deprecated\n  OPTIMISM_GOERLI = 420, // network is deprecated\n  OPTIMISM_SEPOLIA = 11155420,\n\n  // Arbitrum One\n  ARBITRUM = 42161,\n  ARBITRUM_GOERLI = 421613, // network is deprecated\n  ARBITRUM_SEPOLIA = 421614,\n\n  // Arbitrum Nova\n  ARBITRUM_NOVA = 42170,\n\n  // Avalanche\n  AVALANCHE = 43114,\n  AVALANCHE_TESTNET = 43113,\n\n  // Gnosis Chain (XDAI)\n  GNOSIS = 100,\n\n  // BASE\n  BASE = 8453,\n  BASE_GOERLI = 84531, // network is deprecated\n  BASE_SEPOLIA = 84532,\n\n  // HOMEVERSE\n  HOMEVERSE_TESTNET = 40875,\n  HOMEVERSE = 19011,\n\n  // Xai\n  XAI = 660279,\n  XAI_SEPOLIA = 37714555429,\n\n  // Astar\n  ASTAR_ZKEVM = 3776,\n  ASTAR_ZKYOTO = 6038361,\n\n  // XR\n  XR_SEPOLIA = 2730,\n\n  // TELOS\n  TELOS = 40,\n\n  // B3 Sepolia\n  B3_SEPOLIA = 1993,\n\n  // APE Chain\n  APECHAIN_TESTNET = 33111,\n\n  // Blast\n  BLAST = 81457,\n  BLAST_SEPOLIA = 168587773,\n\n  // Borne\n  BORNE_TESTNET = 94984,\n\n  // Skale Testnet\n  SKALE_NEBULA_TESTNET = 37084624,\n\n  // Soneium Minato\n  SONEIUM_MINATO = 1946,\n\n  // HARDHAT TESTNETS\n  HARDHAT = 31337,\n  HARDHAT_2 = 31338\n}\n\nexport enum NetworkType {\n  MAINNET = 'mainnet',\n  TESTNET = 'testnet'\n}\n\nexport type BlockExplorerConfig = {\n  name?: string\n  rootUrl: string\n  addressUrl?: string\n  txnHashUrl?: string\n}\n\nexport interface NetworkMetadata {\n  chainId: ChainId\n  type?: NetworkType\n  name: string\n  title?: string\n  logoURI?: string\n  blockExplorer?: BlockExplorerConfig\n  ensAddress?: string\n  testnet?: boolean // Deprecated field, use type instead\n  deprecated?: boolean // The actual network is deprecated\n  nativeToken: {\n    symbol: string\n    name: string\n    decimals: number\n  }\n}\n\nexport const networks: Record<ChainId, NetworkMetadata> = {\n  [ChainId.MAINNET]: {\n    chainId: ChainId.MAINNET,\n    type: NetworkType.MAINNET,\n    name: 'mainnet',\n    title: 'Ethereum',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.MAINNET}.webp`,\n    blockExplorer: {\n      name: 'Etherscan',\n      rootUrl: 'https://etherscan.io/'\n    },\n    nativeToken: {\n      symbol: 'ETH',\n      name: 'Ether',\n      decimals: 18\n    },\n    ensAddress: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n  },\n  [ChainId.ROPSTEN]: {\n    chainId: ChainId.ROPSTEN,\n    type: NetworkType.TESTNET,\n    name: 'ropsten',\n    title: 'Ropsten',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.ROPSTEN}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'Etherscan (Ropsten)',\n      rootUrl: 'https://ropsten.etherscan.io/'\n    },\n    nativeToken: {\n      symbol: 'roETH',\n      name: 'Ropsten Ether',\n      decimals: 18\n    },\n    ensAddress: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n    deprecated: true\n  },\n  [ChainId.RINKEBY]: {\n    chainId: ChainId.RINKEBY,\n    type: NetworkType.TESTNET,\n    name: 'rinkeby',\n    title: 'Rinkeby',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.RINKEBY}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'Etherscan (Rinkeby)',\n      rootUrl: 'https://rinkeby.etherscan.io/'\n    },\n    nativeToken: {\n      symbol: 'rETH',\n      name: 'Rinkeby Ether',\n      decimals: 18\n    },\n    ensAddress: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n    deprecated: true\n  },\n  [ChainId.GOERLI]: {\n    chainId: ChainId.GOERLI,\n    type: NetworkType.TESTNET,\n    name: 'goerli',\n    title: 'Goerli',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.GOERLI}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'Etherscan (Goerli)',\n      rootUrl: 'https://goerli.etherscan.io/'\n    },\n    nativeToken: {\n      symbol: 'gETH',\n      name: 'Goerli Ether',\n      decimals: 18\n    },\n    ensAddress: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n    deprecated: true\n  },\n  [ChainId.KOVAN]: {\n    chainId: ChainId.KOVAN,\n    type: NetworkType.TESTNET,\n    name: 'kovan',\n    title: 'Kovan',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.KOVAN}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'Etherscan (Kovan)',\n      rootUrl: 'https://kovan.etherscan.io/'\n    },\n    nativeToken: {\n      symbol: 'kETH',\n      name: 'Kovan Ether',\n      decimals: 18\n    },\n    deprecated: true\n  },\n  [ChainId.SEPOLIA]: {\n    chainId: ChainId.SEPOLIA,\n    type: NetworkType.TESTNET,\n    name: 'sepolia',\n    title: 'Sepolia',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.SEPOLIA}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'Etherscan (Sepolia)',\n      rootUrl: 'https://sepolia.etherscan.io/'\n    },\n    nativeToken: {\n      symbol: 'sETH',\n      name: 'Sepolia Ether',\n      decimals: 18\n    }\n  },\n  [ChainId.POLYGON]: {\n    chainId: ChainId.POLYGON,\n    type: NetworkType.MAINNET,\n    name: 'polygon',\n    title: 'Polygon',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.POLYGON}.webp`,\n    blockExplorer: {\n      name: 'Polygonscan',\n      rootUrl: 'https://polygonscan.com/'\n    },\n    nativeToken: {\n      symbol: 'POL',\n      name: 'POL',\n      decimals: 18\n    }\n  },\n  [ChainId.POLYGON_MUMBAI]: {\n    chainId: ChainId.POLYGON_MUMBAI,\n    type: NetworkType.TESTNET,\n    name: 'mumbai',\n    title: 'Polygon Mumbai',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.POLYGON_MUMBAI}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'Polygonscan (Mumbai)',\n      rootUrl: 'https://mumbai.polygonscan.com/'\n    },\n    nativeToken: {\n      symbol: 'mMATIC',\n      name: 'Mumbai Polygon',\n      decimals: 18\n    },\n    deprecated: true\n  },\n  [ChainId.POLYGON_AMOY]: {\n    chainId: ChainId.POLYGON_AMOY,\n    type: NetworkType.TESTNET,\n    name: 'amoy',\n    title: 'Polygon Amoy',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.POLYGON_AMOY}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'OKLink (Amoy)',\n      rootUrl: 'https://www.oklink.com/amoy/'\n    },\n    nativeToken: {\n      symbol: 'aPOL',\n      name: 'Amoy POL',\n      decimals: 18\n    }\n  },\n  [ChainId.POLYGON_ZKEVM]: {\n    chainId: ChainId.POLYGON_ZKEVM,\n    type: NetworkType.MAINNET,\n    name: 'polygon-zkevm',\n    title: 'Polygon zkEVM',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.POLYGON_ZKEVM}.webp`,\n    blockExplorer: {\n      name: 'Polygonscan (zkEVM)',\n      rootUrl: 'https://zkevm.polygonscan.com/'\n    },\n    nativeToken: {\n      symbol: 'ETH',\n      name: 'Ether',\n      decimals: 18\n    }\n  },\n  [ChainId.BSC]: {\n    chainId: ChainId.BSC,\n    type: NetworkType.MAINNET,\n    name: 'bsc',\n    title: 'BNB Smart Chain',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.BSC}.webp`,\n    blockExplorer: {\n      name: 'BSCScan',\n      rootUrl: 'https://bscscan.com/'\n    },\n    nativeToken: {\n      symbol: 'BNB',\n      name: 'BNB',\n      decimals: 18\n    }\n  },\n  [ChainId.BSC_TESTNET]: {\n    chainId: ChainId.BSC_TESTNET,\n    type: NetworkType.TESTNET,\n    name: 'bsc-testnet',\n    title: 'BNB Smart Chain Testnet',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.BSC_TESTNET}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'BSCScan (Testnet)',\n      rootUrl: 'https://testnet.bscscan.com/'\n    },\n    nativeToken: {\n      symbol: 'tBNB',\n      name: 'Testnet BNB',\n      decimals: 18\n    }\n  },\n  [ChainId.OPTIMISM]: {\n    chainId: ChainId.OPTIMISM,\n    type: NetworkType.MAINNET,\n    name: 'optimism',\n    title: 'Optimism',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.OPTIMISM}.webp`,\n    blockExplorer: {\n      name: 'Etherscan (Optimism)',\n      rootUrl: 'https://optimistic.etherscan.io/'\n    },\n    nativeToken: {\n      symbol: 'ETH',\n      name: 'Ether',\n      decimals: 18\n    }\n  },\n  [ChainId.OPTIMISM_KOVAN]: {\n    chainId: ChainId.OPTIMISM_KOVAN,\n    type: NetworkType.TESTNET,\n    name: 'optimism-kovan',\n    title: 'Optimism Kovan',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.OPTIMISM_KOVAN}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'Etherscan (Optimism Kovan)',\n      rootUrl: 'https://kovan-optimistic.etherscan.io/'\n    },\n    nativeToken: {\n      symbol: 'kETH',\n      name: 'Kovan Ether',\n      decimals: 18\n    },\n    deprecated: true\n  },\n  [ChainId.OPTIMISM_GOERLI]: {\n    chainId: ChainId.OPTIMISM_GOERLI,\n    type: NetworkType.TESTNET,\n    name: 'optimism-goerli',\n    title: 'Optimism Goerli',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.OPTIMISM_GOERLI}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'Etherscan (Optimism Goerli)',\n      rootUrl: 'https://goerli-optimistic.etherscan.io/'\n    },\n    nativeToken: {\n      symbol: 'gETH',\n      name: 'Goerli Ether',\n      decimals: 18\n    },\n    deprecated: true\n  },\n  [ChainId.OPTIMISM_SEPOLIA]: {\n    chainId: ChainId.OPTIMISM_SEPOLIA,\n    type: NetworkType.TESTNET,\n    name: 'optimism-sepolia',\n    title: 'Optimism Sepolia',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.OPTIMISM_SEPOLIA}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'Etherscan (Optimism Sepolia)',\n      rootUrl: 'https://sepolia-optimistic.etherscan.io/'\n    },\n    nativeToken: {\n      symbol: 'sETH',\n      name: 'Sepolia Ether',\n      decimals: 18\n    }\n  },\n  [ChainId.ARBITRUM]: {\n    chainId: ChainId.ARBITRUM,\n    type: NetworkType.MAINNET,\n    name: 'arbitrum',\n    title: 'Arbitrum One',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.ARBITRUM}.webp`,\n    blockExplorer: {\n      name: 'Arbiscan',\n      rootUrl: 'https://arbiscan.io/'\n    },\n    nativeToken: {\n      symbol: 'ETH',\n      name: 'Ether',\n      decimals: 18\n    }\n  },\n  [ChainId.ARBITRUM_GOERLI]: {\n    chainId: ChainId.ARBITRUM_GOERLI,\n    type: NetworkType.TESTNET,\n    name: 'arbitrum-goerli',\n    title: 'Arbitrum Goerli',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.ARBITRUM_GOERLI}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'Arbiscan (Goerli Testnet)',\n      rootUrl: 'https://testnet.arbiscan.io/'\n    },\n    nativeToken: {\n      symbol: 'gETH',\n      name: 'Goerli Ether',\n      decimals: 18\n    },\n    deprecated: true\n  },\n  [ChainId.ARBITRUM_SEPOLIA]: {\n    chainId: ChainId.ARBITRUM_SEPOLIA,\n    type: NetworkType.TESTNET,\n    name: 'arbitrum-sepolia',\n    title: 'Arbitrum Sepolia',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.ARBITRUM_SEPOLIA}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'Arbiscan (Sepolia Testnet)',\n      rootUrl: 'https://sepolia.arbiscan.io/'\n    },\n    nativeToken: {\n      symbol: 'sETH',\n      name: 'Sepolia Ether',\n      decimals: 18\n    }\n  },\n  [ChainId.ARBITRUM_NOVA]: {\n    chainId: ChainId.ARBITRUM_NOVA,\n    type: NetworkType.MAINNET,\n    name: 'arbitrum-nova',\n    title: 'Arbitrum Nova',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.ARBITRUM_NOVA}.webp`,\n    blockExplorer: {\n      name: 'Arbiscan Nova',\n      rootUrl: 'https://nova.arbiscan.io/'\n    },\n    nativeToken: {\n      symbol: 'ETH',\n      name: 'Ether',\n      decimals: 18\n    }\n  },\n  [ChainId.AVALANCHE]: {\n    chainId: ChainId.AVALANCHE,\n    type: NetworkType.MAINNET,\n    name: 'avalanche',\n    title: 'Avalanche',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.AVALANCHE}.webp`,\n    blockExplorer: {\n      name: 'Snowtrace',\n      rootUrl: 'https://subnets.avax.network/c-chain/'\n    },\n    nativeToken: {\n      symbol: 'AVAX',\n      name: 'AVAX',\n      decimals: 18\n    }\n  },\n  [ChainId.AVALANCHE_TESTNET]: {\n    chainId: ChainId.AVALANCHE_TESTNET,\n    type: NetworkType.TESTNET,\n    name: 'avalanche-testnet',\n    title: 'Avalanche Testnet',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.AVALANCHE_TESTNET}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'Snowtrace (Testnet)',\n      rootUrl: 'https://subnets-test.avax.network/c-chain/'\n    },\n    nativeToken: {\n      symbol: 'tAVAX',\n      name: 'Testnet AVAX',\n      decimals: 18\n    }\n  },\n  [ChainId.GNOSIS]: {\n    chainId: ChainId.GNOSIS,\n    type: NetworkType.MAINNET,\n    name: 'gnosis',\n    title: 'Gnosis Chain',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.GNOSIS}.webp`,\n    blockExplorer: {\n      name: 'Gnosis Chain Explorer',\n      rootUrl: 'https://blockscout.com/xdai/mainnet/'\n    },\n    nativeToken: {\n      symbol: 'XDAI',\n      name: 'XDAI',\n      decimals: 18\n    }\n  },\n  [ChainId.BASE]: {\n    chainId: ChainId.BASE,\n    type: NetworkType.MAINNET,\n    name: 'base',\n    title: 'Base (Coinbase)',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.BASE}.webp`,\n    blockExplorer: {\n      name: 'Base Explorer',\n      rootUrl: 'https://basescan.org/'\n    },\n    nativeToken: {\n      symbol: 'ETH',\n      name: 'Ether',\n      decimals: 18\n    }\n  },\n  [ChainId.BASE_GOERLI]: {\n    chainId: ChainId.BASE_GOERLI,\n    type: NetworkType.TESTNET,\n    name: 'base-goerli',\n    title: 'Base Goerli',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.BASE_GOERLI}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'Base Goerli Explorer',\n      rootUrl: 'https://goerli.basescan.org/'\n    },\n    nativeToken: {\n      symbol: 'gETH',\n      name: 'Goerli Ether',\n      decimals: 18\n    },\n    deprecated: true\n  },\n  [ChainId.BASE_SEPOLIA]: {\n    chainId: ChainId.BASE_SEPOLIA,\n    type: NetworkType.TESTNET,\n    name: 'base-sepolia',\n    title: 'Base Sepolia',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.BASE_SEPOLIA}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'Base Sepolia Explorer',\n      rootUrl: 'https://base-sepolia.blockscout.com/'\n    },\n    nativeToken: {\n      symbol: 'sETH',\n      name: 'Sepolia Ether',\n      decimals: 18\n    }\n  },\n  [ChainId.HOMEVERSE]: {\n    chainId: ChainId.HOMEVERSE,\n    type: NetworkType.MAINNET,\n    name: 'homeverse',\n    title: 'Oasys Homeverse',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.HOMEVERSE}.webp`,\n    blockExplorer: {\n      name: 'Oasys Homeverse Explorer',\n      rootUrl: 'https://explorer.oasys.homeverse.games/'\n    },\n    nativeToken: {\n      symbol: 'OAS',\n      name: 'OAS',\n      decimals: 18\n    }\n  },\n  [ChainId.HOMEVERSE_TESTNET]: {\n    chainId: ChainId.HOMEVERSE_TESTNET,\n    type: NetworkType.TESTNET,\n    name: 'homeverse-testnet',\n    title: 'Oasys Homeverse Testnet',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.HOMEVERSE_TESTNET}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'Oasys Homeverse Explorer (Testnet)',\n      rootUrl: 'https://explorer.testnet.oasys.homeverse.games/'\n    },\n    nativeToken: {\n      symbol: 'tOAS',\n      name: 'Testnet OAS',\n      decimals: 18\n    }\n  },\n  [ChainId.XAI]: {\n    chainId: ChainId.XAI,\n    type: NetworkType.MAINNET,\n    name: 'xai',\n    title: 'Xai',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.XAI}.webp`,\n    blockExplorer: {\n      name: 'Xai Explorer',\n      rootUrl: 'https://explorer.xai-chain.net/'\n    },\n    nativeToken: {\n      symbol: 'XAI',\n      name: 'XAI',\n      decimals: 18\n    }\n  },\n  [ChainId.XAI_SEPOLIA]: {\n    chainId: ChainId.XAI_SEPOLIA,\n    type: NetworkType.TESTNET,\n    name: 'xai-sepolia',\n    title: 'Xai Sepolia',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.XAI_SEPOLIA}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'Xai Sepolia Explorer',\n      rootUrl: 'https://testnet-explorer-v2.xai-chain.net/'\n    },\n    nativeToken: {\n      symbol: 'sXAI',\n      name: 'Sepolia XAI',\n      decimals: 18\n    }\n  },\n  [ChainId.ASTAR_ZKEVM]: {\n    chainId: ChainId.ASTAR_ZKEVM,\n    type: NetworkType.MAINNET,\n    name: 'astar-zkevm',\n    title: 'Astar zkEVM',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.ASTAR_ZKEVM}.webp`,\n    blockExplorer: {\n      name: 'Astar zkEVM Explorer',\n      rootUrl: 'https://astar-zkevm.explorer.startale.com/'\n    },\n    nativeToken: {\n      symbol: 'ETH',\n      name: 'Ether',\n      decimals: 18\n    }\n  },\n  [ChainId.ASTAR_ZKYOTO]: {\n    chainId: ChainId.ASTAR_ZKYOTO,\n    type: NetworkType.TESTNET,\n    name: 'astar-zkyoto',\n    title: 'Astar zKyoto Testnet',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.ASTAR_ZKYOTO}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'Astar zKyoto Explorer',\n      rootUrl: 'https://astar-zkyoto.blockscout.com/'\n    },\n    nativeToken: {\n      symbol: 'ETH',\n      name: 'Ether',\n      decimals: 18\n    }\n  },\n  [ChainId.XR_SEPOLIA]: {\n    chainId: ChainId.XR_SEPOLIA,\n    type: NetworkType.TESTNET,\n    name: 'xr-sepolia',\n    title: 'XR Sepolia',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.XR_SEPOLIA}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'XR Sepolia Explorer',\n      rootUrl: 'https://xr-sepolia-testnet.explorer.caldera.xyz/'\n    },\n    nativeToken: {\n      symbol: 'tXR',\n      name: 'Sepolia XR',\n      decimals: 18\n    }\n  },\n  [ChainId.B3_SEPOLIA]: {\n    chainId: ChainId.B3_SEPOLIA,\n    type: NetworkType.TESTNET,\n    name: 'b3-sepolia',\n    title: 'B3 Sepolia',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.B3_SEPOLIA}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'B3 Sepolia Explorer',\n      rootUrl: 'https://sepolia.explorer.b3.fun/'\n    },\n    nativeToken: {\n      symbol: 'ETH',\n      name: 'Ether',\n      decimals: 18\n    }\n  },\n  [ChainId.APECHAIN_TESTNET]: {\n    chainId: ChainId.APECHAIN_TESTNET,\n    type: NetworkType.TESTNET,\n    name: 'apechain-testnet',\n    title: 'APE Chain Testnet',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.APECHAIN_TESTNET}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'APE Chain Explorer',\n      rootUrl: 'https://curtis.explorer.caldera.xyz/'\n    },\n    nativeToken: {\n      symbol: 'APE',\n      name: 'ApeCoin',\n      decimals: 18\n    }\n  },\n  [ChainId.BLAST]: {\n    chainId: ChainId.BLAST,\n    type: NetworkType.MAINNET,\n    name: 'blast',\n    title: 'Blast',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.BLAST}.webp`,\n    blockExplorer: {\n      name: 'Blast Explorer',\n      rootUrl: 'https://blastscan.io/'\n    },\n    nativeToken: {\n      symbol: 'ETH',\n      name: 'Ether',\n      decimals: 18\n    }\n  },\n  [ChainId.BLAST_SEPOLIA]: {\n    chainId: ChainId.BLAST_SEPOLIA,\n    type: NetworkType.TESTNET,\n    name: 'blast-sepolia',\n    title: 'Blast Sepolia',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.BLAST_SEPOLIA}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'Blast Sepolia Explorer',\n      rootUrl: 'https://sepolia.blastexplorer.io/'\n    },\n    nativeToken: {\n      symbol: 'ETH',\n      name: 'Ether',\n      decimals: 18\n    }\n  },\n  [ChainId.TELOS]: {\n    chainId: ChainId.TELOS,\n    type: NetworkType.MAINNET,\n    name: 'telos',\n    title: 'Telos',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.TELOS}.webp`,\n    blockExplorer: {\n      name: 'Telos Explorer',\n      rootUrl: 'https://explorer.telos.net/network/'\n    },\n    nativeToken: {\n      symbol: 'TLOS',\n      name: 'TLOS',\n      decimals: 18\n    }\n  },\n  [ChainId.BORNE_TESTNET]: {\n    chainId: ChainId.BORNE_TESTNET,\n    type: NetworkType.TESTNET,\n    name: 'borne-testnet',\n    title: 'Borne Testnet',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.BORNE_TESTNET}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'Borne Testnet Explorer',\n      rootUrl: 'https://subnets-test.avax.network/bornegfdn'\n    },\n    nativeToken: {\n      symbol: 'BORNE',\n      name: 'BORNE',\n      decimals: 18\n    }\n  },\n  [ChainId.SKALE_NEBULA_TESTNET]: {\n    chainId: ChainId.SKALE_NEBULA_TESTNET,\n    type: NetworkType.TESTNET,\n    name: 'skale-nebula-testnet',\n    title: 'SKALE Nebula Gaming Hub Testnet',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.SKALE_NEBULA_TESTNET}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'SKALE Nebula Gaming Hub Testnet Explorer',\n      rootUrl: 'https://lanky-ill-funny-testnet.explorer.testnet.skalenodes.com/'\n    },\n    nativeToken: {\n      symbol: 'sFUEL',\n      name: 'SKALE Fuel',\n      decimals: 18\n    }\n  },\n  [ChainId.SONEIUM_MINATO]: {\n    chainId: ChainId.SONEIUM_MINATO,\n    type: NetworkType.TESTNET,\n    name: 'soneium-minato',\n    title: 'Soneium Minato (Testnet)',\n    logoURI: `https://assets.sequence.info/images/networks/medium/${ChainId.SONEIUM_MINATO}.webp`,\n    testnet: true,\n    blockExplorer: {\n      name: 'Soneium Minato Explorer',\n      rootUrl: 'https://explorer-testnet.soneium.org/'\n    },\n    nativeToken: {\n      symbol: 'ETH',\n      name: 'Ether',\n      decimals: 18\n    }\n  },\n  [ChainId.HARDHAT]: {\n    chainId: ChainId.HARDHAT,\n    name: 'hardhat',\n    title: 'Hardhat (local testnet)',\n    nativeToken: {\n      symbol: 'ETH',\n      name: 'Ether',\n      decimals: 18\n    }\n  },\n  [ChainId.HARDHAT_2]: {\n    chainId: ChainId.HARDHAT_2,\n    name: 'hardhat2',\n    title: 'Hardhat (local testnet)',\n    nativeToken: {\n      symbol: 'ETH',\n      name: 'Ether',\n      decimals: 18\n    }\n  }\n}\n","import { ethers } from 'ethers'\nimport { ChainIdLike } from '.'\nimport { NetworkConfig } from './config'\n\nexport function isNetworkConfig(cand: any): cand is NetworkConfig {\n  return cand && cand.chainId !== undefined && cand.name !== undefined && cand.rpcUrl !== undefined && cand.relayer !== undefined\n}\n\nexport const getChainId = (chainId: ChainIdLike): number => {\n  if (typeof chainId === 'number') {\n    return chainId\n  }\n  if ((<NetworkConfig>chainId).chainId) {\n    return (<NetworkConfig>chainId).chainId\n  }\n  return Number(chainId as ethers.BigNumberish)\n}\n\nexport const maybeChainId = (chainId?: ChainIdLike): number | undefined => {\n  if (!chainId) return undefined\n  return getChainId(chainId)\n}\n\nexport const isValidNetworkConfig = (\n  networkConfig: NetworkConfig | NetworkConfig[],\n  raise: boolean = false,\n  skipRelayerCheck: boolean = false\n): boolean => {\n  if (!networkConfig) throw new Error(`invalid network config: empty config`)\n\n  const configs: NetworkConfig[] = []\n  if (Array.isArray(networkConfig)) {\n    configs.push(...networkConfig)\n  } else {\n    configs.push(networkConfig)\n  }\n\n  if (configs.length === 0) {\n    if (raise) throw new Error(`invalid network config: empty config`)\n    return false\n  }\n\n  // Ensure distinct chainId configs\n  const chainIds = configs.map(c => c.chainId).sort()\n  const dupes = chainIds.filter((c, i) => chainIds.indexOf(c) !== i)\n  if (dupes.length > 0) {\n    if (raise) throw new Error(`invalid network config: duplicate chainIds ${dupes}`)\n    return false\n  }\n\n  // Downcase all network names\n  configs.forEach(c => (c.name = c.name.toLowerCase()))\n\n  // Ensure distinct network names\n  const names = configs.map(c => c.name).sort()\n  const nameDupes = names.filter((c, i) => names.indexOf(c) !== i)\n  if (nameDupes.length > 0) {\n    if (raise) throw new Error(`invalid network config: duplicate network names ${nameDupes}`)\n    return false\n  }\n\n  // Ensure rpcUrl or provider is specified\n  // Ensure relayerUrl or relayer is specified\n  // Ensure one default chain\n  // Ensure one auth chain\n  let defaultChain = false\n  for (let i = 0; i < configs.length; i++) {\n    const c = configs[i]\n    if ((!c.rpcUrl || c.rpcUrl === '') && !c.provider) {\n      if (raise) throw new Error(`invalid network config for chainId ${c.chainId}: rpcUrl or provider must be provided`)\n      return false\n    }\n    if (!skipRelayerCheck) {\n      if (!c.relayer) {\n        if (raise) throw new Error(`invalid network config for chainId ${c.chainId}: relayer must be provided`)\n        return false\n      }\n    }\n    if (c.isDefaultChain) {\n      if (defaultChain) {\n        if (raise)\n          throw new Error(`invalid network config for chainId ${c.chainId}: DefaultChain is already set by another config`)\n        return false\n      }\n      defaultChain = true\n    }\n  }\n\n  if (!defaultChain) {\n    if (raise) throw new Error(`invalid network config: DefaultChain must be set`)\n    return false\n  }\n\n  return true\n}\n\nexport const ensureValidNetworks = (networks: NetworkConfig[], skipRelayerCheck: boolean = false): NetworkConfig[] => {\n  isValidNetworkConfig(networks, true, skipRelayerCheck)\n  return networks\n}\n\nexport const ensureUniqueNetworks = (networks: NetworkConfig[], raise: boolean = true): boolean => {\n  const chainIds = networks.map(c => c.chainId).sort()\n  const dupes = chainIds.filter((c, i) => chainIds.indexOf(c) !== i)\n  if (dupes.length > 0) {\n    if (raise) throw new Error(`invalid network config: duplicate chainIds ${dupes}`)\n    return false\n  }\n  return true\n}\n\nexport const updateNetworkConfig = (src: Partial<NetworkConfig>, dest: NetworkConfig) => {\n  if (!src || !dest) return\n\n  if (!src.chainId && !src.name) {\n    throw new Error('failed to update network config: source config is missing chainId or name')\n  }\n  if (src.chainId !== dest.chainId && src.name !== dest.name) {\n    throw new Error('failed to update network config: one of chainId or name must match')\n  }\n\n  if (src.rpcUrl) {\n    dest.rpcUrl = src.rpcUrl\n    dest.provider = undefined\n  }\n  if (src.provider) {\n    dest.provider = src.provider\n  }\n  if (src.relayer) {\n    dest.relayer = src.relayer\n  }\n}\n\nexport const validateAndSortNetworks = (networks: NetworkConfig[]) => {\n  return ensureValidNetworks(sortNetworks(networks))\n}\n\nexport const findNetworkConfig = (networks: NetworkConfig[], chainId: ChainIdLike): NetworkConfig | undefined => {\n  if (typeof chainId === 'string') {\n    if (chainId.startsWith('0x')) {\n      const id = Number(chainId)\n      return networks.find(n => n.chainId === id)\n    } else {\n      return networks.find(n => n.name === chainId || `${n.chainId}` === chainId)\n    }\n  } else if (typeof chainId === 'number') {\n    return networks.find(n => n.chainId === chainId)\n  } else if ((<NetworkConfig>chainId).chainId) {\n    return networks.find(n => n.chainId === (<NetworkConfig>chainId).chainId)\n  } else if (typeof chainId === 'bigint') {\n    const id = Number(chainId)\n    return networks.find(n => n.chainId === id)\n  } else {\n    return undefined\n  }\n}\n\nexport const checkNetworkConfig = (network: NetworkConfig, chainId: string | number): boolean => {\n  if (!network) return false\n  if (network.name === chainId) return true\n  if (network.chainId === chainId) return true\n  return false\n}\n\nexport const networksIndex = (networks: NetworkConfig[]): { [key: string]: NetworkConfig } => {\n  const index: { [key: string]: NetworkConfig } = {}\n  for (let i = 0; i < networks.length; i++) {\n    index[networks[i].name] = networks[i]\n  }\n  return index\n}\n\n// TODO: we should remove sortNetworks in the future but this is a breaking change for dapp integrations on older versions <-> wallet\n// sortNetworks orders the network config list by: defaultChain, authChain, ..rest by chainId ascending numbers\nexport const sortNetworks = (networks: NetworkConfig[]): NetworkConfig[] => {\n  if (!networks) {\n    return []\n  }\n\n  const config = networks.sort((a, b) => {\n    if (a.chainId === b.chainId) return 0\n    return a.chainId < b.chainId ? -1 : 1\n  })\n\n  // DefaultChain goes first\n  const defaultConfigIdx = config.findIndex(c => c.isDefaultChain)\n  if (defaultConfigIdx > 0) config.splice(0, 0, config.splice(defaultConfigIdx, 1)[0])\n\n  return config\n}\n\nexport const stringTemplate = (sTemplate: string, mData: any) => {\n  if (typeof sTemplate === 'string') {\n    mData = mData ? mData : {}\n    return sTemplate.replace(/\\$\\{\\s*([$#@\\-\\d\\w]+)\\s*\\}/gim, function (fullMath, grp) {\n      let val = mData[grp]\n      if (typeof val === 'function') {\n        val = val()\n      } else if (val === null || val === undefined) {\n        val = ''\n      } else if (typeof val === 'object' || typeof val === 'symbol') {\n        val = val.toString()\n      } else {\n        val = val.valueOf()\n      }\n      return val\n    })\n  }\n  return ''\n}\n","import { ethers } from 'ethers'\n\nexport const MAX_UINT_256 = BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n\n// ethers implement this method but doesn't exports it\nexport const isBigNumberish = (value: any): value is ethers.BigNumberish => {\n  return (\n    value != null &&\n    ((typeof value === 'number' && value % 1 === 0) ||\n      (typeof value === 'string' && !!value.match(/^-?[0-9]+$/)) ||\n      ethers.isHexString(value) ||\n      typeof value === 'bigint')\n  )\n}\n\n// Even length zero-padded hex string with 0x prefix\nexport const toHexString = (value: bigint): string => {\n  const result = value.toString(16)\n\n  return `${result.length % 2 === 0 ? '0x' : '0x0'}${result}`\n}\n\nexport const parseUnits = (value: string, decimals: number = 18): bigint => {\n  let [integer, fraction = '0'] = value.split('.')\n\n  const negative = integer.startsWith('-')\n  if (negative) {\n    integer = integer.slice(1)\n  }\n\n  // trim trailing zeros.\n  fraction = fraction.replace(/(0+)$/, '')\n\n  // round off if the fraction is larger than the number of decimals.\n  if (decimals === 0) {\n    integer = `${Math.round(Number(`${integer}.${fraction}`))}`\n    fraction = ''\n  } else if (fraction.length > decimals) {\n    const [left, unit, right] = [\n      fraction.slice(0, decimals - 1),\n      fraction.slice(decimals - 1, decimals),\n      fraction.slice(decimals)\n    ]\n\n    const rounded = Math.round(Number(`${unit}.${right}`))\n    if (rounded > 9) {\n      fraction = `${BigInt(left) + 1n}0`.padStart(left.length + 1, '0')\n    } else {\n      fraction = `${left}${rounded}`\n    }\n\n    if (fraction.length > decimals) {\n      fraction = fraction.slice(1)\n      integer = `${BigInt(integer) + 1n}`\n    }\n\n    fraction = fraction.slice(0, decimals)\n  } else {\n    fraction = fraction.padEnd(decimals, '0')\n  }\n\n  return BigInt(`${negative ? '-' : ''}${integer}${fraction}`)\n}\n\nexport const parseEther = (value: string): bigint => parseUnits(value, 18)\n\nexport const formatUnits = (value: bigint, decimals: number = 18): string => {\n  let display = value.toString()\n\n  const negative = display.startsWith('-')\n  if (negative) {\n    display = display.slice(1)\n  }\n\n  display = display.padStart(decimals, '0')\n\n  const integer = display.slice(0, display.length - decimals)\n  let fraction = display.slice(display.length - decimals)\n\n  fraction = fraction.replace(/(0+)$/, '')\n  return `${negative ? '-' : ''}${integer || '0'}${fraction ? `.${fraction}` : ''}`\n}\n\nexport const formatEther = (value: bigint): string => formatUnits(value, 18)\n\n// JSON.stringify doesn't handle BigInts, so we need to replace them with objects\nexport const bigintReplacer = (key: string, value: any): any => {\n  if (typeof value === 'bigint') {\n    return { $bigint: value.toString() }\n  }\n\n  return value\n}\n\n// JSON.parse will need to convert our serialized bigints back into BigInt\nexport const bigintReviver = (key: string, value: any): any => {\n  if (value !== null && typeof value === 'object' && '$bigint' in value && typeof value.$bigint === 'string') {\n    return BigInt(value.$bigint)\n  }\n\n  // BigNumber compatibility with older versions of sequence.js with ethers v5\n  if (value !== null && typeof value === 'object' && value.type === 'BigNumber' && ethers.isHexString(value.hex)) {\n    return BigInt(value.hex)\n  }\n\n  return value\n}\n","import { Base64 } from 'js-base64'\nimport { bigintReplacer, bigintReviver } from './bigint'\n\nexport const base64Encode = (val: string): string => {\n  return Base64.encode(val, true)\n}\n\nexport const base64EncodeObject = (obj: any): string => {\n  return Base64.encode(JSON.stringify(obj, bigintReplacer), true)\n}\n\nexport const base64Decode = (encodedString: string): string | undefined => {\n  if (encodedString === null || encodedString === undefined) {\n    return undefined\n  }\n  return Base64.decode(encodedString)\n}\n\nexport const base64DecodeObject = <T = any>(encodedObject: string | null): T | undefined => {\n  if (encodedObject === null || encodedObject === undefined) {\n    return undefined\n  }\n  return JSON.parse(Base64.decode(encodedObject), bigintReviver) as T\n}\n","import { ethers } from 'ethers'\n\nexport const encodeMessageDigest = (message: string | ethers.BytesLike) => {\n  if (typeof message === 'string') {\n    return ethers.getBytes(ethers.id(message))\n  } else {\n    return ethers.getBytes(ethers.keccak256(message))\n  }\n}\n\n// packMessageData encodes the specified data ready for the Sequence Wallet contracts.\nexport const packMessageData = (walletAddress: string, chainId: ethers.BigNumberish, digest: ethers.BytesLike): string => {\n  return ethers.solidityPacked(['string', 'uint256', 'address', 'bytes32'], ['\\x19\\x01', chainId, walletAddress, digest])\n}\n\nexport const subDigestOf = (address: string, chainId: ethers.BigNumberish, digest: ethers.BytesLike): string => {\n  return ethers.keccak256(packMessageData(address, chainId, digest))\n}\n","export const isNode = () => {\n  if (typeof window === 'undefined' && typeof process === 'object') {\n    return true\n  } else {\n    return false\n  }\n}\n\nexport const isBrowser = () => !isNode()\n","import { Base64 } from 'js-base64'\n\nexport const jwtDecodeClaims = <T = any>(jwt: string) => {\n  const parts = jwt.split('.')\n  if (parts.length !== 3) {\n    throw new Error('invalid jwt')\n  }\n  const claims = JSON.parse(Base64.decode(parts[1])) as T\n  return claims\n}\n","export type LogLevel = 'DEBUG' | 'INFO' | 'WARN' | 'ERROR' | 'DISABLED'\n\nenum logLevel {\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n  DISABLED = 5\n}\n\nexport interface LoggerConfig {\n  logLevel: LogLevel\n  silence?: boolean\n\n  onwarn?: (message: any, ...optionalParams: any[]) => void\n  onerror?: (message: any, ...optionalParams: any[]) => void\n}\n\nexport class Logger {\n  logLevel: logLevel\n\n  constructor(private config: LoggerConfig) {\n    this.configure(config)\n  }\n\n  configure(config: Partial<LoggerConfig>) {\n    this.config = { ...this.config, ...config }\n    switch (this.config.logLevel) {\n      case 'DEBUG':\n        this.logLevel = logLevel.DEBUG\n        break\n      case 'INFO':\n        this.logLevel = logLevel.INFO\n        break\n      case 'WARN':\n        this.logLevel = logLevel.WARN\n        break\n      case 'ERROR':\n        this.logLevel = logLevel.ERROR\n        break\n      case 'DISABLED':\n        this.logLevel = logLevel.DISABLED\n        break\n      default:\n        this.logLevel = logLevel.INFO\n        break\n    }\n\n    // undefined silence value will disable the default silence flag\n    if (this.config.silence === undefined) {\n      this.config.silence = false\n    }\n  }\n\n  debug(message: any, ...optionalParams: any[]) {\n    if (this.config.silence === true) return\n    if (this.logLevel === logLevel.DEBUG) {\n      console.log(message, ...optionalParams)\n    }\n  }\n\n  info(message: any, ...optionalParams: any[]) {\n    if (this.config.silence === true) return\n    if (this.logLevel <= logLevel.INFO) {\n      console.log(message, ...optionalParams)\n    }\n  }\n\n  warn(message: any, ...optionalParams: any[]) {\n    if (this.config.silence === true) return\n    if (this.logLevel <= logLevel.WARN) {\n      console.warn(message, ...optionalParams)\n      if (this.config.onwarn) {\n        this.config.onwarn(message, optionalParams)\n      }\n    }\n  }\n\n  error(message: any, ...optionalParams: any[]) {\n    if (this.config.silence === true) return\n    if (this.logLevel <= logLevel.ERROR) {\n      console.error(message, ...optionalParams)\n      if (this.config.onerror) {\n        this.config.onerror(message, optionalParams)\n      }\n    }\n  }\n}\n\nexport const logger = new Logger({\n  logLevel: 'INFO',\n\n  // By default we silence the logger. In tests we should call `configureLogger`\n  // below to set silence: false.\n  silence: true\n})\n\nexport const configureLogger = (config: Partial<LoggerConfig>) => logger.configure(config)\n","import { ethers } from 'ethers'\n\nexport class Base {\n  static bufferIndexOf(array: Uint8Array[], element: Uint8Array, isSorted: boolean = false): number {\n    if (isSorted) {\n      return Base.binarySearch(array, element, Base.compare)\n    }\n\n    const eqChecker = (buffer1: Uint8Array, buffer2: Uint8Array): boolean => {\n      if (buffer1 === buffer2) {\n        return true\n      }\n      if (buffer1.length !== buffer2.length) {\n        return false\n      }\n      for (let i = 0; i < buffer1.length; i++) {\n        if (buffer1[i] !== buffer2[i]) {\n          return false\n        }\n      }\n      return true\n    }\n\n    return Base.linearSearch(array, element, eqChecker)\n  }\n\n  static binarySearch(\n    array: Uint8Array[],\n    element: Uint8Array,\n    compareFunction: (a: Uint8Array, b: Uint8Array) => number\n  ): number {\n    let start = 0\n    let end = array.length - 1\n\n    // Iterate while start not meets end\n    while (start <= end) {\n      // Find the mid index\n      const mid = Math.floor((start + end) / 2)\n\n      // Check if the mid value is greater than, equal to, or less than search element.\n      const ordering = compareFunction(array[mid], element)\n\n      // If element is present at mid, start iterating for searching first appearance.\n      if (ordering === 0) {\n        // Linear reverse iteration until the first matching item index is found.\n        for (let i = mid - 1; i >= 0; i--) {\n          if (compareFunction(array[i], element) === 0) continue\n          return i + 1\n        }\n        return 0\n      } /* Else look in left or right half accordingly */ else if (ordering < 0) {\n        start = mid + 1\n      } else {\n        end = mid - 1\n      }\n    }\n\n    return -1\n  }\n\n  static compare(a: Uint8Array, b: Uint8Array): number {\n    // Determine the minimum length to compare\n    const len = Math.min(a.length, b.length)\n\n    // Compare byte by byte\n    for (let i = 0; i < len; i++) {\n      if (a[i] !== b[i]) {\n        return a[i] - b[i]\n      }\n    }\n\n    // If all compared bytes are equal, compare lengths\n    return a.length - b.length\n  }\n\n  static linearSearch(array: Uint8Array[], element: Uint8Array, eqChecker: (a: Uint8Array, b: Uint8Array) => boolean): number {\n    for (let i = 0; i < array.length; i++) {\n      if (eqChecker(array[i], element)) {\n        return i\n      }\n    }\n\n    return -1\n  }\n\n  static bufferify(value: Uint8Array | string): Uint8Array {\n    if (typeof value === 'string') {\n      return ethers.getBytes(value)\n    }\n    return value\n  }\n\n  static isHexString(v: string): boolean {\n    return typeof v === 'string' && /^(0x)?[0-9A-Fa-f]*$/.test(v)\n  }\n\n  static bufferToHex(value: Uint8Array, withPrefix: boolean = true): string {\n    const prefixed = ethers.hexlify(value)\n    return withPrefix ? prefixed : prefixed.substring(2)\n  }\n\n  static bufferifyFn(f: any): any {\n    return (value: any): Uint8Array => {\n      return Base.bufferify(f(value))\n    }\n  }\n}\n","import { ethers } from 'ethers'\nimport { Base } from './Base'\n\ntype TValue = string\ntype TLeaf = Uint8Array\ntype TLayer = TLeaf[]\ntype THashFn = (value: TValue | TLeaf) => TLeaf\n\nexport interface Options {\n  sortLeaves?: boolean\n  sortPairs?: boolean\n}\n\nexport type Proof = { position: 'left' | 'right'; data: Uint8Array }[]\n\nexport class MerkleTree extends Base {\n  private hashFn: THashFn\n  private leaves: TLeaf[] = []\n  private layers: TLayer[] = []\n  private sortLeaves: boolean = false\n  private sortPairs: boolean = false\n\n  constructor(leaves: any[], options: Options = {}) {\n    super()\n\n    this.sortLeaves = !!options.sortLeaves\n    this.sortPairs = !!options.sortPairs\n\n    this.hashFn = Base.bufferifyFn(ethers.keccak256)\n    this.processLeaves(leaves)\n  }\n\n  public getOptions() {\n    return {\n      sortLeaves: this.sortLeaves,\n      sortPairs: this.sortPairs\n    }\n  }\n\n  private processLeaves(leaves: TLeaf[]) {\n    this.leaves = leaves.map(Base.bufferify)\n    if (this.sortLeaves) {\n      this.leaves = this.leaves.sort(Base.compare)\n    }\n\n    this.createHashes(this.leaves)\n  }\n\n  private createHashes(nodes: Uint8Array[]) {\n    this.layers = [nodes]\n    while (nodes.length > 1) {\n      const layerIndex = this.layers.length\n\n      this.layers.push([])\n\n      const layerLimit = nodes.length\n\n      for (let i = 0; i < nodes.length; i += 2) {\n        if (i >= layerLimit) {\n          this.layers[layerIndex].push(...nodes.slice(layerLimit))\n          break\n        } else if (i + 1 === nodes.length) {\n          if (nodes.length % 2 === 1) {\n            // push copy of hash and continue iteration\n            this.layers[layerIndex].push(nodes[i])\n            continue\n          }\n        }\n\n        const left = nodes[i]\n        const right = i + 1 === nodes.length ? left : nodes[i + 1]\n        const combined = [left, right]\n\n        if (this.sortPairs) {\n          combined.sort(Base.compare)\n        }\n\n        const hash = this.hashFn(ethers.concat(combined))\n        this.layers[layerIndex].push(hash)\n      }\n\n      nodes = this.layers[layerIndex]\n    }\n  }\n\n  getRoot(): Uint8Array {\n    if (this.layers.length === 0) {\n      return Uint8Array.from([])\n    }\n\n    return this.layers[this.layers.length - 1][0] || Uint8Array.from([])\n  }\n\n  getHexRoot(): string {\n    return Base.bufferToHex(this.getRoot())\n  }\n\n  getProof(leaf: Uint8Array | string, index?: number): Proof {\n    if (typeof leaf === 'undefined') {\n      throw new Error('leaf is required')\n    }\n    leaf = Base.bufferify(leaf)\n    const proof: Proof = []\n\n    if (!Number.isInteger(index)) {\n      index = -1\n\n      for (let i = 0; i < this.leaves.length; i++) {\n        if (Base.compare(leaf, this.leaves[i]) === 0) {\n          index = i\n        }\n      }\n    }\n\n    // Type fix\n    index = index as number\n\n    if (index <= -1) {\n      return []\n    }\n\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i]\n      const isRightNode = index % 2\n      const pairIndex = isRightNode ? index - 1 : index + 1\n\n      if (pairIndex < layer.length) {\n        proof.push({\n          position: isRightNode ? 'left' : 'right',\n          data: layer[pairIndex]\n        })\n      }\n\n      // set index to parent index\n      index = (index / 2) | 0\n    }\n\n    return proof\n  }\n\n  getHexProof(leaf: Uint8Array | string, index?: number): string[] {\n    return this.getProof(leaf, index).map(item => Base.bufferToHex(item.data))\n  }\n\n  verify(proof: Proof | string[], targetNode: Uint8Array | string, root: Uint8Array | string): boolean {\n    let hash = Base.bufferify(targetNode)\n    root = Base.bufferify(root)\n\n    if (!Array.isArray(proof) || !targetNode || !root) {\n      return false\n    }\n\n    for (let i = 0; i < proof.length; i++) {\n      const node = proof[i]\n      let data: Uint8Array\n      let isLeftNode: boolean\n\n      if (typeof node === 'string') {\n        data = Base.bufferify(node)\n        isLeftNode = true\n      } else if (node instanceof Object) {\n        data = node.data\n        isLeftNode = node.position === 'left'\n      } else {\n        throw new Error('Expected node to be of type string or object')\n      }\n\n      const buffers: Uint8Array[] = []\n\n      if (this.sortPairs) {\n        if (Base.compare(hash, data) < 0) {\n          buffers.push(hash, data)\n        } else {\n          buffers.push(data, hash)\n        }\n        hash = this.hashFn(ethers.concat(buffers))\n      } else {\n        buffers.push(hash)\n        buffers[isLeftNode ? 'unshift' : 'push'](data)\n        hash = this.hashFn(ethers.concat(buffers))\n      }\n    }\n\n    return Base.compare(hash, root) === 0\n  }\n}\n","import { ethers } from 'ethers'\nimport { MerkleTree } from './merkletree'\n\nexport type ToLeaf<T> = (element: T) => string\nexport type Proof = string[]\n\nexport class MerkleTreeGenerator<T> {\n  private elements: T[]\n  private toLeaf: ToLeaf<T>\n  private tree: MerkleTree\n\n  constructor(elements: T[], toLeaf: ToLeaf<T>) {\n    this.elements = elements\n    this.toLeaf = toLeaf\n  }\n\n  generateTree(): MerkleTree {\n    const hashed = this.elements.map(e => this.toLeaf(e))\n    return new MerkleTree(hashed, {\n      sortPairs: true,\n      sortLeaves: true\n    })\n  }\n\n  generateRoot(): string {\n    if (!this.tree) this.tree = this.generateTree()\n    return this.tree.getHexRoot()\n  }\n\n  generateProof(element: T): Proof {\n    if (!this.elements.includes(element)) throw new Error('Element not found')\n    if (!this.tree) this.tree = this.generateTree()\n    return this.tree.getHexProof(this.toLeaf(element))\n  }\n\n  verifyProof(element: T, proof: Proof): boolean {\n    if (!this.elements.includes(element)) throw new Error('Element not found')\n    if (!this.tree) this.tree = this.generateTree()\n    return this.tree.verify(proof, this.toLeaf(element), this.generateRoot())\n  }\n}\n\nexport type SaleItemsElement = {\n  address: string\n  tokenId: ethers.BigNumberish\n}\n\nexport const getSaleItemsLeaf: ToLeaf<SaleItemsElement> = element =>\n  ethers.solidityPackedKeccak256(['address', 'uint256'], [element.address.toLowerCase(), element.tokenId])\n","import { ethers } from 'ethers'\n\n// export const getEthersConnectionInfo = (url: string, projectAccessKey?: string, jwt?: string): ConnectionInfo => {\n//   const headers: {\n//     [key: string]: string | number\n//   } = {}\n\n//   if (jwt && jwt.length > 0) {\n//     headers['Authorization'] = `BEARER ${jwt}`\n//   }\n//   if (projectAccessKey && projectAccessKey.length > 0) {\n//     headers['X-Access-Key'] = projectAccessKey\n//   }\n\n//   return {\n//     url,\n//     headers,\n//     skipFetchSetup: true,\n//     fetchOptions: {\n//       mode: 'cors',\n//       cache: 'force-cache',\n//       credentials: 'same-origin',\n//       redirect: 'follow',\n//       referrer: 'client'\n//     }\n//   }\n// }\n\nexport const getFetchRequest = (url: string, projectAccessKey?: string, jwt?: string): ethers.FetchRequest => {\n  const req = new ethers.FetchRequest(url)\n\n  if (jwt) {\n    req.setHeader('Authorization', `BEARER ${jwt}`)\n  }\n\n  if (projectAccessKey) {\n    req.setHeader('X-Access-Key', projectAccessKey)\n  }\n\n  return req\n}\n","import { ethers } from 'ethers'\n\nexport class PromiseCache {\n  private readonly cache: Map<string, Entry>\n\n  constructor() {\n    this.cache = new Map()\n  }\n\n  do<S extends Array<unknown>, T>(\n    key: string,\n    validMilliseconds: number | undefined,\n    task: (...args: S) => Promise<T>,\n    ...args: S\n  ): Promise<T> {\n    key = `${key}:${ethers.id(JSON.stringify(args, deterministically))}`\n\n    let entry = this.cache.get(key)\n\n    if (entry) {\n      if (entry.expiration) {\n        if (new Date() >= entry.expiration) {\n          entry = undefined\n          this.cache.delete(key)\n        }\n      }\n    }\n\n    if (!entry) {\n      const entry_: Entry = { promise: task(...args) }\n\n      if (validMilliseconds !== undefined) {\n        entry_.promise = entry_.promise.then(result => {\n          entry_.expiration = new Date(Date.now() + validMilliseconds)\n          return result\n        })\n      }\n\n      entry = entry_\n      this.cache.set(key, entry)\n    }\n\n    return entry.promise as Promise<T>\n  }\n}\n\ntype Entry = {\n  promise: Promise<unknown>\n  expiration?: Date\n}\n\nfunction deterministically(_key: string, value: any): any {\n  if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\n    return Object.fromEntries(Object.entries(value).sort())\n  }\n\n  return value\n}\n","export const getRandomInt = (min: number = 0, max: number = Number.MAX_SAFE_INTEGER): number => {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n","// sanitizeNumberString accepts a number string and returns back a clean number string.\n// For example, input '1234.5678' will return '1234.5678' but '12javascript:{}etc' will return '12'\nexport const sanitizeNumberString = (numString: string | null): string => {\n  if (!numString || typeof numString !== 'string') {\n    return ''\n  }\n  const v = numString.match(/[\\d.]+/)\n  return v && v.length > 0 ? v[0].trim() : ''\n}\n\n// sanitizeAlphanumeric accepts any string and returns alphanumeric contents only\nexport const sanitizeAlphanumeric = (alphanum: string): string => {\n  if (!alphanum || typeof alphanum !== 'string') {\n    return ''\n  }\n  const v = alphanum.match(/[\\w\\s\\d]+/)\n  return v && v.length > 0 ? v[0].trim() : ''\n}\n\n// sanitizeHost accepts any string and returns valid host string\nexport const sanitizeHost = (host: string): string => {\n  if (!host || typeof host !== 'string') {\n    return ''\n  }\n  const v = host.match(/[\\w\\d.\\-:\\/]+/)\n  return v && v.length > 0 ? v[0].trim() : ''\n}\n","import { ethers, TypedDataDomain, TypedDataField } from 'ethers'\n\nexport interface TypedData {\n  domain: TypedDataDomain\n  types: Record<string, Array<TypedDataField>>\n  message: Record<string, any>\n  primaryType?: string\n}\n\nexport type { TypedDataDomain, TypedDataField }\n\nexport const encodeTypedDataHash = (typedData: TypedData): string => {\n  const types = { ...typedData.types }\n\n  // remove EIP712Domain key from types as ethers will auto-gen it in\n  // the hash encoder below\n  delete types['EIP712Domain']\n\n  return ethers.TypedDataEncoder.hash(typedData.domain, types, typedData.message)\n}\n\nexport const encodeTypedDataDigest = (typedData: TypedData): Uint8Array => {\n  return ethers.getBytes(encodeTypedDataHash(typedData))\n}\n","import { ethers } from 'ethers'\n\nconst { defineProperties, resolveProperties } = ethers\n\nexport { defineProperties, resolveProperties }\n\nexport type Optionals<T extends object> = Omit<\n  T,\n  Exclude<\n    {\n      [K in keyof T]: T extends Record<K, T[K]> ? K : never\n    }[keyof T],\n    undefined\n  >\n>\n\nexport type Mask<T, K> = Omit<T, keyof K>\n\nexport type Forbid<T, K extends keyof any> = T & {\n  [P in K]?: never\n}\n","import { ethers } from 'ethers'\nimport { Indexer } from '@0xsequence/indexer'\nimport { Relayer, RpcRelayerOptions } from '@0xsequence/relayer'\nimport { findNetworkConfig, stringTemplate, validateAndSortNetworks } from './utils'\nimport { isBigNumberish } from '@0xsequence/utils'\nimport { ChainId, NetworkMetadata, networks } from './constants'\n\nexport type NetworkConfig = NetworkMetadata & {\n  rpcUrl: string\n  provider?: ethers.Provider\n  indexerUrl?: string\n  indexer?: Indexer\n  relayer?: Relayer | RpcRelayerOptions\n\n  // isDefaultChain identifies the default network. For example, a dapp may run on the Polygon\n  // network and may configure the wallet to use it as its main/default chain.\n  isDefaultChain?: boolean\n\n  // Disabled / deprecated chain\n  disabled?: boolean\n}\n\ntype LegacyNetworkConfig = NetworkConfig & { isAuthChain?: boolean }\n\nexport const indexerURL = (network: string) => stringTemplate('https://${network}-indexer.sequence.app', { network })\nexport const relayerURL = (network: string) => stringTemplate('https://${network}-relayer.sequence.app', { network })\nexport const nodesURL = (network: string) => stringTemplate('https://nodes.sequence.app/${network}', { network })\n\nexport function findSupportedNetwork(chainIdOrName: string | ChainIdLike): NetworkConfig | undefined {\n  return findNetworkConfig(allNetworks, chainIdOrName)\n}\n\nexport type ChainIdLike = NetworkConfig | ethers.BigNumberish\n\nexport function toChainIdNumber(chainIdLike: ChainIdLike): bigint {\n  if (typeof chainIdLike === 'bigint') {\n    return chainIdLike\n  }\n\n  if (isBigNumberish(chainIdLike)) {\n    return BigInt(chainIdLike)\n  }\n\n  return BigInt(chainIdLike.chainId)\n}\n\nconst createNetworkConfig = (chainId: ChainId, options?: { disabled?: boolean }): NetworkConfig => {\n  const network = networks[chainId]\n\n  if (!network) {\n    throw new Error(`Network with chainId ${chainId} not found`)\n  }\n\n  const rpcUrl = nodesURL(network.name)\n\n  return {\n    ...network,\n    rpcUrl,\n    indexerUrl: indexerURL(network.name),\n    relayer: {\n      url: relayerURL(network.name),\n      provider: {\n        url: rpcUrl\n      }\n    },\n    ...options\n  }\n}\n\nexport const hardhatNetworks = [\n  {\n    ...networks[ChainId.HARDHAT],\n    rpcUrl: 'http://localhost:8545',\n    relayer: {\n      url: 'http://localhost:3000',\n      provider: {\n        url: 'http://localhost:8545'\n      }\n    }\n  },\n  {\n    ...networks[ChainId.HARDHAT_2],\n    rpcUrl: 'http://localhost:9545',\n    relayer: {\n      url: 'http://localhost:3000',\n      provider: {\n        url: 'http://localhost:9545'\n      }\n    }\n  }\n]\n\nexport const allNetworks = validateAndSortNetworks([\n  { ...createNetworkConfig(ChainId.POLYGON), isDefaultChain: true, isAuthChain: true } as LegacyNetworkConfig,\n  createNetworkConfig(ChainId.MAINNET),\n  createNetworkConfig(ChainId.BSC),\n  createNetworkConfig(ChainId.AVALANCHE),\n  createNetworkConfig(ChainId.ARBITRUM),\n  createNetworkConfig(ChainId.ARBITRUM_NOVA),\n  createNetworkConfig(ChainId.OPTIMISM),\n  createNetworkConfig(ChainId.OPTIMISM_SEPOLIA),\n  createNetworkConfig(ChainId.POLYGON_ZKEVM),\n  createNetworkConfig(ChainId.GNOSIS),\n  createNetworkConfig(ChainId.RINKEBY, { disabled: true }),\n  createNetworkConfig(ChainId.GOERLI, { disabled: true }),\n  createNetworkConfig(ChainId.SEPOLIA),\n  createNetworkConfig(ChainId.POLYGON_MUMBAI, { disabled: true }),\n  createNetworkConfig(ChainId.POLYGON_AMOY),\n  createNetworkConfig(ChainId.BSC_TESTNET),\n  createNetworkConfig(ChainId.ARBITRUM_SEPOLIA),\n  createNetworkConfig(ChainId.BASE),\n  createNetworkConfig(ChainId.BASE_SEPOLIA),\n  createNetworkConfig(ChainId.HOMEVERSE),\n  createNetworkConfig(ChainId.HOMEVERSE_TESTNET),\n  createNetworkConfig(ChainId.XAI),\n  createNetworkConfig(ChainId.XAI_SEPOLIA),\n  createNetworkConfig(ChainId.AVALANCHE_TESTNET),\n  createNetworkConfig(ChainId.ASTAR_ZKEVM),\n  createNetworkConfig(ChainId.ASTAR_ZKYOTO),\n  createNetworkConfig(ChainId.XR_SEPOLIA),\n  createNetworkConfig(ChainId.B3_SEPOLIA),\n  createNetworkConfig(ChainId.APECHAIN_TESTNET),\n  createNetworkConfig(ChainId.BLAST),\n  createNetworkConfig(ChainId.BLAST_SEPOLIA),\n  createNetworkConfig(ChainId.TELOS),\n  createNetworkConfig(ChainId.BORNE_TESTNET),\n  createNetworkConfig(ChainId.SKALE_NEBULA_TESTNET),\n  createNetworkConfig(ChainId.SONEIUM_MINATO),\n  ...hardhatNetworks\n])\n","import { EIP1193Provider, EIP1193ProviderFunc, JsonRpcMiddleware, JsonRpcMiddlewareHandler } from './types'\n\nexport class JsonRpcRouter implements EIP1193Provider {\n  private sender: EIP1193Provider\n  private handler: EIP1193Provider\n\n  constructor(middlewares: Array<JsonRpcMiddleware | JsonRpcMiddlewareHandler>, sender: EIP1193Provider) {\n    this.sender = sender\n    if (middlewares) {\n      this.setMiddleware(middlewares)\n    }\n  }\n\n  setMiddleware(middlewares: Array<JsonRpcMiddleware | JsonRpcMiddlewareHandler>) {\n    this.handler = createJsonRpcMiddlewareStack(middlewares, this.sender)\n  }\n\n  request(request: { id?: number; method: string; params?: any[]; chainId?: number }): Promise<any> {\n    return this.handler.request(request)\n  }\n}\n\nexport const createJsonRpcMiddlewareStack = (\n  middlewares: Array<JsonRpcMiddleware | JsonRpcMiddlewareHandler>,\n  handler: EIP1193Provider\n): EIP1193Provider => {\n  if (middlewares.length === 0) return handler\n\n  const toMiddleware = (v: any): JsonRpcMiddleware => {\n    if (v.requestHandler) {\n      return (v as JsonRpcMiddlewareHandler).requestHandler\n    } else {\n      return v\n    }\n  }\n\n  let chain: EIP1193ProviderFunc\n  chain = toMiddleware(middlewares[middlewares.length - 1])(handler.request)\n  for (let i = middlewares.length - 2; i >= 0; i--) {\n    chain = toMiddleware(middlewares[i])(chain)\n  }\n  return { request: chain }\n}\n","import { ethers } from 'ethers'\nimport { JsonRpcSender } from './types'\n\n// TODOXXX: review..\nexport function isJsonRpcProvider(cand: any): cand is ethers.JsonRpcProvider {\n  return (\n    cand !== undefined &&\n    cand.send !== undefined &&\n    cand.constructor.defaultUrl !== undefined &&\n    cand.detectNetwork !== undefined &&\n    cand.getSigner !== undefined &&\n    cand.perform !== undefined\n  )\n}\n\nexport function isJsonRpcSender(cand: any): cand is JsonRpcSender {\n  return cand !== undefined && cand.send !== undefined\n}\n","import { ethers } from 'ethers'\nimport { EIP1193Provider, EIP1193ProviderFunc, JsonRpcSender } from './types'\n\nimport { isJsonRpcSender, isJsonRpcProvider } from './utils'\n\nexport class JsonRpcHandler implements EIP1193Provider, JsonRpcSender {\n  private provider: EIP1193ProviderFunc\n  private defaultChainId?: number\n\n  constructor(provider: EIP1193ProviderFunc | JsonRpcSender | ethers.JsonRpcProvider, defaultChainId?: number) {\n    if (isJsonRpcSender(provider)) {\n      this.provider = (request: { method: string; params?: any[]; chainId?: number }): Promise<any> => {\n        return provider.send(request.method, request.params, request.chainId)\n      }\n    } else if (isJsonRpcProvider(provider)) {\n      this.provider = (request: { method: string; params?: any[]; chainId?: number }): Promise<any> => {\n        return provider.send(request.method, request.params || [])\n      }\n    } else {\n      this.provider = provider\n    }\n    this.defaultChainId = defaultChainId\n  }\n\n  request = (request: { method: string; params?: any[]; chainId?: number }): Promise<any> => {\n    if (!request.chainId) {\n      request.chainId = this.defaultChainId\n    }\n    return this.provider(request)\n  }\n\n  send(method: string, params?: any[], chainId?: number): Promise<any> {\n    const request = {\n      method,\n      params,\n      chainId\n    }\n    return this.request(request)\n  }\n}\n","import { JsonRpcRequest, EIP1193ProviderFunc, JsonRpcMiddleware, JsonRpcMiddlewareHandler } from '../types'\n\nexport class AllowProvider implements JsonRpcMiddlewareHandler {\n  requestHandler: JsonRpcMiddleware\n\n  private isAllowedFunc: (request: JsonRpcRequest) => boolean\n\n  constructor(isAllowedFunc?: (request: JsonRpcRequest) => boolean) {\n    if (isAllowedFunc) {\n      this.isAllowedFunc = isAllowedFunc\n    } else {\n      this.isAllowedFunc = (request: JsonRpcRequest): boolean => true\n    }\n\n    this.requestHandler = allowProviderMiddleware(this.isAllowedFunc)\n  }\n\n  setIsAllowedFunc(fn: (request: JsonRpcRequest) => boolean) {\n    this.isAllowedFunc = fn\n    this.requestHandler = allowProviderMiddleware(this.isAllowedFunc)\n  }\n}\n\nexport const allowProviderMiddleware =\n  (isAllowed: (request: JsonRpcRequest) => boolean): JsonRpcMiddleware =>\n  (next: EIP1193ProviderFunc) => {\n    return (request: JsonRpcRequest): Promise<any> => {\n      // ensure precondition is met or do not allow the request to continue\n      if (!isAllowed(request)) {\n        throw new Error('allowProvider middleware precondition is unmet.')\n      }\n\n      // request is allowed. keep going..\n      return next(request)\n    }\n  }\n","import { EIP1193ProviderFunc, JsonRpcRequest, JsonRpcMiddlewareHandler } from '../types'\n\nexport interface CachedProviderOptions {\n  // defaultChainId passes a chainId to provider handler if one isn't passed.\n  // This is used in multi-chain mode\n  defaultChainId?: number\n\n  // blockCache toggle, with option to pass specific set of methods to use with\n  // the block cache.\n  blockCache?: boolean | string[]\n}\n\nexport class CachedProvider implements JsonRpcMiddlewareHandler {\n  // cachableJsonRpcMethods which can be permanently cached for lifetime\n  // of the provider.\n  private cachableJsonRpcMethods = [\n    'net_version',\n    'eth_chainId',\n    'eth_accounts',\n    'sequence_getWalletContext',\n    'sequence_getNetworks'\n  ]\n\n  // cachableJsonRpcMethodsByBlock which can be temporarily cached for a short\n  // period of time, essentially by block time. As we support chains fast blocks,\n  // we keep the values here cachable only for 1.5 seconds. This is still useful to\n  // memoize the calls within app-code that calls out to fetch these values within\n  // a short period of time.\n  private cachableJsonRpcMethodsByBlock: string[] = ['eth_call', 'eth_getCode']\n\n  // cache for life-time of provider (unless explicitly cleared)\n  private cache: { [key: string]: any }\n\n  // cache by block, simulated by using a 1 second life-time\n  private cacheByBlock: { [key: string]: any }\n  private cacheByBlockResetLock: boolean = false\n\n  // onUpdateCallback callback to be notified when cache values are set.\n  private onUpdateCallback?: (key?: string, value?: any) => void\n\n  // defaultChainId is used for default chain select with used with multi-chain provider\n  readonly defaultChainId?: number\n\n  constructor(options?: CachedProviderOptions) {\n    this.cache = {}\n    this.cacheByBlock = {}\n    this.defaultChainId = options?.defaultChainId\n    if (!options?.blockCache) {\n      this.cachableJsonRpcMethodsByBlock = []\n    } else if (options?.blockCache !== true) {\n      this.cachableJsonRpcMethodsByBlock = options?.blockCache\n    }\n  }\n\n  requestHandler = (next: EIP1193ProviderFunc) => {\n    return async (request: JsonRpcRequest): Promise<any> => {\n      // Respond early with cached result\n      if (this.cachableJsonRpcMethods.includes(request.method) || this.cachableJsonRpcMethodsByBlock.includes(request.method)) {\n        const key = this.cacheKey(request.method, request.params! as any[], request.chainId || this.defaultChainId)\n        const result = this.getCacheValue(key)\n        if (result && result !== '') {\n          return {\n            id: request.id!,\n            result\n          }\n        }\n      }\n\n      // Continue down the handler chain\n      const result = await next(request)\n\n      // Store result in cache and continue\n      if (this.cachableJsonRpcMethods.includes(request.method) || this.cachableJsonRpcMethodsByBlock.includes(request.method)) {\n        if (result && this.shouldCacheResponse(request, result)) {\n          // cache the value\n          const key = this.cacheKey(request.method, request.params! as any[], request.chainId || this.defaultChainId)\n\n          if (this.cachableJsonRpcMethods.includes(request.method)) {\n            this.setCacheValue(key, result)\n          } else {\n            this.setCacheByBlockValue(key, result)\n          }\n        }\n      }\n\n      return result\n    }\n  }\n\n  cacheKey = (method: string, params: any[], chainId?: number) => {\n    let key = ''\n    if (chainId) {\n      key = `${chainId}:${method}:`\n    } else {\n      key = `:${method}:`\n    }\n    if (!params || params.length === 0) {\n      return key + '[]'\n    }\n    return key + JSON.stringify(params)\n  }\n\n  getCache = () => this.cache\n\n  setCache = (cache: { [key: string]: any }) => {\n    this.cache = cache\n    if (this.onUpdateCallback) {\n      this.onUpdateCallback()\n    }\n  }\n\n  getCacheValue = (key: string): any => {\n    if (this.cache[key]) {\n      return this.cache[key]\n    }\n    if (this.cacheByBlock[key]) {\n      return this.cacheByBlock[key]\n    }\n    return undefined\n  }\n\n  setCacheValue = (key: string, value: any) => {\n    this.cache[key] = value\n    if (this.onUpdateCallback) {\n      this.onUpdateCallback(key, value)\n    }\n  }\n\n  setCacheByBlockValue = (key: string, value: any) => {\n    this.cacheByBlock[key] = value\n\n    // clear the cacheByBlock once every X period of time\n    if (!this.cacheByBlockResetLock) {\n      this.cacheByBlockResetLock = true\n      setTimeout(() => {\n        this.cacheByBlockResetLock = false\n        this.cacheByBlock = {}\n      }, 1500) // 1.5 second cache lifetime\n    }\n  }\n\n  shouldCacheResponse = (request: JsonRpcRequest, result?: any): boolean => {\n    // skip if we do not have response result\n    if (!result) {\n      return false\n    }\n\n    // skip caching eth_getCode where resposne value is '0x' or empty\n    if (request.method === 'eth_getCode' && result.length <= 2) {\n      return false\n    }\n\n    // all good -- signal to cache the result\n    return true\n  }\n\n  onUpdate(callback: (key?: string, value?: any) => void) {\n    this.onUpdateCallback = callback\n  }\n\n  clearCache = () => {\n    this.cache = {}\n    this.cacheByBlock = {}\n  }\n}\n","import { commons } from '@0xsequence/core'\nimport { ethers } from 'ethers'\nimport { EIP1193ProviderFunc, JsonRpcMiddlewareHandler, JsonRpcRequest } from '../types'\n\n// EagerProvider will eagerly respond to a provider request from pre-initialized data values.\n//\n// This is useful for saving a few remote calls for responses we're already expecting when\n// communicating to a specific network provider.\n\nexport type EagerProviderOptions = {\n  accountAddress?: string\n  chainId?: number\n  walletContext?: commons.context.VersionedContext\n}\n\nexport class EagerProvider implements JsonRpcMiddlewareHandler {\n  readonly options: EagerProviderOptions\n\n  constructor(options: EagerProviderOptions) {\n    this.options = options\n  }\n\n  requestHandler = (next: EIP1193ProviderFunc) => {\n    return async (request: JsonRpcRequest): Promise<any> => {\n      switch (request.method) {\n        case 'net_version':\n          if (this.options.chainId) {\n            return `${this.options.chainId}`\n          }\n          break\n\n        case 'eth_chainId':\n          if (this.options.chainId) {\n            return ethers.toQuantity(this.options.chainId)\n          }\n          break\n\n        case 'eth_accounts':\n          if (this.options.accountAddress) {\n            return [ethers.getAddress(this.options.accountAddress)]\n          }\n          break\n\n        case 'sequence_getWalletContext':\n          if (this.options.walletContext) {\n            return this.options.walletContext\n          }\n          break\n\n        default:\n      }\n\n      return next(request)\n    }\n  }\n}\n","import { EIP1193ProviderFunc, JsonRpcMiddleware } from '../types'\n\nexport const exceptionProviderMiddleware: JsonRpcMiddleware = (next: EIP1193ProviderFunc) => {\n  return async (request: { method: string; params?: any[]; chainId?: number }): Promise<any> => {\n    try {\n      return await next(request)\n    } catch (error) {\n      if (typeof error === 'string') {\n        throw new Error(error)\n      } else {\n        throw new Error(error.message)\n      }\n    }\n  }\n}\n","import { EIP1193ProviderFunc, JsonRpcMiddleware, JsonRpcRequest } from '../types'\nimport { logger } from '@0xsequence/utils'\n\n// TODO: rename to loggerMiddleware\nexport const loggingProviderMiddleware: JsonRpcMiddleware = (next: EIP1193ProviderFunc) => {\n  return async (request: JsonRpcRequest): Promise<any> => {\n    const chainIdLabel = request.chainId ? ` chainId:${request.chainId}` : ''\n    logger.info(`[provider request]${chainIdLabel} id:${request.id} method:${request.method} params:`, request.params)\n\n    try {\n      const result = await next(request)\n\n      logger.info(\n        `[provider response]${chainIdLabel} id:${request.id} method:${request.method} params:`,\n        request.params,\n        `result:`,\n        result\n      )\n\n      return result\n    } catch (error) {\n      logger.warn(\n        `[provider response]${chainIdLabel} id:${request.id} method:${request.method} params:`,\n        request.params,\n        `error:`,\n        error\n      )\n    }\n  }\n}\n","import { EIP1193Provider, EIP1193ProviderFunc, JsonRpcMiddlewareHandler, JsonRpcRequest } from '../types'\n\nexport const SignerJsonRpcMethods = [\n  'personal_sign',\n  'eth_sign',\n  'eth_signTypedData',\n  'eth_signTypedData_v4',\n  'eth_sendTransaction',\n  'eth_sendRawTransaction',\n  'sequence_sign', // sequence-aware personal_sign\n  'sequence_signTypedData_v4', // sequence-aware eth_signTypedData_v4\n\n  'sequence_getWalletContext',\n  'sequence_getWalletConfig',\n  'sequence_getWalletState',\n  'sequence_getNetworks',\n  'sequence_updateConfig',\n  'sequence_publishConfig',\n  'sequence_gasRefundOptions',\n  'sequence_getNonce',\n  'sequence_relay',\n\n  'eth_decrypt',\n  'eth_getEncryptionPublicKey',\n  'wallet_addEthereumChain',\n  'wallet_switchEthereumChain',\n  'wallet_registerOnboarding',\n  'wallet_watchAsset',\n  'wallet_scanQRCode'\n]\n\nexport class SigningProvider implements JsonRpcMiddlewareHandler {\n  private provider: EIP1193Provider\n\n  constructor(provider: EIP1193Provider) {\n    this.provider = provider\n  }\n\n  requestHandler = (next: EIP1193ProviderFunc) => {\n    return (request: JsonRpcRequest): Promise<any> => {\n      // Forward signing requests to the signing provider\n      if (SignerJsonRpcMethods.includes(request.method)) {\n        return this.provider.request(request)\n      }\n\n      // Continue to next handler\n      return next(request)\n    }\n  }\n}\n","import { EIP1193ProviderFunc, JsonRpcResponseCallback, JsonRpcMiddlewareHandler, JsonRpcRequest } from '../types'\n\nexport class SingleflightMiddleware implements JsonRpcMiddlewareHandler {\n  private singleflightJsonRpcMethods = [\n    'eth_chainId',\n    'net_version',\n    'eth_call',\n    'eth_getCode',\n    'eth_blockNumber',\n    'eth_getBalance',\n    'eth_getStorageAt',\n    'eth_getTransactionCount',\n    'eth_getBlockTransactionCountByHash',\n    'eth_getBlockTransactionCountByNumber',\n    'eth_getUncleCountByBlockHash',\n    'eth_getUncleCountByBlockNumber',\n    'eth_getBlockByHash',\n    'eth_getBlockByNumber',\n    'eth_getTransactionByHash',\n    'eth_getTransactionByBlockHashAndIndex',\n    'eth_getTransactionByBlockNumberAndIndex',\n    'eth_getTransactionReceipt',\n    'eth_getUncleByBlockHashAndIndex',\n    'eth_getUncleByBlockNumberAndIndex',\n    'eth_getLogs'\n  ]\n\n  inflight: { [key: string]: { id: number; callback: JsonRpcResponseCallback }[] }\n\n  constructor() {\n    this.inflight = {}\n  }\n\n  requestHandler = (next: EIP1193ProviderFunc) => {\n    return async (request: JsonRpcRequest): Promise<any> => {\n      // continue to next handler if method isn't part of methods list\n      if (!this.singleflightJsonRpcMethods.includes(request.method)) {\n        return next(request)\n      }\n\n      const key = this.requestKey(request.method, request.params || [], request.chainId)\n\n      if (!this.inflight[key]) {\n        // first request -- init the empty list\n        this.inflight[key] = []\n      } else {\n        // already in-flight, add the callback to the list and return\n        return new Promise<any>((resolve, reject) => {\n          this.inflight[key].push({\n            id: request.id!,\n            callback: (error: any, response: any) => {\n              if (error) {\n                reject(error)\n              } else {\n                resolve(response)\n              }\n            }\n          })\n        })\n      }\n\n      // Continue down the handler chain\n      try {\n        // Exec the handler, and on success resolve all other promises\n        const response = await next(request)\n        this.inflight[key].forEach(({ callback }) => callback(undefined, response))\n        return response\n      } catch (error) {\n        // If the request fails, reject all queued promises.\n        this.inflight[key].forEach(({ callback }) => callback(error, undefined))\n        throw error\n      } finally {\n        delete this.inflight[key]\n      }\n    }\n  }\n\n  requestKey = (method: string, params: any[], chainId?: number) => {\n    let key = ''\n    if (chainId) {\n      key = `${chainId}:${method}:`\n    } else {\n      key = `:${method}:`\n    }\n    if (!params || params.length === 0) {\n      return key + '[]'\n    }\n    return key + JSON.stringify(params)\n  }\n}\n","import { ethers } from 'ethers'\nimport {\n  JsonRpcRouter,\n  EagerProvider,\n  SingleflightMiddleware,\n  CachedProvider,\n  JsonRpcMiddleware,\n  JsonRpcMiddlewareHandler,\n  JsonRpcHandler,\n  EIP1193Provider,\n  JsonRpcSender,\n  JsonRpcRequest\n} from './json-rpc'\nimport { ChainId, networks } from './constants'\n\nexport interface JsonRpcProviderOptions {\n  // ..\n  chainId?: number\n\n  // ..\n  middlewares?: Array<JsonRpcMiddleware | JsonRpcMiddlewareHandler>\n\n  // ..\n  blockCache?: boolean | string[]\n}\n\n// JsonRpcProvider with a middleware stack. By default it will use a simple caching middleware.\nexport class JsonRpcProvider extends ethers.JsonRpcProvider implements EIP1193Provider, JsonRpcSender {\n  #chainId?: number\n  #nextId: number = 1\n  #sender: EIP1193Provider\n\n  constructor(\n    public url: string | ethers.FetchRequest | undefined,\n    options?: JsonRpcProviderOptions,\n    jsonRpcApiProviderOptions?: ethers.JsonRpcApiProviderOptions\n  ) {\n    super(url, options?.chainId, jsonRpcApiProviderOptions)\n\n    const chainId = options?.chainId\n    const middlewares = options?.middlewares\n    const blockCache = options?.blockCache\n\n    this.#chainId = chainId\n\n    // NOTE: it will either use the middleware stack passed to the constructor\n    // or it will use the default caching middleware provider. It does not concat them,\n    // so if you set middlewares, make sure you set the caching middleware yourself if you'd\n    // like to keep using it.\n    const router = new JsonRpcRouter(\n      middlewares ?? [\n        // loggingProviderMiddleware,\n        new EagerProvider({ chainId }),\n        new SingleflightMiddleware(),\n        new CachedProvider({ defaultChainId: chainId, blockCache: blockCache })\n      ],\n      new JsonRpcHandler(this.fetch, chainId)\n    )\n\n    this.#sender = router\n  }\n\n  async request(request: { method: string; params?: any[]; chainId?: number }): Promise<any> {\n    return this.#sender.request(request)\n  }\n\n  async send(method: string, params?: any[] | Record<string, any>, chainId?: number): Promise<any> {\n    return this.request({ method, params: params as any, chainId })\n  }\n\n  async getNetwork(): Promise<ethers.Network> {\n    const chainId = this.#chainId\n    if (chainId) {\n      const network = networks[chainId as ChainId]\n      const name = network?.name || ''\n      const ensAddress = network?.ensAddress\n      return ethers.Network.from({\n        name,\n        chainId,\n        ensAddress\n      })\n    } else {\n      const chainIdHex = await this.send('eth_chainId', [])\n      this.#chainId = Number(chainIdHex)\n      return this.getNetwork()\n    }\n  }\n\n  private fetch = async (request: { method: string; params?: any[]; chainId?: number }): Promise<any> => {\n    if (this.url === undefined) {\n      throw new Error('missing provider URL')\n    }\n\n    const { method, params } = request\n\n    const jsonRpcRequest: JsonRpcRequest = {\n      method,\n      params,\n      id: this.#nextId++,\n      jsonrpc: '2.0'\n    }\n\n    // const result = ethers.fetchJson(this.connection, JSON.stringify(request), getResult).then(\n    //   result => {\n    //     return result\n    //   },\n    //   error => {\n    //     throw error\n    //   }\n    // )\n\n    const fetchRequest = typeof this.url === 'string' ? new ethers.FetchRequest(this.url) : this.url\n    fetchRequest.body = JSON.stringify(jsonRpcRequest)\n\n    // TODOXXX: what about headers, etc..?\n    // we probably need these in the options of the construtor, etc..\n\n    try {\n      const res = await fetchRequest.send()\n\n      if (res.body) {\n        try {\n          const result = JSON.parse(ethers.toUtf8String(res.body))\n\n          // TODO: Process result\n\n          return getResult(result)\n        } catch (err) {\n          throw new Error('invalid JSON response')\n        }\n      }\n\n      return null\n    } catch (err) {\n      // TODO - error handling\n      throw err\n    }\n  }\n}\n\nfunction getResult(payload: { error?: { code?: number; data?: any; message?: string }; result?: any }): any {\n  if (payload.error) {\n    // @TODO: not any\n    const error: any = new Error(payload.error.message)\n    error.code = payload.error.code\n    error.data = payload.error.data\n    throw error\n  }\n  return payload.result\n}\n","import { ethers } from 'ethers'\nimport * as config from './config'\n\nexport type SignaturePart = {\n  signature: string\n  isDynamic: boolean\n}\n\nexport type Signature<T extends config.Config> = {\n  version: number\n  config: T\n  subdigest: string\n  payload?: SignedPayload\n}\n\nexport type UnrecoveredSignature = {\n  version: number\n}\n\nexport type SignedPayload = {\n  message?: ethers.BytesLike\n  digest: string\n  chainId: ethers.BigNumberish\n  address: string\n}\n\nexport interface SignatureCoder<\n  Y extends config.Config = config.Config,\n  T extends Signature<Y> = Signature<Y>,\n  Z extends UnrecoveredSignature = UnrecoveredSignature\n> {\n  decode: (data: string) => Z\n  encode: (data: T | Z | ethers.BytesLike) => string\n\n  trim: (data: string) => Promise<string>\n\n  recover: (data: Z, payload: SignedPayload, provider: ethers.Provider) => Promise<T>\n\n  supportsNoChainId: boolean\n\n  encodeSigners: (\n    config: Y,\n    signatures: Map<string, SignaturePart>,\n    subdigests: string[],\n    chainId: ethers.BigNumberish\n  ) => {\n    encoded: string\n    weight: bigint\n  }\n\n  hasEnoughSigningPower: (config: Y, signatures: Map<string, SignaturePart>) => boolean\n\n  chainSignatures: (main: T | Z | ethers.BytesLike, suffixes: (T | Z | ethers.BytesLike)[]) => string\n\n  hashSetImageHash: (imageHash: string) => string\n\n  signaturesOf: (config: Y) => { address: string; signature: string }[]\n\n  signaturesOfDecoded: (decoded: Z) => string[]\n}\n\nexport function subdigestOf(payload: SignedPayload) {\n  return ethers.solidityPackedKeccak256(\n    ['bytes', 'uint256', 'address', 'bytes32'],\n    ['0x1901', payload.chainId, payload.address, payload.digest]\n  )\n}\n\nexport function isSignedPayload(payload: any): payload is SignedPayload {\n  return payload.digest !== undefined && payload.chainId !== undefined && payload.address !== undefined\n}\n","import { ethers } from 'ethers'\n\nconst EIP1271_MAGIC_VALUE = '0x1626ba7e'\n\nconst EIP1271_ABI = [\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        type: 'bytes32'\n      },\n      {\n        internalType: 'bytes',\n        type: 'bytes'\n      }\n    ],\n    name: 'isValidSignature',\n    outputs: [\n      {\n        internalType: 'bytes4',\n        type: 'bytes4'\n      }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  }\n]\n\nexport async function isValidEIP1271Signature(\n  address: string,\n  digest: string,\n  signature: ethers.BytesLike,\n  provider: ethers.Provider\n): Promise<boolean> {\n  const contract = new ethers.Contract(address, EIP1271_ABI, provider)\n  const result = await contract.isValidSignature(digest, signature)\n  return result === EIP1271_MAGIC_VALUE\n}\n","import { ethers } from 'ethers'\nimport { isValidEIP1271Signature } from './validateEIP1271'\n\nexport enum SigType {\n  EIP712 = 1,\n  ETH_SIGN = 2,\n  WALLET_BYTES32 = 3\n}\n\nexport function canRecover(signature: ethers.BytesLike) {\n  const bytes = ethers.getBytes(signature)\n  const type = bytes[bytes.length - 1]\n\n  return type === SigType.EIP712 || type === SigType.ETH_SIGN\n}\n\nexport function recoverSigner(digest: ethers.BytesLike, signature: ethers.BytesLike) {\n  const bytes = ethers.getBytes(signature)\n  const digestBytes = ethers.getBytes(digest)\n\n  // type is last byte\n  const type = bytes[bytes.length - 1]\n\n  // Split r:s:v\n  const r = ethers.hexlify(bytes.slice(0, 32))\n  const s = ethers.hexlify(bytes.slice(32, 64))\n  const v = Number(ethers.hexlify(bytes.slice(64, 65)))\n\n  const splitSignature = { r, s, v }\n\n  if (type === SigType.EIP712) {\n    return ethers.recoverAddress(digestBytes, splitSignature)\n  }\n\n  if (type === SigType.ETH_SIGN) {\n    return ethers.recoverAddress(ethers.hashMessage(digestBytes), splitSignature)\n  }\n\n  throw new Error(`Unsupported signature type: ${type}`)\n}\n\nexport function isValidSignature(\n  address: string,\n  digest: ethers.BytesLike,\n  signature: ethers.BytesLike,\n  provider: ethers.Provider\n) {\n  const bytes = ethers.getBytes(signature)\n\n  // type is last byte\n  const type = bytes[bytes.length - 1]\n\n  if (type === SigType.EIP712 || type === SigType.ETH_SIGN) {\n    return address === recoverSigner(digest, signature)\n  }\n\n  if (type === SigType.WALLET_BYTES32) {\n    return isValidEIP1271Signature(address, ethers.hexlify(digest), bytes.slice(0, -1), provider)\n  }\n\n  throw new Error(`Unsupported signature type: ${type}`)\n}\n\nexport function tryRecoverSigner(digest: ethers.BytesLike, signature: ethers.BytesLike): string | undefined {\n  const bytes = ethers.getBytes(signature)\n  if (bytes.length !== 66) return undefined\n\n  try {\n    return recoverSigner(digest, bytes)\n  } catch {}\n\n  return undefined\n}\n","import { ethers } from 'ethers'\nimport * as base from '../commons/signature'\nimport { AddressMember, WalletConfig } from './config'\nimport { isValidSignature, recoverSigner } from '../commons/signer'\n\nexport enum SignaturePartType {\n  EOASignature = 0,\n  Address = 1,\n  DynamicSignature = 2\n}\n\nexport type Signature = base.Signature<WalletConfig>\n\nexport type UnrecoveredSignatureMember = {\n  unrecovered: true\n  weight: ethers.BigNumberish\n  signature: string\n  address?: string\n  isDynamic: boolean\n}\n\nexport type UnrecoveredMember = AddressMember | UnrecoveredSignatureMember\n\nexport type UnrecoveredSignature = base.UnrecoveredSignature & {\n  threshold: ethers.BigNumberish\n  signers: UnrecoveredMember[]\n}\n\nexport function isAddressMember(member: any): member is AddressMember {\n  return (member as AddressMember).address !== undefined && !isUnrecoveredSignatureMember(member)\n}\n\nexport function isUnrecoveredSignatureMember(member: any): member is UnrecoveredSignatureMember {\n  return (\n    (member as UnrecoveredSignatureMember).signature !== undefined &&\n    (member as UnrecoveredSignatureMember).weight !== undefined &&\n    (member as UnrecoveredSignatureMember).isDynamic !== undefined\n  )\n}\n\nexport function isUnrecoveredSignature(signature: Signature | UnrecoveredSignature): signature is UnrecoveredSignature {\n  return (signature as UnrecoveredSignature).threshold !== undefined && (signature as UnrecoveredSignature).signers !== undefined\n}\n\nexport function decodeSignature(signature: ethers.BytesLike): UnrecoveredSignature {\n  const bytes = ethers.getBytes(signature)\n\n  const threshold = (bytes[0] << 8) | bytes[1]\n  const signers: UnrecoveredMember[] = []\n\n  for (let i = 2; i < bytes.length; ) {\n    const type = bytes[i++]\n    const weight = bytes[i++]\n\n    switch (type) {\n      case SignaturePartType.EOASignature:\n        signers.push({\n          unrecovered: true,\n          weight,\n          signature: ethers.hexlify(bytes.slice(i, i + 66)),\n          isDynamic: false\n        })\n        i += 66\n        break\n\n      case SignaturePartType.Address:\n        signers.push({\n          weight,\n          address: ethers.getAddress(ethers.hexlify(bytes.slice(i, i + 20)))\n        })\n        i += 20\n        break\n\n      case SignaturePartType.DynamicSignature:\n        const address = ethers.getAddress(ethers.hexlify(bytes.slice(i, i + 20)))\n        i += 20\n\n        const size = (bytes[i] << 8) | bytes[i + 1]\n        i += 2\n\n        signers.push({\n          unrecovered: true,\n          weight,\n          signature: ethers.hexlify(bytes.slice(i, i + size)),\n          address,\n          isDynamic: true\n        })\n        i += size\n        break\n\n      default:\n        throw new Error(`Unknown signature part type: ${type}`)\n    }\n  }\n\n  return { version: 1, threshold, signers }\n}\n\nexport function encodeSignature(signature: Signature | UnrecoveredSignature | ethers.BytesLike): string {\n  if (ethers.isBytesLike(signature)) {\n    return ethers.hexlify(signature)\n  }\n\n  const { signers, threshold } = isUnrecoveredSignature(signature) ? signature : signature.config\n\n  const encodedSigners = signers.map(s => {\n    if (isAddressMember(s)) {\n      return ethers.solidityPacked(['uint8', 'uint8', 'address'], [SignaturePartType.Address, s.weight, s.address])\n    }\n\n    if (s.isDynamic) {\n      const bytes = ethers.getBytes(s.signature)\n      return ethers.solidityPacked(\n        ['uint8', 'uint8', 'address', 'uint16', 'bytes'],\n        [SignaturePartType.DynamicSignature, s.weight, s.address, bytes.length, bytes]\n      )\n    }\n\n    return ethers.solidityPacked(['uint8', 'uint8', 'bytes'], [SignaturePartType.EOASignature, s.weight, s.signature])\n  })\n\n  return ethers.solidityPacked(['uint16', ...new Array(encodedSigners.length).fill('bytes')], [threshold, ...encodedSigners])\n}\n\nexport async function recoverSignature(\n  data: UnrecoveredSignature,\n  payload: base.SignedPayload,\n  provider: ethers.Provider\n): Promise<Signature> {\n  const subdigest = base.subdigestOf(payload)\n  const signers = await Promise.all(\n    data.signers.map(async s => {\n      if (isAddressMember(s)) {\n        return s\n      }\n\n      if (s.isDynamic) {\n        if (!s.address) throw new Error('Dynamic signature part must have address')\n        if (!isValidSignature(s.address, subdigest, s.signature, provider)) {\n          throw new Error(`Invalid dynamic signature part ${s.address}`)\n        }\n\n        return { address: s.address, weight: s.weight, signature: s.signature }\n      } else {\n        const address = recoverSigner(subdigest, s.signature)\n        return { address, weight: s.weight, signature: s.signature }\n      }\n    })\n  )\n\n  return {\n    version: 1,\n    payload,\n    subdigest,\n    config: {\n      version: 1,\n      threshold: data.threshold,\n      signers\n    }\n  }\n}\n\nexport function encodeSigners(\n  config: WalletConfig,\n  signatures: Map<string, base.SignaturePart>,\n  subdigests: string[],\n  _: ethers.BigNumberish\n): { encoded: string; weight: bigint } {\n  if (subdigests.length !== 0) {\n    throw new Error('Explicit subdigests not supported on v1')\n  }\n\n  let weight = 0n\n  const parts = config.signers.map(s => {\n    if (!signatures.has(s.address)) {\n      return s\n    }\n\n    const signature = signatures.get(s.address)!\n    const bytes = ethers.getBytes(signature.signature)\n\n    weight += BigInt(s.weight)\n\n    if (signature.isDynamic || bytes.length !== 66) {\n      return {\n        ...s,\n        isDynamic: true,\n        signature: signature.signature,\n        address: s.address\n      }\n    }\n\n    return {\n      ...s,\n      isDynamic: false,\n      signature: signature.signature\n    }\n  })\n\n  const encoded = encodeSignature({ version: 1, threshold: config.threshold, signers: parts })\n  return { encoded, weight }\n}\n\nexport const SignatureCoder: base.SignatureCoder<WalletConfig, Signature, UnrecoveredSignature> = {\n  decode: (data: string): UnrecoveredSignature => {\n    return decodeSignature(data)\n  },\n\n  encode: (data: Signature | UnrecoveredSignature | ethers.BytesLike): string => {\n    return encodeSignature(data)\n  },\n\n  trim: async (data: string): Promise<string> => {\n    return data\n  },\n\n  supportsNoChainId: true,\n\n  recover: (data: UnrecoveredSignature, payload: base.SignedPayload, provider: ethers.Provider): Promise<Signature> => {\n    return recoverSignature(data, payload, provider)\n  },\n\n  encodeSigners: (\n    config: WalletConfig,\n    signatures: Map<string, base.SignaturePart>,\n    subdigests: string[],\n    chainId: ethers.BigNumberish\n  ): {\n    encoded: string\n    weight: bigint\n  } => {\n    return encodeSigners(config, signatures, subdigests, chainId)\n  },\n\n  hasEnoughSigningPower: (config: WalletConfig, signatures: Map<string, base.SignaturePart>): boolean => {\n    const { weight } = SignatureCoder.encodeSigners(config, signatures, [], 0)\n    return weight >= BigInt(config.threshold)\n  },\n\n  chainSignatures: (\n    _main: Signature | UnrecoveredSignature | ethers.BytesLike,\n    _suffix: (Signature | UnrecoveredSignature | ethers.BytesLike)[]\n  ): string => {\n    throw new Error('Signature chaining not supported on v1')\n  },\n\n  hashSetImageHash: function (_imageHash: string): string {\n    throw new Error('Image hash not supported on v1')\n  },\n\n  signaturesOf(config: WalletConfig): { address: string; signature: string }[] {\n    return config.signers.filter(s => s.signature !== undefined).map(s => ({ address: s.address, signature: s.signature! }))\n  },\n\n  signaturesOfDecoded: function (data: UnrecoveredSignature): string[] {\n    return data.signers.map(s => s.signature).filter(s => s !== undefined) as string[]\n  }\n}\n","import { ethers } from 'ethers'\nimport { walletContracts } from '@0xsequence/abi'\nimport { commons } from '..'\nimport { encodeSigners } from './signature'\nimport { SimpleConfig } from '../commons/config'\n\nexport type AddressMember = {\n  weight: ethers.BigNumberish\n  address: string\n  signature?: string\n}\n\nexport type WalletConfig = commons.config.Config & {\n  threshold: ethers.BigNumberish\n  signers: AddressMember[]\n}\n\nexport const ConfigCoder: commons.config.ConfigCoder<WalletConfig> = {\n  isWalletConfig: (config: commons.config.Config): config is WalletConfig => {\n    return (\n      config.version === 1 && (config as WalletConfig).threshold !== undefined && (config as WalletConfig).signers !== undefined\n    )\n  },\n\n  imageHashOf: (config: WalletConfig): string => {\n    return config.signers.reduce(\n      (imageHash, signer) =>\n        ethers.keccak256(\n          ethers.AbiCoder.defaultAbiCoder().encode(['bytes32', 'uint8', 'address'], [imageHash, signer.weight, signer.address])\n        ),\n      ethers.solidityPacked(['uint256'], [config.threshold])\n    )\n  },\n\n  hasSubdigest: (_walletConfig: WalletConfig, _subdigest: string): boolean => {\n    // v1 does not support explicit subdigests\n    return false\n  },\n\n  isComplete: (_config: WalletConfig): boolean => {\n    // v1 does not support incomplete configs\n    return true\n  },\n\n  checkpointOf: (_config: WalletConfig): bigint => {\n    return 0n\n  },\n\n  signersOf: (config: WalletConfig): { address: string; weight: number }[] => {\n    return config.signers.map(s => ({ address: s.address, weight: Number(s.weight) }))\n  },\n\n  fromSimple: (config: SimpleConfig): WalletConfig => {\n    if (BigInt(config.checkpoint) !== 0n) {\n      throw new Error('v1 wallet config does not support checkpoint')\n    }\n\n    if (config.subdigests && config.subdigests.length > 0) {\n      throw new Error('v1 wallet config does not support subdigests')\n    }\n\n    return {\n      version: 1,\n      threshold: config.threshold,\n      signers: config.signers\n    }\n  },\n\n  update: {\n    isKindUsed: true,\n\n    buildTransaction: (\n      wallet: string,\n      config: WalletConfig,\n      context: commons.context.WalletContext,\n      kind?: 'first' | 'later' | undefined\n    ): commons.transaction.TransactionBundle => {\n      const module = new ethers.Interface([...walletContracts.mainModule.abi, ...walletContracts.mainModuleUpgradable.abi])\n\n      const transactions: commons.transaction.Transaction[] = []\n\n      if (!kind || kind === 'first') {\n        transactions.push({\n          to: wallet,\n          data: module.encodeFunctionData(module.getFunction('updateImplementation')!, [context.mainModuleUpgradable]),\n          gasLimit: 0,\n          delegateCall: false,\n          revertOnError: true,\n          value: 0\n        })\n      }\n\n      transactions.push({\n        to: wallet,\n        data: module.encodeFunctionData(module.getFunction('updateImageHash')!, [ConfigCoder.imageHashOf(config)]),\n        gasLimit: 0,\n        delegateCall: false,\n        revertOnError: true,\n        value: 0\n      })\n\n      return {\n        entrypoint: wallet,\n        transactions\n      }\n    },\n    decodeTransaction: function (tx: commons.transaction.TransactionBundle): {\n      address: string\n      newImageHash: string\n      kind: 'first' | 'later' | undefined\n    } {\n      throw new Error('Function not implemented.')\n    }\n  },\n\n  toJSON: function (config: WalletConfig): string {\n    const plainMembers = config.signers.map(signer => {\n      return {\n        weight: BigInt(signer.weight).toString(),\n        address: signer.address\n      }\n    })\n\n    return JSON.stringify({\n      version: config.version,\n      threshold: BigInt(config.threshold).toString(),\n      signers: plainMembers\n    })\n  },\n\n  fromJSON: function (json: string): WalletConfig {\n    const parsed = JSON.parse(json)\n\n    const signers = parsed.signers.map((signer: any) => {\n      return {\n        weight: BigInt(signer.weight),\n        address: signer.address\n      }\n    })\n\n    return {\n      version: parsed.version,\n      threshold: BigInt(parsed.threshold),\n      signers\n    }\n  },\n\n  editConfig: function (\n    config: WalletConfig,\n    action: {\n      add?: commons.config.SimpleSigner[]\n      remove?: string[]\n      threshold?: ethers.BigNumberish\n      checkpoint?: ethers.BigNumberish\n    }\n  ): WalletConfig {\n    const newSigners = config.signers.slice()\n\n    if (action.checkpoint && BigInt(action.checkpoint) !== 0n) {\n      throw new Error('v1 wallet config does not support checkpoint')\n    }\n\n    if (action.add) {\n      for (const signer of action.add) {\n        if (newSigners.find(s => s.address === signer.address)) {\n          continue\n        }\n\n        newSigners.push({\n          weight: signer.weight,\n          address: signer.address\n        })\n      }\n    }\n\n    if (action.remove) {\n      for (const address of action.remove) {\n        const index = newSigners.findIndex(signer => signer.address === address)\n        if (index >= 0) {\n          newSigners.splice(index, 1)\n        }\n      }\n    }\n\n    return {\n      version: config.version,\n      threshold: action.threshold ?? config.threshold,\n      signers: newSigners\n    }\n  },\n\n  buildStubSignature: function (config: WalletConfig, overrides: Map<string, string>) {\n    const parts = new Map<string, commons.signature.SignaturePart>()\n\n    for (const [signer, signature] of overrides.entries()) {\n      parts.set(signer, { signature, isDynamic: true })\n\n      const { encoded, weight } = encodeSigners(config, parts, [], 0)\n\n      if (weight >= BigInt(config.threshold)) {\n        return encoded\n      }\n    }\n\n    const signers = config.signers\n\n    for (const { address } of signers.sort(({ weight: a }, { weight: b }) => Number(a) - Number(b))) {\n      const signature =\n        '0x4e82f02f388a12b5f9d29eaf2452dd040c0ee5804b4e504b4dd64e396c6c781f2c7624195acba242dd825bfd25a290912e3c230841fd55c9a734c4de8d9899451b02'\n      parts.set(address, { signature, isDynamic: false })\n\n      const { encoded, weight } = encodeSigners(config, parts, [], 0)\n\n      if (weight >= BigInt(config.threshold)) {\n        return encoded\n      }\n    }\n\n    return encodeSigners(config, parts, [], 0).encoded\n  }\n}\n","import { WalletContext } from '../commons/context'\n\nexport * as config from './config'\nexport * as context from './context'\nexport * as signature from './signature'\n\nexport const version = 1\n\nexport const DeployedWalletContext: WalletContext = {\n  version: version,\n  factory: '0xf9D09D634Fb818b05149329C1dcCFAeA53639d96',\n  guestModule: '0x02390F3E6E5FD1C6786CB78FD3027C117a9955A7',\n  mainModule: '0xd01F11855bCcb95f88D7A48492F66410d4637313',\n  mainModuleUpgradable: '0x7EFE6cE415956c5f80C6530cC6cc81b4808F6118',\n  walletCreationCode: '0x603a600e3d39601a805130553df3363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3'\n}\n","import { ethers } from 'ethers'\n\n//                              = keccak256(\"SetImageHash(bytes32 imageHash)\")\nexport const SetImageHashPrefix = '0x8713a7c4465f6fbee2b6e9d6646d1d9f83fec929edfc4baf661f3c865bdd04d1'\n\nexport function hashSetImageHash(imageHash: string): string {\n  return ethers.keccak256(messageSetImageHash(imageHash))\n}\n\nexport function messageSetImageHash(imageHash: string) {\n  return ethers.solidityPacked(['bytes32', 'bytes32'], [SetImageHashPrefix, imageHash])\n}\n\nexport function decodeMessageSetImageHash(message: ethers.BytesLike): string | undefined {\n  const arr = ethers.getBytes(message)\n\n  if (arr.length !== 64) {\n    return undefined\n  }\n\n  if (ethers.hexlify(arr.slice(0, 32)) !== SetImageHashPrefix) {\n    return undefined\n  }\n\n  return ethers.hexlify(arr.slice(32, 64))\n}\n\nexport function isMessageSetImageHash(message: ethers.BytesLike): boolean {\n  return decodeMessageSetImageHash(message) !== undefined\n}\n","import { ethers } from 'ethers'\nimport { MAX_UINT_256 } from '@0xsequence/utils'\nimport { isValidSignature, recoverSigner } from '../commons/signer'\nimport {\n  hashNode,\n  isNestedLeaf,\n  isNode,\n  isNodeLeaf,\n  isSignerLeaf,\n  isSubdigestLeaf,\n  Leaf,\n  WalletConfig,\n  SignerLeaf,\n  Topology,\n  imageHash,\n  NodeLeaf,\n  decodeSignerLeaf,\n  isEncodedSignerLeaf\n} from './config'\nimport * as base from '../commons/signature'\nimport { hashSetImageHash } from './chained'\n\nexport enum SignatureType {\n  Legacy = 0,\n  Dynamic = 1,\n  NoChainIdDynamic = 2,\n  Chained = 3\n}\n\nexport enum SignaturePartType {\n  Signature = 0,\n  Address = 1,\n  DynamicSignature = 2,\n  Node = 3,\n  Branch = 4,\n  Subdigest = 5,\n  Nested = 6\n}\n\nexport const SignaturePartTypeLength = 66\n\nexport type SignatureLeaf = SignerLeaf & {\n  signature: string\n  isDynamic: boolean\n}\n\nexport type UnrecoveredSignatureLeaf = Omit<SignatureLeaf, 'address'> &\n  Pick<Partial<SignatureLeaf>, 'address'> & {\n    unrecovered: true\n  }\n\nexport type UnrecoveredNestedLeaf = {\n  tree: UnrecoveredTopology\n  weight: ethers.BigNumberish\n  threshold: ethers.BigNumberish\n}\n\nexport type UnrecoveredLeaf = UnrecoveredNestedLeaf | UnrecoveredSignatureLeaf | Leaf\n\nexport type UnrecoveredNode = {\n  left: UnrecoveredNode | UnrecoveredLeaf\n  right: UnrecoveredNode | UnrecoveredLeaf\n}\n\nexport type UnrecoveredTopology = UnrecoveredNode | UnrecoveredLeaf\n\nexport function isUnrecoveredNode(node: UnrecoveredTopology): node is UnrecoveredNode {\n  return (node as UnrecoveredNode).left !== undefined && (node as UnrecoveredNode).right !== undefined\n}\n\nexport function isUnrecoveredNestedLeaf(leaf: UnrecoveredTopology): leaf is UnrecoveredNestedLeaf {\n  return (leaf as UnrecoveredNestedLeaf).tree !== undefined\n}\n\nexport function isUnrecoveredSignatureLeaf(leaf: UnrecoveredTopology): leaf is UnrecoveredSignatureLeaf {\n  return (\n    (leaf as UnrecoveredSignatureLeaf).unrecovered &&\n    (leaf as UnrecoveredSignatureLeaf).signature !== undefined &&\n    (leaf as UnrecoveredSignatureLeaf).isDynamic !== undefined\n  )\n}\n\nexport function decodeSignatureTree(body: ethers.BytesLike): UnrecoveredTopology {\n  let arr = ethers.getBytes(body)\n\n  let pointer: undefined | (Omit<UnrecoveredNode, 'right'> & Pick<Partial<UnrecoveredNode>, 'right'>)\n\n  const append = (prevPointer: typeof pointer, node: UnrecoveredNode | UnrecoveredLeaf): typeof pointer => {\n    if (!prevPointer) {\n      return {\n        left: node\n      }\n    }\n\n    if (!prevPointer.right) {\n      return {\n        left: prevPointer.left,\n        right: node\n      }\n    }\n\n    return {\n      left: prevPointer as Required<typeof prevPointer>,\n      right: node\n    }\n  }\n\n  while (arr.length > 0) {\n    const type = arr[0] as SignaturePartType\n    arr = arr.slice(1)\n\n    switch (type) {\n      case SignaturePartType.Signature:\n        {\n          const weight = arr[0]\n          const signature = ethers.hexlify(arr.slice(1, SignaturePartTypeLength + 1))\n\n          pointer = append(pointer, {\n            signature,\n            weight,\n            unrecovered: true,\n            isDynamic: false\n          })\n          arr = arr.slice(SignaturePartTypeLength + 1)\n        }\n        break\n\n      case SignaturePartType.Address:\n        {\n          const weight = arr[0]\n          const address = ethers.getAddress(ethers.hexlify(arr.slice(1, 21)))\n\n          pointer = append(pointer, {\n            address,\n            weight\n          })\n          arr = arr.slice(21)\n        }\n        break\n\n      case SignaturePartType.DynamicSignature:\n        {\n          const weight = arr[0]\n          const address = ethers.getAddress(ethers.hexlify(arr.slice(1, 21)))\n          const size = (arr[21] << 16) | (arr[22] << 8) | arr[23]\n          const signature = ethers.hexlify(arr.slice(24, 24 + size))\n\n          pointer = append(pointer, {\n            address,\n            signature,\n            weight,\n            unrecovered: true,\n            isDynamic: true\n          })\n          arr = arr.slice(24 + size)\n        }\n        break\n\n      case SignaturePartType.Node:\n        {\n          const nodeHash = ethers.hexlify(arr.slice(0, 32))\n\n          pointer = append(pointer, { nodeHash })\n          arr = arr.slice(32)\n        }\n        break\n\n      case SignaturePartType.Branch:\n        {\n          const size = (arr[0] << 16) | (arr[1] << 8) | arr[2]\n          const branch = decodeSignatureTree(arr.slice(3, 3 + size))\n\n          pointer = append(pointer, branch)\n          arr = arr.slice(3 + size)\n        }\n        break\n\n      case SignaturePartType.Subdigest:\n        {\n          const subdigest = ethers.hexlify(arr.slice(0, 32))\n\n          pointer = append(pointer, { subdigest })\n          arr = arr.slice(32)\n        }\n        break\n\n      case SignaturePartType.Nested:\n        {\n          const weight = arr[0]\n          const threshold = (arr[1] << 8) | arr[2]\n          const size = (arr[3] << 16) | (arr[4] << 8) | arr[5]\n\n          const tree = decodeSignatureTree(arr.slice(6, 6 + size))\n\n          pointer = append(pointer, {\n            weight,\n            threshold,\n            tree\n          })\n          arr = arr.slice(6 + size)\n        }\n        break\n\n      default:\n        throw new Error(`Unknown signature part type: ${type}: ${ethers.hexlify(arr)}`)\n    }\n  }\n\n  if (!pointer) {\n    throw new Error('Empty signature tree')\n  }\n\n  if (pointer.right) {\n    return pointer as Required<typeof pointer>\n  }\n\n  return pointer.left\n}\n\nexport class InvalidSignatureLeafError extends Error {\n  constructor(public leaf: UnrecoveredLeaf) {\n    super(`Invalid signature leaf: ${JSON.stringify(leaf)}`)\n  }\n}\n\nexport async function recoverTopology(\n  unrecovered: UnrecoveredTopology,\n  subdigest: string,\n  provider: ethers.Provider\n): Promise<Topology> {\n  if (isUnrecoveredNode(unrecovered)) {\n    const [left, right] = await Promise.all([\n      recoverTopology(unrecovered.left, subdigest, provider),\n      recoverTopology(unrecovered.right, subdigest, provider)\n    ])\n\n    return { left, right }\n  }\n\n  if (isUnrecoveredNestedLeaf(unrecovered)) {\n    return {\n      weight: unrecovered.weight,\n      threshold: unrecovered.threshold,\n      tree: await recoverTopology(unrecovered.tree, subdigest, provider)\n    }\n  }\n\n  if (isUnrecoveredSignatureLeaf(unrecovered)) {\n    if (unrecovered.isDynamic) {\n      if (!unrecovered.address) {\n        throw new Error('Dynamic signature leaf without address')\n      }\n\n      const isValid = await isValidSignature(unrecovered.address, subdigest, unrecovered.signature, provider)\n      if (!isValid) {\n        throw new InvalidSignatureLeafError(unrecovered)\n      }\n\n      return {\n        weight: unrecovered.weight,\n        address: unrecovered.address!,\n        signature: unrecovered.signature,\n        subdigest\n      }\n    } else {\n      return {\n        weight: unrecovered.weight,\n        address: recoverSigner(subdigest, unrecovered.signature),\n        signature: unrecovered.signature,\n        subdigest\n      }\n    }\n  }\n\n  return unrecovered\n}\n\n// TODO: It should be possible to re-use encodeSignatureTree\n// and avoid duplicating this logic\nexport const partEncoder = {\n  concat: (a: ethers.BytesLike, b: ethers.BytesLike) => {\n    return ethers.solidityPacked(['bytes', 'bytes'], [a, b])\n  },\n  node: (nodeHash: ethers.BytesLike): string => {\n    return ethers.solidityPacked(['uint8', 'bytes32'], [SignaturePartType.Node, nodeHash])\n  },\n  branch: (tree: ethers.BytesLike): string => {\n    const arr = ethers.getBytes(tree)\n    return ethers.solidityPacked(['uint8', 'uint24', 'bytes'], [SignaturePartType.Branch, arr.length, arr])\n  },\n  nested: (weight: ethers.BigNumberish, threshold: ethers.BigNumberish, tree: ethers.BytesLike): string => {\n    const arr = ethers.getBytes(tree)\n    return ethers.solidityPacked(\n      ['uint8', 'uint8', 'uint16', 'uint24', 'bytes'],\n      [SignaturePartType.Nested, weight, threshold, arr.length, arr]\n    )\n  },\n  subdigest: (subdigest: ethers.BytesLike): string => {\n    return ethers.solidityPacked(['uint8', 'bytes32'], [SignaturePartType.Subdigest, subdigest])\n  },\n  signature: (weight: ethers.BigNumberish, signature: ethers.BytesLike): string => {\n    return ethers.solidityPacked(['uint8', 'uint8', 'bytes'], [SignaturePartType.Signature, weight, signature])\n  },\n  dynamicSignature: (weight: ethers.BigNumberish, address: ethers.BytesLike, signature: ethers.BytesLike): string => {\n    const arrSignature = ethers.getBytes(signature)\n    return ethers.solidityPacked(\n      ['uint8', 'uint8', 'address', 'uint24', 'bytes'],\n      [SignaturePartType.DynamicSignature, weight, address, arrSignature.length, arrSignature]\n    )\n  },\n  address: (weight: ethers.BigNumberish, address: ethers.BytesLike): string => {\n    return ethers.solidityPacked(['uint8', 'uint8', 'address'], [SignaturePartType.Address, weight, address])\n  }\n}\n\nexport type EncodingOptions = {\n  forceDynamicEncoding?: boolean\n  disableTrim?: boolean\n}\n\nexport function encodeSigners(\n  config: WalletConfig,\n  parts: Map<string, base.SignaturePart>,\n  subdigests: string[],\n  chainId: ethers.BigNumberish,\n  options: EncodingOptions = {}\n): {\n  encoded: string\n  weight: bigint\n} {\n  const tree = encodeTree(config.tree, parts, subdigests, options)\n\n  if (BigInt(chainId) === 0n) {\n    return {\n      encoded: ethers.solidityPacked(\n        ['uint8', 'uint16', 'uint32', 'bytes'],\n        [SignatureType.NoChainIdDynamic, config.threshold, config.checkpoint, tree.encoded]\n      ),\n      weight: tree.weight\n    }\n  }\n\n  if (BigInt(config.threshold) > 255n) {\n    return {\n      encoded: ethers.solidityPacked(\n        ['uint8', 'uint16', 'uint32', 'bytes'],\n        [SignatureType.Dynamic, config.threshold, config.checkpoint, tree.encoded]\n      ),\n      weight: tree.weight\n    }\n  }\n\n  return {\n    encoded: ethers.solidityPacked(\n      ['uint8', 'uint8', 'uint32', 'bytes'],\n      [SignatureType.Legacy, config.threshold, config.checkpoint, tree.encoded]\n    ),\n    weight: tree.weight\n  }\n}\n\nexport function encodeTree(\n  topology: Topology,\n  parts: Map<string, base.SignaturePart>,\n  subdigests: string[],\n  options: EncodingOptions = {}\n): {\n  encoded: string\n  weight: bigint\n} {\n  const trim = !options.disableTrim\n\n  if (isNode(topology)) {\n    const left = encodeTree(topology.left, parts, subdigests)\n    const right = encodeTree(topology.right, parts, subdigests)\n\n    const isLeftSigner = isSignerLeaf(topology.left)\n    const isRightSigner = isSignerLeaf(topology.right)\n\n    if (trim && left.weight === 0n && right.weight === 0n && !isLeftSigner && !isRightSigner) {\n      return {\n        // We don't need to include anything for this node\n        // just the hash will be enough\n        encoded: partEncoder.node(hashNode(topology)),\n        weight: 0n\n      }\n    }\n\n    if (trim && right.weight === 0n && !isRightSigner) {\n      return {\n        // The right node doesn't have any weight\n        // but we still need to include the left node encoded\n        encoded: partEncoder.concat(left.encoded, partEncoder.node(hashNode(topology.right))),\n        weight: left.weight\n      }\n    }\n\n    if (trim && left.weight === 0n && !isLeftSigner) {\n      return {\n        // The left node doesn't have any weight\n        // we can just append its hash, but for the right node\n        // we need to create a new \"branch\"\n        encoded: partEncoder.concat(partEncoder.node(hashNode(topology.left)), partEncoder.branch(right.encoded)),\n        weight: right.weight\n      }\n    }\n\n    return {\n      // Both nodes have weight, we need to include both\n      // the right one must be a branch\n      encoded: partEncoder.concat(left.encoded, partEncoder.branch(right.encoded)),\n      weight: left.weight + right.weight\n    }\n  }\n\n  if (isNestedLeaf(topology)) {\n    const tree = encodeTree(topology.tree, parts, subdigests)\n\n    if (trim && tree.weight === 0n) {\n      return {\n        encoded: partEncoder.node(hashNode(topology)),\n        weight: 0n\n      }\n    }\n\n    return {\n      encoded: partEncoder.nested(topology.weight, topology.threshold, tree.encoded),\n      weight: tree.weight\n    }\n  }\n\n  if (isNodeLeaf(topology)) {\n    return {\n      encoded: partEncoder.node(hashNode(topology)),\n      weight: 0n\n    }\n  }\n\n  if (isSubdigestLeaf(topology)) {\n    const include = subdigests.includes(topology.subdigest)\n    return {\n      encoded: partEncoder.subdigest(topology.subdigest),\n      weight: include ? MAX_UINT_256 : 0n\n    }\n  }\n\n  if (isSignerLeaf(topology)) {\n    const include = parts.has(topology.address)\n\n    if (include) {\n      const part = parts.get(topology.address)!\n      const signature = part.signature\n\n      if (options.forceDynamicEncoding || part.isDynamic) {\n        return {\n          encoded: partEncoder.dynamicSignature(topology.weight, topology.address, signature),\n          weight: BigInt(topology.weight)\n        }\n      } else {\n        return {\n          encoded: partEncoder.signature(topology.weight, signature),\n          weight: BigInt(topology.weight)\n        }\n      }\n    } else {\n      return {\n        encoded: partEncoder.address(topology.weight, topology.address),\n        weight: 0n\n      }\n    }\n  }\n\n  throw new Error(`Invalid topology - unknown error: ${JSON.stringify(topology)}`)\n}\n\nexport type UnrecoveredConfig = {\n  tree: UnrecoveredTopology\n  threshold: ethers.BigNumberish\n  checkpoint: ethers.BigNumberish\n}\n\nexport type UnrecoveredSignature = base.UnrecoveredSignature & {\n  type: SignatureType\n  decoded: UnrecoveredConfig\n}\n\nexport type Signature = base.Signature<WalletConfig> & {\n  type: SignatureType\n}\n\nexport type UnrecoveredChainedSignature = UnrecoveredSignature & {\n  suffix: (UnrecoveredSignature | UnrecoveredChainedSignature)[]\n}\n\nexport type ChainedSignature = Signature & {\n  suffix: (Signature | ChainedSignature)[]\n}\n\nexport function deepestConfigOfSignature(signature: Signature | ChainedSignature): WalletConfig {\n  return isChainedSignature(signature)\n    ? deepestConfigOfSignature(signature.suffix[signature.suffix.length - 1])\n    : signature.config\n}\n\nexport function isUnrecoveredSignature(sig: any): sig is UnrecoveredSignature {\n  return sig.type !== undefined && sig.decoded !== undefined && sig.version !== undefined && sig.version === 2\n}\n\nexport function isUnrecoveredChainedSignature(sig: any): sig is UnrecoveredChainedSignature {\n  return sig.suffix !== undefined && Array.isArray(sig.suffix) && sig.suffix.every(isUnrecoveredSignature)\n}\n\nexport function isSignature(sig: any): sig is Signature {\n  return (\n    sig.type !== undefined &&\n    sig.config !== undefined &&\n    sig.digest !== undefined &&\n    sig.version !== undefined &&\n    sig.version === 2\n  )\n}\n\nexport function isChainedSignature(sig: any): sig is ChainedSignature {\n  return sig.chain !== undefined && Array.isArray(sig.chain) && sig.chain.every(isSignature)\n}\n\nexport function decodeSignature(signature: ethers.BytesLike): UnrecoveredSignature | UnrecoveredChainedSignature {\n  const bytes = ethers.getBytes(signature)\n  const type = bytes[0]\n\n  switch (type) {\n    case SignatureType.Legacy:\n      return { version: 2, type: SignatureType.Legacy, decoded: decodeSignatureBody(bytes) }\n\n    case SignatureType.Dynamic:\n      return { version: 2, type: SignatureType.Dynamic, decoded: decodeSignatureBody(bytes.slice(1)) }\n\n    case SignatureType.NoChainIdDynamic:\n      return { version: 2, type: SignatureType.NoChainIdDynamic, decoded: decodeSignatureBody(bytes.slice(1)) }\n\n    case SignatureType.Chained:\n      return decodeChainedSignature(bytes)\n\n    default:\n      throw new Error(`Invalid signature type: ${type}`)\n  }\n}\n\nexport function decodeSignatureBody(signature: ethers.BytesLike): UnrecoveredConfig {\n  const bytes = ethers.getBytes(signature)\n\n  const threshold = (bytes[0] << 8) | bytes[1]\n  const checkpoint = (bytes[2] << 24) | (bytes[3] << 16) | (bytes[4] << 8) | bytes[5]\n\n  const tree = decodeSignatureTree(bytes.slice(6))\n\n  return { threshold, checkpoint, tree }\n}\n\nexport function decodeChainedSignature(signature: ethers.BytesLike): UnrecoveredChainedSignature {\n  const arr = ethers.getBytes(signature)\n  const type = arr[0]\n\n  if (type !== SignatureType.Chained) {\n    throw new Error(`Expected chained signature type: ${type}`)\n  }\n\n  const chain: (UnrecoveredSignature | UnrecoveredChainedSignature)[] = []\n  let index = 1\n\n  while (index < arr.length) {\n    const size = (arr[index] << 16) | (arr[index + 1] << 8) | arr[index + 2]\n    index += 3\n\n    const sig = decodeSignature(arr.slice(index, index + size))\n    chain.push(sig)\n\n    index += size\n  }\n\n  const main = chain[0]\n  if (isUnrecoveredChainedSignature(main)) {\n    throw new Error(`Expected first link of chained signature to be a simple signature (not chained)`)\n  }\n\n  const suffix = chain.slice(1)\n\n  return { ...main, suffix }\n}\n\nexport function setImageHashStruct(imageHash: string) {\n  return ethers.solidityPacked(\n    ['bytes32', 'bytes32'],\n    [ethers.solidityPackedKeccak256(['string'], ['SetImageHash(bytes32 imageHash)']), imageHash]\n  )\n}\n\nexport async function recoverSignature(\n  signature: UnrecoveredSignature | UnrecoveredChainedSignature,\n  payload: base.SignedPayload | { subdigest: string },\n  provider: ethers.Provider\n): Promise<Signature | ChainedSignature> {\n  const signedPayload = (payload as { subdigest: string }).subdigest === undefined ? (payload as base.SignedPayload) : undefined\n\n  const isNoChainId = signature.type === SignatureType.NoChainIdDynamic\n  if (isNoChainId && signedPayload) {\n    signedPayload.chainId = 0\n  }\n\n  const subdigest = signedPayload ? base.subdigestOf(signedPayload) : (payload as { subdigest: string }).subdigest\n\n  if (!isUnrecoveredChainedSignature(signature)) {\n    const tree = await recoverTopology(signature.decoded.tree, subdigest, provider)\n    return { version: 2, type: signature.type, subdigest, config: { version: 2, ...signature.decoded, tree } }\n  }\n\n  if (!base.isSignedPayload(signedPayload)) {\n    throw new Error(`Chained signature recovery requires detailed signed payload, subdigest is not enough`)\n  }\n\n  const result: (Signature | ChainedSignature)[] = []\n  let mutatedPayload = signedPayload\n\n  // Recover the chain of signatures\n  // NOTICE: Remove the suffix from the \"first\" siganture\n  // otherwise we recurse infinitely\n  for (const sig of [{ ...signature, suffix: undefined }, ...signature.suffix]) {\n    const recovered = await recoverSignature(sig, mutatedPayload, provider)\n    result.unshift(recovered)\n\n    const nextMessage = setImageHashStruct(imageHash(deepestConfigOfSignature(recovered)))\n\n    mutatedPayload = {\n      ...mutatedPayload,\n      message: nextMessage,\n      digest: ethers.keccak256(nextMessage)\n    }\n  }\n\n  const main = result[0]\n  const suffix = result.slice(1)\n\n  return { ...main, suffix }\n}\n\nexport function encodeChain(main: ethers.BytesLike, suffix: ethers.BytesLike[]): string {\n  const allSignatures = [main, ...(suffix || [])]\n  const encodedMap = allSignatures.map(s => ethers.getBytes(encodeSignature(s)))\n\n  const body = ethers.solidityPacked(encodedMap.map(() => ['uint24', 'bytes']).flat(), encodedMap.map(s => [s.length, s]).flat())\n\n  return ethers.solidityPacked(['uint8', 'bytes'], [SignatureType.Chained, body])\n}\n\nexport function encodeSignature(\n  decoded: UnrecoveredChainedSignature | ChainedSignature | UnrecoveredSignature | Signature | ethers.BytesLike\n): string {\n  if (ethers.isBytesLike(decoded)) return ethers.hexlify(decoded)\n\n  if (isUnrecoveredChainedSignature(decoded) || isChainedSignature(decoded)) {\n    return encodeChain(encodeSignature(decoded), (decoded.suffix || []).map(encodeSignature))\n  }\n\n  const body = isUnrecoveredSignature(decoded) ? decoded.decoded : decoded.config\n\n  switch (decoded.type) {\n    case SignatureType.Legacy:\n      if (BigInt(body.threshold) > 255n) {\n        throw new Error(`Legacy signature threshold is too large: ${body.threshold} (max 255)`)\n      }\n\n      return encodeSignatureBody(body)\n\n    case SignatureType.NoChainIdDynamic:\n    case SignatureType.Dynamic:\n      return ethers.solidityPacked(['uint8', 'bytes'], [decoded.type, encodeSignatureBody(body)])\n\n    case SignatureType.Chained:\n      throw new Error(`Unreachable code: Chained signature should be handled above`)\n\n    default:\n      throw new Error(`Invalid signature type: ${decoded.type}`)\n  }\n}\n\nexport function encodeSignatureBody(decoded: WalletConfig | UnrecoveredConfig): string {\n  return ethers.solidityPacked(\n    ['uint16', 'uint32', 'bytes'],\n    [decoded.threshold, decoded.checkpoint, encodeSignatureTree(decoded.tree)]\n  )\n}\n\nexport function encodeSignatureTree(tree: UnrecoveredTopology | Topology): string {\n  if (isNode(tree) || isUnrecoveredNode(tree)) {\n    const encodedRight = ethers.getBytes(encodeSignatureTree(tree.right))\n    const encodedLeft = ethers.getBytes(encodeSignatureTree(tree.left))\n    const isBranching = isNode(tree.right) || isUnrecoveredNode(tree.right)\n\n    if (isBranching) {\n      return ethers.solidityPacked(\n        ['bytes', 'uint8', 'uint24', 'bytes'],\n        [encodedLeft, SignaturePartType.Branch, encodedRight.length, encodedRight]\n      )\n    } else {\n      return ethers.solidityPacked(['bytes', 'bytes'], [encodedLeft, encodedRight])\n    }\n  }\n\n  if (isNestedLeaf(tree) || isUnrecoveredNestedLeaf(tree)) {\n    const nested = ethers.getBytes(encodeSignatureTree(tree.tree))\n\n    return ethers.solidityPacked(\n      ['uint8', 'uint8', 'uint16', 'uint24', 'bytes'],\n      [SignaturePartType.Nested, tree.weight, tree.threshold, nested.length, nested]\n    )\n  }\n\n  if (isUnrecoveredSignatureLeaf(tree) || (isSignerLeaf(tree) && tree.signature !== undefined)) {\n    const signature = ethers.getBytes(tree.signature!)\n\n    if ((tree as { isDynamic?: boolean }).isDynamic || signature.length !== SignaturePartTypeLength) {\n      if (!tree.address) throw new Error(`Dynamic signature leaf must have address`)\n      return ethers.solidityPacked(\n        ['uint8', 'uint8', 'address', 'uint24', 'bytes'],\n        [SignaturePartType.DynamicSignature, tree.weight, tree.address, signature.length, signature]\n      )\n    } else {\n      return ethers.solidityPacked(['uint8', 'uint8', 'bytes'], [SignaturePartType.Signature, tree.weight, signature])\n    }\n  }\n\n  if (isSignerLeaf(tree)) {\n    return ethers.solidityPacked(['uint8', 'uint8', 'address'], [SignaturePartType.Address, tree.weight, tree.address])\n  }\n\n  if (isNodeLeaf(tree)) {\n    return ethers.solidityPacked(['uint8', 'bytes32'], [SignaturePartType.Node, tree.nodeHash])\n  }\n\n  if (isSubdigestLeaf(tree)) {\n    return ethers.solidityPacked(['uint8', 'bytes32'], [SignaturePartType.Subdigest, tree.subdigest])\n  }\n\n  throw new Error(`Unknown signature tree type: ${tree}`)\n}\n\nexport function signaturesOf(topology: Topology): { address: string; signature: string }[] {\n  if (isNode(topology)) {\n    return [...signaturesOf(topology.left), ...signaturesOf(topology.right)]\n  }\n\n  if (isNestedLeaf(topology)) {\n    return signaturesOf(topology.tree)\n  }\n\n  if (isSignerLeaf(topology) && topology.signature) {\n    return [{ address: topology.address, signature: topology.signature }]\n  }\n\n  return []\n}\n\nexport function signaturesOfDecoded(utopology: UnrecoveredTopology): string[] {\n  if (isUnrecoveredNode(utopology)) {\n    return [...signaturesOfDecoded(utopology.left), ...signaturesOfDecoded(utopology.right)]\n  }\n\n  if (isUnrecoveredNestedLeaf(utopology)) {\n    return signaturesOfDecoded(utopology.tree)\n  }\n\n  if (isUnrecoveredSignatureLeaf(utopology)) {\n    return [utopology.signature]\n  }\n\n  return []\n}\n\nexport function subdigestsOfDecoded(utopology: UnrecoveredTopology): string[] {\n  if (isUnrecoveredNode(utopology)) {\n    return [...subdigestsOfDecoded(utopology.left), ...subdigestsOfDecoded(utopology.right)]\n  }\n\n  if (isUnrecoveredNestedLeaf(utopology)) {\n    return subdigestsOfDecoded(utopology.tree)\n  }\n\n  if (isSubdigestLeaf(utopology)) {\n    return [utopology.subdigest]\n  }\n\n  return []\n}\n\nexport async function trimSignature(signature: string | UnrecoveredSignature): Promise<string> {\n  const decoded = typeof signature === 'string' ? decodeSignature(signature) : signature\n\n  if (isUnrecoveredChainedSignature(decoded)) {\n    // We need to trim every suffix AND the main signature\n    const trimmed = await Promise.all([\n      trimSignature({ ...decoded, suffix: undefined } as UnrecoveredSignature),\n      ...decoded.suffix.map(s => trimSignature(s))\n    ])\n\n    return encodeChain(trimmed[0], trimmed.slice(1))\n  }\n\n  const { trimmed } = await trimUnrecoveredTree(decoded.decoded.tree)\n  return encodeSignature({ ...decoded, decoded: { ...decoded.decoded, tree: trimmed } })\n}\n\nexport async function trimUnrecoveredTree(\n  tree: UnrecoveredTopology,\n  trimStaticDigest: boolean = true\n): Promise<{\n  weight: number\n  trimmed: UnrecoveredTopology\n}> {\n  if (isUnrecoveredNode(tree)) {\n    const [left, right] = await Promise.all([trimUnrecoveredTree(tree.left), trimUnrecoveredTree(tree.right)])\n\n    if (left.weight === 0 && right.weight === 0) {\n      try {\n        // If both weights are 0 then it means we don't have any signatures yet\n        // because of that, we should be able to \"recover\" the tree with any subdigest\n        // and still get the valid node hash (there shouldn't be any signatures to verify)\n        const recovered = await recoverTopology(tree, ethers.ZeroHash, undefined as any)\n\n        return {\n          weight: 0,\n          trimmed: {\n            nodeHash: hashNode(recovered)\n          } as NodeLeaf\n        }\n      } catch {\n        // If something fails it's more likely because some signatures have sneaked in\n        // in that case we should keep this node\n      }\n    } else {\n      return {\n        weight: left.weight + right.weight,\n        trimmed: {\n          left: left.trimmed,\n          right: right.trimmed\n        } as UnrecoveredNode\n      }\n    }\n  }\n\n  if (isUnrecoveredNestedLeaf(tree)) {\n    const trimmed = await trimUnrecoveredTree(tree.tree)\n\n    if (trimmed.weight === 0) {\n      try {\n        // If the nested leaf is empty, we can recover it with any subdigest\n        // and still get the valid node hash (there shouldn't be any signatures to verify)\n        const recovered = await recoverTopology(tree, ethers.ZeroHash, undefined as any)\n\n        return {\n          weight: 0,\n          trimmed: {\n            nodeHash: hashNode(recovered)\n          } as NodeLeaf\n        }\n      } catch {\n        // If something fails it's more likely because some signatures have sneaked in\n        // in that case we should keep this node\n      }\n    }\n\n    return {\n      weight: trimmed.weight,\n      trimmed: {\n        weight: tree.weight,\n        threshold: tree.threshold,\n        tree: trimmed.trimmed\n      } as UnrecoveredNestedLeaf\n    }\n  }\n\n  // Hash nodes can be encoded as signer leaves if they have a weight below\n  // 256, most likely the are signer leaves wrongly encoded\n  if (isNodeLeaf(tree) && isEncodedSignerLeaf(tree.nodeHash)) {\n    return {\n      weight: 0,\n      trimmed: {\n        ...decodeSignerLeaf(tree.nodeHash)\n      } as SignerLeaf\n    }\n  }\n\n  if (isUnrecoveredSignatureLeaf(tree) || (isSignerLeaf(tree) && tree.signature !== undefined)) {\n    return {\n      weight: Number(tree.weight),\n      trimmed: tree\n    }\n  }\n\n  if (!trimStaticDigest && isSubdigestLeaf(tree)) {\n    return {\n      weight: +Infinity,\n      trimmed: tree\n    }\n  }\n\n  return {\n    weight: 0,\n    trimmed: tree\n  }\n}\n\nexport const SignatureCoder: base.SignatureCoder<WalletConfig, Signature, UnrecoveredChainedSignature | UnrecoveredSignature> = {\n  decode: (data: string): UnrecoveredSignature => {\n    return decodeSignature(data)\n  },\n\n  encode: (data: Signature | UnrecoveredSignature): string => {\n    return encodeSignature(data)\n  },\n\n  trim: (data: string): Promise<string> => {\n    return trimSignature(data)\n  },\n\n  supportsNoChainId: true,\n\n  recover: (\n    data: UnrecoveredSignature | UnrecoveredChainedSignature,\n    payload: base.SignedPayload,\n    provider: ethers.Provider\n  ): Promise<Signature> => {\n    return recoverSignature(data, payload, provider)\n  },\n\n  encodeSigners: (\n    config: WalletConfig,\n    signatures: Map<string, base.SignaturePart>,\n    subdigests: string[],\n    chainId: ethers.BigNumberish\n  ): {\n    encoded: string\n    weight: bigint\n  } => {\n    return encodeSigners(config, signatures, subdigests, chainId)\n  },\n\n  hasEnoughSigningPower: (config: WalletConfig, signatures: Map<string, base.SignaturePart>): boolean => {\n    const { weight } = SignatureCoder.encodeSigners(config, signatures, [], 0)\n    return weight >= BigInt(config.threshold)\n  },\n\n  chainSignatures: (\n    main: Signature | UnrecoveredSignature | UnrecoveredChainedSignature | ethers.BytesLike,\n    suffix: (Signature | UnrecoveredSignature | UnrecoveredChainedSignature | ethers.BytesLike)[]\n  ): string => {\n    // Notice: v2 expects suffix to be reversed\n    // that being: from signed to current imageHash\n    const reversed = suffix.reverse()\n    const mraw = ethers.isBytesLike(main) ? main : encodeSignature(main)\n    const sraw = reversed.map(s => (ethers.isBytesLike(s) ? s : encodeSignature(s)))\n    return encodeChain(mraw, sraw)\n  },\n\n  hashSetImageHash: function (imageHash: string): string {\n    return hashSetImageHash(imageHash)\n  },\n\n  signaturesOf(config: WalletConfig): { address: string; signature: string }[] {\n    return signaturesOf(config.tree)\n  },\n\n  signaturesOfDecoded: function (data: UnrecoveredSignature): string[] {\n    return signaturesOfDecoded(data.decoded.tree)\n  }\n}\n","import { ethers } from 'ethers'\nimport { walletContracts } from '@0xsequence/abi'\nimport { commons } from '..'\nimport { encodeSigners } from './signature'\nimport { SimpleConfig } from '../commons/config'\n\n//\n// Tree typings - leaves\n//\n\nexport type SignerLeaf = {\n  address: string\n  weight: ethers.BigNumberish\n  signature?: string\n}\n\nexport type SubdigestLeaf = {\n  subdigest: string\n}\n\nexport type NestedLeaf = {\n  tree: Topology\n  weight: ethers.BigNumberish\n  threshold: ethers.BigNumberish\n}\n\n// This is an unknown node\n// it means the tree has a branch\n// but we don't know what the content\nexport type NodeLeaf = {\n  nodeHash: string\n}\n\nexport type Leaf = SignerLeaf | SubdigestLeaf | NestedLeaf | NodeLeaf\n\nexport function isSignerLeaf(leaf: any): leaf is SignerLeaf {\n  return (leaf as SignerLeaf).address !== undefined && (leaf as SignerLeaf).weight !== undefined\n}\n\nexport function isSubdigestLeaf(leaf: any): leaf is SubdigestLeaf {\n  return (leaf as SubdigestLeaf).subdigest !== undefined && (leaf as SignerLeaf).address === undefined\n}\n\nexport function topologyToJSON(tree: Topology): string {\n  if (isNode(tree)) {\n    return JSON.stringify({\n      left: topologyToJSON(tree.left),\n      right: topologyToJSON(tree.right)\n    })\n  }\n\n  if (isNestedLeaf(tree)) {\n    return JSON.stringify({\n      weight: BigInt(tree.weight).toString(),\n      threshold: BigInt(tree.threshold).toString(),\n      tree: topologyToJSON(tree.tree)\n    })\n  }\n\n  if (isSignerLeaf(tree)) {\n    return JSON.stringify({\n      address: tree.address,\n      weight: BigInt(tree.weight).toString()\n    })\n  }\n\n  return JSON.stringify(tree)\n}\n\nexport function topologyFromJSON(json: string | object): Topology {\n  const parsed = typeof json === 'string' ? JSON.parse(json) : json\n\n  if (parsed.left !== undefined && parsed.right !== undefined) {\n    return {\n      left: topologyFromJSON(parsed.left),\n      right: topologyFromJSON(parsed.right)\n    }\n  }\n\n  if (parsed.weight !== undefined && parsed.threshold !== undefined && parsed.tree !== undefined) {\n    return {\n      weight: BigInt(parsed.weight),\n      threshold: BigInt(parsed.threshold),\n      tree: topologyFromJSON(parsed.tree)\n    }\n  }\n\n  if (parsed.address !== undefined && parsed.weight !== undefined) {\n    return {\n      address: parsed.address,\n      weight: BigInt(parsed.weight)\n    }\n  }\n\n  return parsed\n}\n\nexport function isNestedLeaf(leaf: any): leaf is NestedLeaf {\n  return (\n    (leaf as NestedLeaf).tree !== undefined &&\n    (leaf as NestedLeaf).weight !== undefined &&\n    (leaf as NestedLeaf).threshold !== undefined\n  )\n}\n\nexport function isNodeLeaf(leaf: any): leaf is NodeLeaf {\n  return (leaf as NodeLeaf).nodeHash !== undefined\n}\n\nexport function isLeaf(leaf: any): leaf is Leaf {\n  return isSignerLeaf(leaf) || isSubdigestLeaf(leaf) || isNestedLeaf(leaf) || isNodeLeaf(leaf)\n}\n\n//\n// Tree typings - nodes\n//\n\nexport type Node = {\n  left: Node | Leaf\n  right: Node | Leaf\n}\n\nexport type Topology = Node | Leaf\n\nexport function isNode(node: any): node is Node {\n  return (node as Node).left !== undefined && (node as Node).right !== undefined\n}\n\nexport function isTopology(topology: any): topology is Topology {\n  return isNode(topology) || isLeaf(topology)\n}\n\nexport function encodeSignerLeaf(leaf: SignerLeaf): string {\n  return ethers.solidityPacked(['uint96', 'address'], [leaf.weight, leaf.address])\n}\n\nexport function decodeSignerLeaf(encoded: string): SignerLeaf {\n  const bytes = ethers.getBytes(encoded)\n\n  if (bytes.length !== 32) {\n    throw new Error('Invalid encoded string length')\n  }\n\n  const weight = BigInt(ethers.hexlify(bytes.slice(0, 12)))\n  const address = ethers.getAddress(ethers.hexlify(bytes.slice(12)))\n\n  return { weight, address }\n}\n\nexport function isEncodedSignerLeaf(encoded: string): boolean {\n  const bytes = ethers.getBytes(encoded)\n\n  if (bytes.length !== 32) {\n    return false\n  }\n\n  const prefix = bytes.slice(0, 11)\n  return prefix.every(byte => byte === 0)\n}\n\nexport function hashNode(node: Node | Leaf): string {\n  if (isSignerLeaf(node)) {\n    return encodeSignerLeaf(node)\n  }\n\n  if (isSubdigestLeaf(node)) {\n    return ethers.solidityPackedKeccak256(['string', 'bytes32'], ['Sequence static digest:\\n', node.subdigest])\n  }\n\n  if (isNestedLeaf(node)) {\n    const nested = hashNode(node.tree)\n    return ethers.solidityPackedKeccak256(\n      ['string', 'bytes32', 'uint256', 'uint256'],\n      ['Sequence nested config:\\n', nested, node.threshold, node.weight]\n    )\n  }\n\n  if (isNodeLeaf(node)) {\n    return node.nodeHash\n  }\n\n  return ethers.solidityPackedKeccak256(['bytes32', 'bytes32'], [hashNode(node.left), hashNode(node.right)])\n}\n\nexport function leftFace(topology: Topology): Topology[] {\n  const stack: Topology[] = []\n\n  let prev = topology\n  while (!isLeaf(prev)) {\n    stack.unshift(prev.right)\n    prev = prev.left\n  }\n\n  stack.unshift(prev)\n\n  return stack\n}\n\n//\n// Wallet config types\n//\n\nexport type WalletConfig = commons.config.Config & {\n  threshold: ethers.BigNumberish\n  checkpoint: ethers.BigNumberish\n  tree: Topology\n}\n\nexport function isWalletConfig(config: any): config is WalletConfig {\n  return (\n    (config as WalletConfig).threshold !== undefined &&\n    (config as WalletConfig).checkpoint !== undefined &&\n    (config as WalletConfig).tree !== undefined &&\n    (config as WalletConfig).version !== undefined &&\n    (config as WalletConfig).version === 2\n  )\n}\n\nexport function imageHash(config: WalletConfig): string {\n  return ethers.solidityPackedKeccak256(\n    ['bytes32', 'uint256'],\n    [ethers.solidityPackedKeccak256(['bytes32', 'uint256'], [hashNode(config.tree), config.threshold]), config.checkpoint]\n  )\n}\n\n//\n// Simple wallet config types\n// (used for building and reading merkle configs)\n//\n// dev: `members` is a flat representation of the tree\n//      it keeps relevant structure like 'nested trees' but\n//      it ignores the tree structure\n//\n//\n\nexport type SimpleNestedMember = {\n  threshold: ethers.BigNumberish\n  weight: ethers.BigNumberish\n  members: SimpleConfigMember[]\n}\n\nexport type SimpleConfigMember = SubdigestLeaf | SignerLeaf | SimpleNestedMember\n\nexport type SimpleWalletConfig = {\n  threshold: ethers.BigNumberish\n  checkpoint: ethers.BigNumberish\n  members: SimpleConfigMember[]\n}\n\nexport function isSimpleNestedMember(member: any): member is SimpleNestedMember {\n  return (\n    (member as SimpleNestedMember).threshold !== undefined &&\n    (member as SimpleNestedMember).weight !== undefined &&\n    (member as SimpleNestedMember).members !== undefined\n  )\n}\n\nexport function topologyToMembers(tree: Topology): SimpleConfigMember[] {\n  if (isSignerLeaf(tree) || isSubdigestLeaf(tree)) {\n    return [tree]\n  }\n\n  if (isNestedLeaf(tree)) {\n    return [\n      {\n        threshold: tree.threshold,\n        weight: tree.weight,\n        members: topologyToMembers(tree.tree)\n      }\n    ]\n  }\n\n  if (isNodeLeaf(tree)) {\n    // we don't know the content of this node\n    // so we omit it\n    return []\n  }\n\n  return [...topologyToMembers(tree.left), ...topologyToMembers(tree.right)]\n}\n\nexport function hasUnknownNodes(tree: Topology): boolean {\n  if (isNodeLeaf(tree)) {\n    return true\n  }\n\n  if (isNode(tree)) {\n    return hasUnknownNodes(tree.left) || hasUnknownNodes(tree.right)\n  }\n\n  return false\n}\n\nexport function toSimpleWalletConfig(config: WalletConfig): SimpleWalletConfig {\n  return {\n    threshold: config.threshold,\n    checkpoint: config.checkpoint,\n    members: topologyToMembers(config.tree)\n  }\n}\n\nexport type TopologyBuilder = (members: SimpleConfigMember[]) => Topology\n\nconst membersAsTopologies = (members: SimpleConfigMember[], builder: TopologyBuilder): Topology[] => {\n  return members.map(member => {\n    if (isSimpleNestedMember(member)) {\n      return {\n        tree: builder(member.members),\n        threshold: member.threshold,\n        weight: member.weight\n      }\n    }\n\n    return member\n  })\n}\n\nexport function legacyTopologyBuilder(members: SimpleConfigMember[]): Topology {\n  if (members.length === 0) {\n    throw new Error('Empty members array')\n  }\n\n  const asTopologies = membersAsTopologies(members, legacyTopologyBuilder)\n  return asTopologies.reduce((acc, member) => {\n    return {\n      left: acc,\n      right: member\n    }\n  })\n}\n\nexport function merkleTopologyBuilder(members: SimpleConfigMember[]): Topology {\n  if (members.length === 0) {\n    throw new Error('Empty members array')\n  }\n\n  const leaves = membersAsTopologies(members, merkleTopologyBuilder)\n  for (let s = leaves.length; s > 1; s = s / 2) {\n    for (let i = 0; i < s / 2; i++) {\n      const j1 = i * 2\n      const j2 = j1 + 1\n\n      if (j2 >= s) {\n        leaves[i] = leaves[j1]\n      } else {\n        leaves[i] = {\n          left: leaves[j1],\n          right: leaves[j2]\n        }\n      }\n    }\n  }\n\n  return leaves[0]\n}\n\nexport function optimized2SignersTopologyBuilder(members: SimpleConfigMember[]): Topology {\n  if (members.length > 8) {\n    return merkleTopologyBuilder(members)\n  }\n\n  return legacyTopologyBuilder(members)\n}\n\nexport function toWalletConfig(\n  simpleWalletConfig: SimpleWalletConfig,\n  builder: TopologyBuilder = optimized2SignersTopologyBuilder\n): WalletConfig {\n  return {\n    version: 2,\n    threshold: simpleWalletConfig.threshold,\n    checkpoint: simpleWalletConfig.checkpoint,\n    tree: builder(simpleWalletConfig.members)\n  }\n}\n\nexport function hasSubdigest(tree: Topology, subdigest: string): boolean {\n  if (isSubdigestLeaf(tree)) {\n    return tree.subdigest === subdigest\n  }\n\n  if (isNode(tree)) {\n    return hasSubdigest(tree.left, subdigest) || hasSubdigest(tree.right, subdigest)\n  }\n\n  return false\n}\n\nexport function signersOf(tree: Topology): { address: string; weight: number }[] {\n  const stack: Topology[] = [tree]\n  const signers = new Set<{ address: string; weight: number }>()\n\n  while (stack.length > 0) {\n    const node = stack.pop()\n\n    if (isNestedLeaf(node)) {\n      stack.push(node.tree)\n    } else if (isNode(node)) {\n      stack.push(node.left)\n      stack.push(node.right)\n    } else if (isSignerLeaf(node)) {\n      signers.add({ address: node.address, weight: Number(node.weight) })\n    }\n  }\n\n  return Array.from(signers)\n}\n\nexport function isComplete(tree: Topology): boolean {\n  if (isNode(tree)) {\n    return isComplete(tree.left) && isComplete(tree.right)\n  }\n\n  return !isNodeLeaf(tree)\n}\n\nexport const ConfigCoder: commons.config.ConfigCoder<WalletConfig> = {\n  isWalletConfig: (config: commons.config.Config): config is WalletConfig => {\n    return config.version === 2 && (config as WalletConfig).threshold !== undefined && (config as WalletConfig).tree !== undefined\n  },\n\n  imageHashOf: (config: WalletConfig): string => {\n    return imageHash(config)\n  },\n\n  hasSubdigest: (config: WalletConfig, subdigest: string): boolean => {\n    return hasSubdigest(config.tree, subdigest)\n  },\n\n  checkpointOf: (config: WalletConfig): bigint => {\n    return BigInt(config.checkpoint)\n  },\n\n  signersOf: (config: WalletConfig): { address: string; weight: number }[] => {\n    return signersOf(config.tree)\n  },\n\n  fromSimple: (config: SimpleConfig): WalletConfig => {\n    return toWalletConfig({\n      ...config,\n      members: [...config.signers, ...(config.subdigests ?? []).map(subdigest => ({ subdigest }))]\n    })\n  },\n\n  isComplete: (config: WalletConfig): boolean => {\n    return isComplete(config.tree)\n  },\n\n  // isValid = (config: WalletConfig): boolean {}\n  /**\n   *\n   * Notice: context and kind are ignored because v2\n   * doesn't need to manually update the implementation before\n   * a configuration update, it's automatically done by the contract.\n   *\n   */\n  update: {\n    isKindUsed: true,\n\n    buildTransaction: (\n      wallet: string,\n      config: WalletConfig,\n      _context: commons.context.WalletContext,\n      _kind?: 'first' | 'later' | undefined\n    ): commons.transaction.TransactionBundle => {\n      const module = new ethers.Interface(walletContracts.mainModuleUpgradable.abi)\n\n      return {\n        entrypoint: wallet,\n        transactions: [\n          {\n            to: wallet,\n            data: module.encodeFunctionData(module.getFunction('updateImageHash')!, [ConfigCoder.imageHashOf(config)]),\n            gasLimit: 0,\n            delegateCall: false,\n            revertOnError: true,\n            value: 0\n          }\n        ]\n      }\n    },\n    decodeTransaction: function (tx: commons.transaction.TransactionBundle): {\n      address: string\n      newImageHash: string\n      kind: 'first' | 'later' | undefined\n    } {\n      const module = new ethers.Interface(walletContracts.mainModuleUpgradable.abi)\n\n      if (tx.transactions.length !== 1) {\n        throw new Error('Invalid transaction bundle, expected 1 transaction')\n      }\n\n      const data = tx.transactions[0].data\n      if (!data) {\n        throw new Error('Invalid transaction bundle, expected data')\n      }\n\n      const decoded = module.decodeFunctionData(module.getFunction('updateImageHash')!, data)\n      if (!decoded) {\n        throw new Error('Invalid transaction bundle, expected valid data')\n      }\n\n      if (tx.transactions[0].to !== tx.entrypoint) {\n        throw new Error('Invalid transaction bundle, expected to be sent to entrypoint')\n      }\n\n      if (tx.transactions[0].delegateCall) {\n        throw new Error('Invalid transaction bundle, expected not to be a delegateCall')\n      }\n\n      if (!tx.transactions[0].revertOnError) {\n        throw new Error('Invalid transaction bundle, expected revertOnError')\n      }\n\n      if (BigInt(tx.transactions[0]?.value ?? 0) !== 0n) {\n        throw new Error('Invalid transaction bundle, expected value to be 0')\n      }\n\n      if (BigInt(tx.transactions[0]?.gasLimit ?? 0) !== 0n) {\n        throw new Error('Invalid transaction bundle, expected value to be 0')\n      }\n\n      return {\n        address: tx.entrypoint,\n        newImageHash: decoded[0],\n        kind: undefined\n      }\n    }\n  },\n\n  toJSON: function (config: WalletConfig): string {\n    return JSON.stringify({\n      version: config.version,\n      threshold: BigInt(config.threshold).toString(),\n      checkpoint: BigInt(config.checkpoint).toString(),\n      tree: topologyToJSON(config.tree)\n    })\n  },\n\n  fromJSON: function (json: string): WalletConfig {\n    const config = JSON.parse(json)\n    return {\n      version: config.version,\n      threshold: BigInt(config.threshold),\n      checkpoint: BigInt(config.checkpoint),\n      tree: topologyFromJSON(config.tree)\n    }\n  },\n\n  editConfig: function (\n    config: WalletConfig,\n    action: {\n      add?: commons.config.SimpleSigner[]\n      remove?: string[]\n      threshold?: ethers.BigNumberish\n      checkpoint?: ethers.BigNumberish\n    }\n  ): WalletConfig {\n    const members = topologyToMembers(config.tree)\n\n    if (action.add) {\n      for (const signer of action.add) {\n        if (members.find(s => isSignerLeaf(s) && s.address === signer.address)) {\n          continue\n        }\n\n        members.push({\n          address: signer.address,\n          weight: signer.weight\n        })\n      }\n    }\n\n    if (action.remove) {\n      for (const address of action.remove) {\n        const index = members.findIndex(s => isSignerLeaf(s) && s.address === address)\n        if (index >= 0) {\n          members.splice(index, 1)\n        }\n      }\n    }\n\n    return {\n      version: config.version,\n      threshold: action.threshold ?? config.threshold,\n      checkpoint: action.checkpoint ?? config.checkpoint,\n      tree: optimized2SignersTopologyBuilder(members)\n    }\n  },\n\n  buildStubSignature: function (config: WalletConfig, overrides: Map<string, string>) {\n    const parts = new Map<string, commons.signature.SignaturePart>()\n\n    for (const [signer, signature] of overrides.entries()) {\n      parts.set(signer, { signature, isDynamic: true })\n\n      const { encoded, weight } = encodeSigners(config, parts, [], 0)\n\n      if (weight >= BigInt(config.threshold)) {\n        return encoded\n      }\n    }\n\n    const signers = signersOf(config.tree)\n\n    for (const { address } of signers.sort(({ weight: a }, { weight: b }) => a - b)) {\n      const signature =\n        '0x4e82f02f388a12b5f9d29eaf2452dd040c0ee5804b4e504b4dd64e396c6c781f2c7624195acba242dd825bfd25a290912e3c230841fd55c9a734c4de8d9899451b02'\n      parts.set(address, { signature, isDynamic: false })\n\n      const { encoded, weight } = encodeSigners(config, parts, [], 0)\n\n      if (weight >= BigInt(config.threshold)) {\n        return encoded\n      }\n    }\n\n    return encodeSigners(config, parts, [], 0).encoded\n  }\n}\n","import { WalletContext } from '../commons/context'\n\nexport * as config from './config'\nexport * as signature from './signature'\nexport * as context from './context'\nexport * as chained from './chained'\n\nimport { ConfigCoder } from './config'\nimport { SignatureCoder } from './signature'\n\nexport const coders = {\n  config: ConfigCoder,\n  signature: SignatureCoder\n}\n\nexport const version = 2\n\nexport const DeployedWalletContext: WalletContext = {\n  version: version,\n  factory: '0xFaA5c0b14d1bED5C888Ca655B9a8A5911F78eF4A',\n  guestModule: '0xfea230Ee243f88BC698dD8f1aE93F8301B6cdfaE',\n  mainModule: '0xfBf8f1A5E00034762D928f46d438B947f5d4065d',\n  mainModuleUpgradable: '0x4222dcA3974E39A8b41c411FeDDE9b09Ae14b911',\n  walletCreationCode: '0x603a600e3d39601a805130553df3363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3'\n}\n","import { ethers } from 'ethers'\nimport { allVersions } from '..'\n\nimport { DeployedWalletContext as context1 } from '../v1'\nimport { DeployedWalletContext as context2 } from '../v2'\n\nexport type WalletContext = {\n  version: number\n  factory: string\n  mainModule: string\n  mainModuleUpgradable: string\n  guestModule: string\n\n  walletCreationCode: string\n}\n\nexport function addressOf(context: WalletContext, imageHash: ethers.BytesLike) {\n  const codeHash = ethers.keccak256(\n    ethers.solidityPacked(['bytes', 'bytes32'], [context.walletCreationCode, ethers.zeroPadValue(context.mainModule, 32)])\n  )\n\n  const hash = ethers.keccak256(\n    ethers.solidityPacked(['bytes1', 'address', 'bytes32', 'bytes32'], ['0xff', context.factory, imageHash, codeHash])\n  )\n\n  return ethers.getAddress(ethers.dataSlice(hash, 12))\n}\n\nexport async function isValidCounterfactual(\n  wallet: string,\n  digest: ethers.BytesLike,\n  signature: ethers.BytesLike,\n  chainId: ethers.BigNumberish,\n  provider: ethers.Provider,\n  contexts: { [key: number]: WalletContext }\n) {\n  // We don't know the version of the signature\n  // so we need to try all of them\n  const res = await Promise.all(\n    allVersions.map(async version => {\n      try {\n        const decoded = version.signature.SignatureCoder.decode(ethers.hexlify(signature))\n\n        const recovered1 = await version.signature.SignatureCoder.recover(\n          decoded as any,\n          {\n            address: wallet,\n            digest: ethers.hexlify(digest),\n            chainId\n          },\n          provider\n        )\n\n        const imageHash = version.config.ConfigCoder.imageHashOf(recovered1.config as any)\n        const counterfactualAddress = addressOf(contexts[version.version], imageHash)\n\n        if (counterfactualAddress.toLowerCase() === wallet.toLowerCase()) {\n          return true\n        }\n\n        // chainId=0 means no chainId, so the signature is valid for all chains\n        // we need to check that case too\n        const recovered2 = await version.signature.SignatureCoder.recover(\n          decoded as any,\n          {\n            address: wallet,\n            digest: ethers.hexlify(digest),\n            chainId\n          },\n          provider\n        )\n\n        const imageHash2 = version.config.ConfigCoder.imageHashOf(recovered2.config as any)\n        const counterfactualAddress2 = addressOf(contexts[version.version], imageHash2)\n\n        return counterfactualAddress2.toLowerCase() === wallet.toLowerCase()\n      } catch {}\n\n      // We most likely failed to decode the signature\n      return false\n    })\n  )\n\n  return res.some(r => r)\n}\n\nexport type VersionedContext = { [key: number]: WalletContext }\n\nexport function isValidVersionedContext(contexts: VersionedContext): boolean {\n  // number of keys is the number of versions\n  const versions = Object.keys(contexts).length\n\n  // check that all versions exist and are valid\n  for (let i = 1; i <= versions; i++) {\n    const context = contexts[i]\n    if (!context || context.version !== i) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function latestContext(contexts: VersionedContext): WalletContext {\n  const versions = Object.keys(contexts).length\n  return contexts[versions]\n}\n\nexport const defaultContexts: VersionedContext = {\n  1: context1,\n  2: context2\n}\n","import { ethers } from 'ethers'\n\nimport { subdigestOf } from './signature'\nimport { walletContracts } from '@0xsequence/abi'\n\nexport interface Transaction {\n  to: string\n  value?: ethers.BigNumberish\n  data?: string\n  gasLimit?: ethers.BigNumberish\n  delegateCall?: boolean\n  revertOnError?: boolean\n}\n\nexport interface SimulatedTransaction extends Transaction {\n  succeeded: boolean\n  executed: boolean\n  gasUsed: number\n  gasLimit: number\n  result?: string\n  reason?: string\n}\n\nexport interface TransactionEncoded {\n  delegateCall: boolean\n  revertOnError: boolean\n  gasLimit: ethers.BigNumberish\n  target: string\n  value: ethers.BigNumberish\n  data: string\n}\n\nexport type Transactionish = ethers.TransactionRequest | ethers.TransactionRequest[] | Transaction | Transaction[]\n\nexport interface TransactionResponse<R = any> extends ethers.TransactionResponse {\n  receipt?: R\n}\n\nexport type TransactionBundle = {\n  entrypoint: string\n  transactions: Transaction[]\n  nonce?: ethers.BigNumberish\n}\n\nexport type IntendedTransactionBundle = TransactionBundle & {\n  chainId: ethers.BigNumberish\n  intent: {\n    id: string\n    wallet: string\n  }\n}\n\nexport type SignedTransactionBundle = IntendedTransactionBundle & {\n  signature: string\n  nonce: ethers.BigNumberish\n}\n\nexport type RelayReadyTransactionBundle = SignedTransactionBundle | IntendedTransactionBundle\n\nexport const MetaTransactionsType = `tuple(\n  bool delegateCall,\n  bool revertOnError,\n  uint256 gasLimit,\n  address target,\n  uint256 value,\n  bytes data\n)[]`\n\nexport function intendTransactionBundle(\n  bundle: TransactionBundle,\n  wallet: string,\n  chainId: ethers.BigNumberish,\n  id: string\n): IntendedTransactionBundle {\n  return {\n    ...bundle,\n    chainId,\n    intent: { id: id, wallet }\n  }\n}\n\nexport function intendedTransactionID(bundle: IntendedTransactionBundle) {\n  return ethers.keccak256(\n    ethers.AbiCoder.defaultAbiCoder().encode(\n      ['address', 'uint256', 'bytes32'],\n      [bundle.intent.wallet, bundle.chainId, bundle.intent.id]\n    )\n  )\n}\n\nexport function unpackMetaTransactionsData(data: ethers.BytesLike): [bigint, TransactionEncoded[]] {\n  const res = ethers.AbiCoder.defaultAbiCoder().decode(['uint256', MetaTransactionsType], data)\n  if (res.length !== 2 || !res[0] || !res[1]) throw new Error('Invalid meta transaction data')\n  return [res[0], res[1]]\n}\n\nexport function packMetaTransactionsData(nonce: ethers.BigNumberish, txs: Transaction[]): string {\n  return ethers.AbiCoder.defaultAbiCoder().encode(['uint256', MetaTransactionsType], [nonce, sequenceTxAbiEncode(txs)])\n}\n\nexport function digestOfTransactions(nonce: ethers.BigNumberish, txs: Transaction[]) {\n  return ethers.keccak256(packMetaTransactionsData(nonce, txs))\n}\n\nexport function subdigestOfTransactions(\n  address: string,\n  chainId: ethers.BigNumberish,\n  nonce: ethers.BigNumberish,\n  txs: Transaction[]\n): string {\n  return subdigestOf({ address, chainId, digest: digestOfTransactions(nonce, txs) })\n}\n\nexport function subdigestOfGuestModuleTransactions(\n  guestModule: string,\n  chainId: ethers.BigNumberish,\n  txs: Transaction[]\n): string {\n  return subdigestOf({\n    address: guestModule,\n    chainId,\n    digest: ethers.keccak256(\n      ethers.AbiCoder.defaultAbiCoder().encode(['string', MetaTransactionsType], ['guest:', sequenceTxAbiEncode(txs)])\n    )\n  })\n}\n\nexport function toSequenceTransactions(\n  wallet: string,\n  txs: ethers.TransactionRequest[]\n): { nonce?: ethers.BigNumberish; transaction: Transaction }[] {\n  return txs.map(tx => toSequenceTransaction(wallet, tx))\n}\n\nexport function toSequenceTransaction(\n  wallet: string,\n  tx: ethers.TransactionRequest\n): { nonce?: ethers.BigNumberish; transaction: Transaction } {\n  if (tx.to && tx.to !== ethers.ZeroAddress) {\n    return {\n      nonce: !isNullish(tx.nonce) ? BigInt(tx.nonce) : undefined,\n      transaction: {\n        delegateCall: false,\n        revertOnError: false,\n        gasLimit: !isNullish(tx.gasLimit) ? BigInt(tx.gasLimit) : undefined,\n        // XXX: `tx.to` could also be ethers Addressable type which returns a getAddress promise\n        // Keeping this as is for now so we don't have to change everything to async\n        to: tx.to as string,\n        value: BigInt(tx.value || 0),\n        data: tx.data || '0x'\n      }\n    }\n  } else {\n    const walletInterface = new ethers.Interface(walletContracts.mainModule.abi)\n    const data = walletInterface.encodeFunctionData(walletInterface.getFunction('createContract')!, [tx.data])\n\n    return {\n      nonce: typeof tx.nonce === 'number' ? BigInt(tx.nonce) : undefined,\n      transaction: {\n        delegateCall: false,\n        revertOnError: false,\n        gasLimit: !isNullish(tx.gasLimit) ? BigInt(tx.gasLimit) : undefined,\n        to: wallet,\n        value: BigInt(tx.value || 0),\n        data\n      }\n    }\n  }\n}\n\nexport function isSequenceTransaction(tx: any): tx is Transaction {\n  return tx.delegateCall !== undefined || tx.revertOnError !== undefined\n}\n\nexport function hasSequenceTransactions(txs: any[]): txs is Transaction[] {\n  return txs.every(isSequenceTransaction)\n}\n\n// TODO: We may be able to remove this if we make Transaction === TransactionEncoded\nexport function sequenceTxAbiEncode(txs: Transaction[]): TransactionEncoded[] {\n  return txs.map(tx => ({\n    delegateCall: tx.delegateCall === true,\n    revertOnError: tx.revertOnError === true,\n    gasLimit: !isNullish(tx.gasLimit) ? BigInt(tx.gasLimit) : 0n,\n    target: tx.to ?? ethers.ZeroAddress,\n    value: !isNullish(tx.value) ? tx.value : 0n,\n    data: tx.data || '0x'\n  }))\n}\n\nexport function fromTxAbiEncode(txs: TransactionEncoded[]): Transaction[] {\n  return txs.map(tx => ({\n    delegateCall: tx.delegateCall,\n    revertOnError: tx.revertOnError,\n    gasLimit: tx.gasLimit,\n    to: tx.target,\n    value: tx.value,\n    data: tx.data\n  }))\n}\n\n// export function appendNonce(txs: Transaction[], nonce: ethers.BigNumberish): Transaction[] {\n//   return txs.map((t: Transaction) => ({ ...t, nonce }))\n// }\n\nexport function encodeNonce(space: ethers.BigNumberish, nonce: ethers.BigNumberish): bigint {\n  const bspace = BigInt(space)\n  const bnonce = BigInt(nonce)\n\n  const shl = 2n ** 96n\n\n  if (bnonce / shl !== 0n) {\n    throw new Error('Space already encoded')\n  }\n\n  return bnonce + bspace * shl\n}\n\nexport function decodeNonce(nonce: ethers.BigNumberish): [bigint, bigint] {\n  const bnonce = BigInt(nonce)\n  const shr = 2n ** 96n\n\n  return [bnonce / shr, bnonce % shr]\n}\n\nexport function fromTransactionish(wallet: string, transaction: Transactionish): Transaction[] {\n  if (Array.isArray(transaction)) {\n    if (hasSequenceTransactions(transaction)) {\n      return transaction\n    } else {\n      const stx = toSequenceTransactions(wallet, transaction)\n      return stx.map(t => t.transaction)\n    }\n  } else if (isSequenceTransaction(transaction)) {\n    return [transaction]\n  } else {\n    return [toSequenceTransaction(wallet, transaction).transaction]\n  }\n}\n\nexport function isTransactionBundle(cand: any): cand is TransactionBundle {\n  return (\n    cand !== undefined &&\n    cand.entrypoint !== undefined &&\n    cand.chainId !== undefined &&\n    cand.transactions !== undefined &&\n    cand.nonce !== undefined &&\n    cand.intent !== undefined &&\n    cand.intent.id !== undefined &&\n    cand.intent.wallet !== undefined &&\n    Array.isArray(cand.transactions) &&\n    (<TransactionBundle>cand).transactions.reduce((p, c) => p && isSequenceTransaction(c), true)\n  )\n}\n\nexport function isSignedTransactionBundle(cand: any): cand is SignedTransactionBundle {\n  return cand !== undefined && cand.signature !== undefined && cand.signature !== '' && isTransactionBundle(cand)\n}\n\nexport function encodeBundleExecData(bundle: TransactionBundle): string {\n  const walletInterface = new ethers.Interface(walletContracts.mainModule.abi)\n  return walletInterface.encodeFunctionData(\n    walletInterface.getFunction('execute')!,\n    isSignedTransactionBundle(bundle)\n      ? [\n          // Signed transaction bundle has all 3 parameters\n          sequenceTxAbiEncode(bundle.transactions),\n          bundle.nonce,\n          bundle.signature\n        ]\n      : [\n          // Unsigned bundle may be a GuestModule call, so signature and nonce are missing\n          sequenceTxAbiEncode(bundle.transactions),\n          0,\n          new Uint8Array([])\n        ]\n  )\n}\n\n// TODO: Use Sequence ABI package\nexport const selfExecuteSelector = '0x61c2926c'\nexport const selfExecuteAbi = `tuple(\n  bool delegateCall,\n  bool revertOnError,\n  uint256 gasLimit,\n  address target,\n  uint256 value,\n  bytes data\n)[]`\n\n// Splits Sequence batch transactions into individual parts\nexport const unwind = (wallet: string, transactions: Transaction[]): Transaction[] => {\n  const unwound: Transaction[] = []\n\n  const walletInterface = new ethers.Interface(walletContracts.mainModule.abi)\n\n  for (const tx of transactions) {\n    const txData = ethers.getBytes(tx.data || '0x')\n\n    if (tx.to === wallet && ethers.hexlify(txData.slice(0, 4)) === selfExecuteSelector) {\n      // Decode as selfExecute call\n      const data = txData.slice(4)\n      const decoded = ethers.AbiCoder.defaultAbiCoder().decode([selfExecuteAbi], data)[0]\n      unwound.push(\n        ...unwind(\n          tx.to,\n          decoded.map((d: TransactionEncoded) => ({ ...d, to: d.target }))\n        )\n      )\n    } else {\n      try {\n        const innerTransactions = walletInterface.decodeFunctionData('execute', txData)[0] as ethers.Result\n        const unwoundTransactions = unwind(\n          wallet,\n          innerTransactions.map((tx: ethers.Result) => ({ ...tx.toObject(), to: tx.target }))\n        )\n        unwound.push(...unwoundTransactions)\n      } catch {\n        unwound.push(tx)\n      }\n    }\n  }\n\n  return unwound\n}\n\nconst isNullish = <T>(value: T | null | undefined): value is null | undefined => value === null || value === void 0\n","import { ethers } from 'ethers'\n\n/* Source of Offchain EIP-6492 validation:\n\n// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\n// As per ERC-1271\ninterface IERC1271Wallet {\n  function isValidSignature(bytes32 hash, bytes calldata signature) external view returns (bytes4 magicValue);\n}\n\nerror ERC1271Revert(bytes error);\nerror ERC6492DeployFailed(bytes error);\n\ncontract UniversalSigValidator {\n  bytes32 private constant ERC6492_DETECTION_SUFFIX = 0x6492649264926492649264926492649264926492649264926492649264926492;\n  bytes4 private constant ERC1271_SUCCESS = 0x1626ba7e;\n\n  function isValidSigImpl(\n    address _signer,\n    bytes32 _hash,\n    bytes calldata _signature,\n    bool allowSideEffects,\n    bool deployAlreadyDeployed\n  ) public returns (bool) {\n    uint contractCodeLen = address(_signer).code.length;\n    bytes memory sigToValidate;\n    // The order here is striclty defined in https://eips.ethereum.org/EIPS/eip-6492\n    // - ERC-6492 suffix check and verification first, while being permissive in case the contract is already deployed; if the contract is deployed we will check the sig against the deployed version, this allows 6492 signatures to still be validated while taking into account potential key rotation\n    // - ERC-1271 verification if there's contract code\n    // - finally, ecrecover\n    bool isCounterfactual = bytes32(_signature[_signature.length-32:_signature.length]) == ERC6492_DETECTION_SUFFIX;\n    if (isCounterfactual) {\n      address create2Factory;\n      bytes memory factoryCalldata;\n      (create2Factory, factoryCalldata, sigToValidate) = abi.decode(_signature[0:_signature.length-32], (address, bytes, bytes));\n\n      if (contractCodeLen == 0 || deployAlreadyDeployed) {\n        (bool success, bytes memory err) = create2Factory.call(factoryCalldata);\n        if (!success) revert ERC6492DeployFailed(err);\n      }\n    } else {\n      sigToValidate = _signature;\n    }\n\n    // Try ERC-1271 verification\n    if (isCounterfactual || contractCodeLen > 0) {\n      try IERC1271Wallet(_signer).isValidSignature(_hash, sigToValidate) returns (bytes4 magicValue) {\n        bool isValid = magicValue == ERC1271_SUCCESS;\n\n        // EXPERIMENTAL: This is not part of the EIP-6492 spec *yet*\n        // but it may be useful to retry the call making the factory call\n        // even if the wallet is already deployed, in case the wallet\n        // needs to perform some sort of migration or onchain key rotation\n        if (!isValid && !deployAlreadyDeployed && contractCodeLen > 0) {\n          return isValidSigImpl(_signer, _hash, _signature, allowSideEffects, true);\n        }\n\n        if (contractCodeLen == 0 && isCounterfactual && !allowSideEffects) {\n          // if the call had side effects we need to return the\n          // result using a `revert` (to undo the state changes)\n          assembly {\n            mstore(0, isValid)\n            revert(31, 1)\n          }\n        }\n\n        return isValid;\n      } catch (bytes memory err) {\n        // EXPERIMENTAL: This is not part of the EIP-6492 spec *yet*\n        // but it may be useful to retry the call making the factory call\n        // even if the wallet is already deployed, in case the wallet\n        // needs to perform some sort of migration or onchain key rotation\n        if (!deployAlreadyDeployed && contractCodeLen > 0) {\n          return isValidSigImpl(_signer, _hash, _signature, allowSideEffects, true);\n        }\n\n        revert ERC1271Revert(err);\n      }\n    }\n\n    // ecrecover verification\n    require(_signature.length == 65, 'SignatureValidator#recoverSigner: invalid signature length');\n    bytes32 r = bytes32(_signature[0:32]);\n    bytes32 s = bytes32(_signature[32:64]);\n    uint8 v = uint8(_signature[64]);\n\n    if (v != 27 && v != 28) {\n      revert('SignatureValidator: invalid signature v value');\n    }\n\n    return ecrecover(_hash, v, r, s) == _signer;\n  }\n\n  function isValidSigWithSideEffects(\n    address _signer,\n    bytes32 _hash,\n    bytes calldata _signature\n  ) external returns (bool) {\n    return this.isValidSigImpl(_signer, _hash, _signature, true, false);\n  }\n\n  function isValidSig(\n    address _signer,\n    bytes32 _hash,\n    bytes calldata _signature\n  ) external returns (bool) {\n    try this.isValidSigImpl(_signer, _hash, _signature, false, false) returns (bool isValid) {\n      return isValid;\n    } catch (bytes memory error) {\n      // in order to avoid side effects from the contract getting deployed, the entire call will revert with a single byte result\n      uint len = error.length;\n      if (len == 1) {\n        return error[0] == 0x01;\n        // all other errors are simply forwarded, but in custom formats so that nothing else can revert with a single byte in the call\n      } else {\n        assembly { revert(error, len) }\n      }\n    }\n  }\n\n  // NOTICE: These functions aren't part of the standard\n  // they are helpers that behave like the above functions\n  // but they don't revert on failure, instead they return false\n\n  function isValidSigNoThrow(\n    address _signer,\n    bytes32 _hash,\n    bytes calldata _signature\n  ) external returns (bool) {\n    try this.isValidSigImpl(_signer, _hash, _signature, false, false) returns (bool isValid) {\n      return isValid;\n    } catch (bytes memory error) {\n      // in order to avoid side effects from the contract getting deployed, the entire call will revert with a single byte result\n      uint len = error.length;\n      if (len == 1) {\n        return error[0] == 0x01;\n        // all other errors are simply forwarded, but in custom formats so that nothing else can revert with a single byte in the call\n      } else {\n        // Ignore all other errors and return false\n        return false;\n      }\n    }\n  }\n\n  function isValidSigWithSideEffectsNoThrow(\n    address _signer,\n    bytes32 _hash,\n    bytes calldata _signature\n  ) external returns (bool) {\n    try this.isValidSigImpl(_signer, _hash, _signature, true, false) returns (bool isValid) {\n      return isValid;\n    } catch (bytes memory error) {\n      // Ignore all errors and return false\n      return false;\n    }\n  }\n}\n\n// this is a helper so we can perform validation in a single eth_call without pre-deploying a singleton\ncontract ValidateSigOffchain {\n  constructor (address _signer, bytes32 _hash, bytes memory _signature) {\n    UniversalSigValidator validator = new UniversalSigValidator();\n    bool isValidSig = validator.isValidSigWithSideEffects(_signer, _hash, _signature);\n    assembly {\n      mstore(0, isValidSig)\n      return(31, 1)\n    }\n  }\n}\n*/\n\nexport const EIP_6492_OFFCHAIN_DEPLOY_CODE =\n  '0x608060405234801561001057600080fd5b5060405161124a38038061124a83398101604081905261002f91610124565b600060405161003d906100dd565b604051809103906000f080158015610059573d6000803e3d6000fd5b5090506000816001600160a01b0316638f0684308686866040518463ffffffff1660e01b815260040161008e939291906101fb565b6020604051808303816000875af11580156100ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d19190610244565b9050806000526001601ff35b610fdc8061026e83390190565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561011b578181015183820152602001610103565b50506000910152565b60008060006060848603121561013957600080fd5b83516001600160a01b038116811461015057600080fd5b6020850151604086015191945092506001600160401b038082111561017457600080fd5b818601915086601f83011261018857600080fd5b81518181111561019a5761019a6100ea565b604051601f8201601f19908116603f011681019083821181831017156101c2576101c26100ea565b816040528281528960208487010111156101db57600080fd5b6101ec836020830160208801610100565b80955050505050509250925092565b60018060a01b0384168152826020820152606060408201526000825180606084015261022e816080850160208701610100565b601f01601f191691909101608001949350505050565b60006020828403121561025657600080fd5b8151801515811461026657600080fd5b939250505056fe608060405234801561001057600080fd5b50610fbc806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806376be4cea1161005057806376be4cea146100a65780638f068430146100b957806398ef1ed8146100cc57600080fd5b80631c6453271461006c5780633d787b6314610093575b600080fd5b61007f61007a366004610ad4565b6100df565b604051901515815260200160405180910390f35b61007f6100a1366004610ad4565b61023d565b61007f6100b4366004610b3e565b61031e565b61007f6100c7366004610ad4565b6108e1565b61007f6100da366004610ad4565b61096e565b6040517f76be4cea00000000000000000000000000000000000000000000000000000000815260009030906376be4cea9061012890889088908890889088908190600401610bc3565b6020604051808303816000875af1925050508015610181575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261017e91810190610c45565b60015b610232573d8080156101af576040519150601f19603f3d011682016040523d82523d6000602084013e6101b4565b606091505b508051600181900361022757816000815181106101d3576101d3610c69565b6020910101517fff00000000000000000000000000000000000000000000000000000000000000167f0100000000000000000000000000000000000000000000000000000000000000149250610235915050565b600092505050610235565b90505b949350505050565b6040517f76be4cea00000000000000000000000000000000000000000000000000000000815260009030906376be4cea906102879088908890889088906001908990600401610bc3565b6020604051808303816000875af19250505080156102e0575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526102dd91810190610c45565b60015b610232573d80801561030e576040519150601f19603f3d011682016040523d82523d6000602084013e610313565b606091505b506000915050610235565b600073ffffffffffffffffffffffffffffffffffffffff87163b6060827f64926492649264926492649264926492649264926492649264926492649264928888610369602082610c98565b610375928b9290610cd8565b61037e91610d02565b1490508015610484576000606089828a610399602082610c98565b926103a693929190610cd8565b8101906103b39190610e18565b955090925090508415806103c45750865b1561047d576000808373ffffffffffffffffffffffffffffffffffffffff16836040516103f19190610eb2565b6000604051808303816000865af19150503d806000811461042e576040519150601f19603f3d011682016040523d82523d6000602084013e610433565b606091505b50915091508161047a57806040517f9d0d6e2d0000000000000000000000000000000000000000000000000000000081526004016104719190610f18565b60405180910390fd5b50505b50506104be565b87878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509294505050505b80806104ca5750600083115b156106bb576040517f1626ba7e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8b1690631626ba7e90610523908c908690600401610f2b565b602060405180830381865afa92505050801561057a575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261057791810190610f44565b60015b61060f573d8080156105a8576040519150601f19603f3d011682016040523d82523d6000602084013e6105ad565b606091505b50851580156105bc5750600084115b156105db576105d08b8b8b8b8b600161031e565b9450505050506108d7565b806040517f6f2a95990000000000000000000000000000000000000000000000000000000081526004016104719190610f18565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f1626ba7e000000000000000000000000000000000000000000000000000000001480158161065f575086155b801561066b5750600085115b1561068b5761067f8c8c8c8c8c600161031e565b955050505050506108d7565b841580156106965750825b80156106a0575087155b156106af57806000526001601ffd5b94506108d79350505050565b6041871461074b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f5369676e617475726556616c696461746f72237265636f7665725369676e657260448201527f3a20696e76616c6964207369676e6174757265206c656e6774680000000000006064820152608401610471565b600061075a6020828a8c610cd8565b61076391610d02565b90506000610775604060208b8d610cd8565b61077e91610d02565b905060008a8a604081811061079557610795610c69565b919091013560f81c915050601b81148015906107b557508060ff16601c14155b15610842576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f5369676e617475726556616c696461746f723a20696e76616c6964207369676e60448201527f617475726520762076616c7565000000000000000000000000000000000000006064820152608401610471565b6040805160008152602081018083528e905260ff831691810191909152606081018490526080810183905273ffffffffffffffffffffffffffffffffffffffff8e169060019060a0016020604051602081039080840390855afa1580156108ad573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff161496505050505050505b9695505050505050565b6040517f76be4cea00000000000000000000000000000000000000000000000000000000815260009030906376be4cea9061092b9088908890889088906001908990600401610bc3565b6020604051808303816000875af115801561094a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102329190610c45565b6040517f76be4cea00000000000000000000000000000000000000000000000000000000815260009030906376be4cea906109b790889088908890889088908190600401610bc3565b6020604051808303816000875af1925050508015610a10575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610a0d91810190610c45565b60015b610232573d808015610a3e576040519150601f19603f3d011682016040523d82523d6000602084013e610a43565b606091505b5080516001819003610a6257816000815181106101d3576101d3610c69565b8082fd5b73ffffffffffffffffffffffffffffffffffffffff81168114610a8857600080fd5b50565b60008083601f840112610a9d57600080fd5b50813567ffffffffffffffff811115610ab557600080fd5b602083019150836020828501011115610acd57600080fd5b9250929050565b60008060008060608587031215610aea57600080fd5b8435610af581610a66565b935060208501359250604085013567ffffffffffffffff811115610b1857600080fd5b610b2487828801610a8b565b95989497509550505050565b8015158114610a8857600080fd5b60008060008060008060a08789031215610b5757600080fd5b8635610b6281610a66565b955060208701359450604087013567ffffffffffffffff811115610b8557600080fd5b610b9189828a01610a8b565b9095509350506060870135610ba581610b30565b91506080870135610bb581610b30565b809150509295509295509295565b73ffffffffffffffffffffffffffffffffffffffff8716815285602082015260a060408201528360a0820152838560c0830137600060c085830181019190915292151560608201529015156080820152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016909101019392505050565b600060208284031215610c5757600080fd5b8151610c6281610b30565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b81810381811115610cd2577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b60008085851115610ce857600080fd5b83861115610cf557600080fd5b5050820193919092039150565b80356020831015610cd2577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f830112610d7e57600080fd5b813567ffffffffffffffff80821115610d9957610d99610d3e565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715610ddf57610ddf610d3e565b81604052838152866020858801011115610df857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610e2d57600080fd5b8335610e3881610a66565b9250602084013567ffffffffffffffff80821115610e5557600080fd5b610e6187838801610d6d565b93506040860135915080821115610e7757600080fd5b50610e8486828701610d6d565b9150509250925092565b60005b83811015610ea9578181015183820152602001610e91565b50506000910152565b60008251610ec4818460208701610e8e565b9190910192915050565b60008151808452610ee6816020860160208601610e8e565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610c626020830184610ece565b8281526040602082015260006102356040830184610ece565b600060208284031215610f5657600080fd5b81517fffffffff0000000000000000000000000000000000000000000000000000000081168114610c6257600080fdfea26469706673582212201a72aed4b15ffb05b6502997a9bb655992e06590bd26b336dfbb153d7ff6f34b64736f6c63430008120033'\nexport const EIP_6492_SUFFIX = '0x6492649264926492649264926492649264926492649264926492649264926492'\n\n// TODO: This is a length payload, we can lower the load by deploying\n// the contract on some of the popular chains, and calling the contract\n// if the provider is one of those chains\nexport async function validateEIP6492Offchain(\n  provider: ethers.Provider,\n  signer: string,\n  hash: ethers.BytesLike,\n  signature: ethers.BytesLike\n): Promise<boolean> {\n  try {\n    const result = await provider.call({\n      data: ethers.concat([\n        EIP_6492_OFFCHAIN_DEPLOY_CODE,\n        ethers.AbiCoder.defaultAbiCoder().encode(['address', 'bytes32', 'bytes'], [signer, hash, signature])\n      ])\n    })\n\n    return result === '0x01'\n  } catch (err) {\n    return false\n  }\n}\n","import { walletContracts } from '@0xsequence/abi'\nimport { ethers } from 'ethers'\nimport { validateEIP6492Offchain } from './validateEIP6492'\n\n/**\n * Provides stateful information about the wallet.\n */\nexport interface Reader {\n  isDeployed(wallet: string): Promise<boolean>\n  implementation(wallet: string): Promise<string | undefined>\n  imageHash(wallet: string): Promise<string | undefined>\n  nonce(wallet: string, space: ethers.BigNumberish): Promise<ethers.BigNumberish>\n  isValidSignature(wallet: string, digest: ethers.BytesLike, signature: ethers.BytesLike): Promise<boolean>\n}\n\n/**\n * The OnChainReader class fetches on-chain data from a wallet.\n * It is used to understand the \"real\" state of the wallet contract on-chain.\n */\nexport class OnChainReader implements Reader {\n  // Simple cache to avoid re-fetching the same data\n  private isDeployedCache: Set<string> = new Set()\n\n  constructor(public readonly provider: ethers.Provider) {}\n\n  private module(address: string) {\n    return new ethers.Contract(\n      address,\n      [...walletContracts.mainModuleUpgradable.abi, ...walletContracts.mainModule.abi, ...walletContracts.erc1271.abi],\n      this.provider\n    )\n  }\n\n  async isDeployed(wallet: string): Promise<boolean> {\n    // This is safe to cache because the wallet cannot be undeployed once deployed\n    if (this.isDeployedCache.has(wallet)) {\n      return true\n    }\n\n    const code = await this.provider.getCode(wallet).then(c => ethers.getBytes(c))\n    const isDeployed = code.length !== 0\n    if (isDeployed) {\n      this.isDeployedCache.add(wallet)\n    }\n\n    return isDeployed\n  }\n\n  async implementation(wallet: string): Promise<string | undefined> {\n    const position = ethers.AbiCoder.defaultAbiCoder().encode(['address'], [wallet])\n    const val = await this.provider.getStorage(wallet, position).then(c => ethers.getBytes(c))\n\n    if (val.length === 20) {\n      return ethers.getAddress(ethers.hexlify(val))\n    }\n\n    if (val.length === 32) {\n      return ethers.AbiCoder.defaultAbiCoder().decode(['address'], val)[0]\n    }\n\n    return undefined\n  }\n\n  async imageHash(wallet: string): Promise<string | undefined> {\n    try {\n      const imageHash = await this.module(wallet).imageHash()\n      return imageHash\n    } catch {}\n\n    return undefined\n  }\n\n  async nonce(wallet: string, space: ethers.BigNumberish = 0): Promise<ethers.BigNumberish> {\n    try {\n      const nonce = await this.module(wallet).readNonce(space)\n      return nonce\n    } catch (e) {\n      if (!(await this.isDeployed(wallet))) {\n        return 0\n      }\n\n      throw e\n    }\n  }\n\n  // We use the EIP-6492 validator contract to check the signature\n  // this means that if the wallet is not deployed, then the signature\n  // must be prefixed with a transaction that deploys the wallet\n  async isValidSignature(wallet: string, digest: ethers.BytesLike, signature: ethers.BytesLike): Promise<boolean> {\n    return validateEIP6492Offchain(this.provider, wallet, digest, signature)\n  }\n}\n","import { ethers } from 'ethers'\nimport { commons } from '..'\nimport { Config } from './config'\n\n/**\n * Request metadata, used by the wallet to pass additional information through the orchestrator.\n */\nexport type WalletSignRequestMetadata = {\n  address: string\n  digest: ethers.BytesLike\n  chainId: ethers.BigNumberish\n\n  config: Config\n\n  parts?: Map<string, commons.signature.SignaturePart>\n\n  // TODO: We can add a \"percentage\" field to the orchestrator to indicate\n  //       how close are we to the threshold. This can be used to display\n  //       a progress bar or something similar.\n\n  message?: ethers.BytesLike\n  transactions?: commons.transaction.Transaction[]\n\n  // This is used only when a Sequence wallet is nested in another Sequence wallet\n  // it contains the original metadata of the parent wallet.\n  parent?: WalletSignRequestMetadata\n\n  decorate?: boolean\n  cantValidateBehavior?: 'ignore' | 'eip6492' | 'throw'\n}\n\nexport function isWalletSignRequestMetadata(obj: any): obj is WalletSignRequestMetadata {\n  return obj && obj.address && obj.digest && obj.chainId !== undefined && obj.config\n}\n\n/**\n * Request metadata, used by the wallet to pass additional information through the orchestrator.\n */\nexport type WalletDeployMetadata = {\n  includeChildren?: boolean // Whether to include children in deployment, default false\n  ignoreDeployed?: boolean // Whether to ignore already deployed wallets, default false\n}\n","import { commons, v1, v2 } from '..'\n\nexport const ALL_CODERS = [\n  { config: v1.config.ConfigCoder, signature: v1.signature.SignatureCoder },\n  { config: v2.config.ConfigCoder, signature: v2.signature.SignatureCoder }\n]\n\nexport function coderFor(version: number) {\n  const index = version - 1\n  if (index < 0 || index >= ALL_CODERS.length) {\n    throw new Error(`No coder for version: ${version}`)\n  }\n\n  return ALL_CODERS[index]\n}\n\n/**\n *  Same as `coderFor` but returns `generic` coders without versioned types.\n */\nexport function genericCoderFor(version: number): {\n  config: commons.config.ConfigCoder\n  signature: commons.signature.SignatureCoder\n} {\n  return coderFor(version)\n}\n","export const VERSION = '2.0.10'\n","export * as v1 from './v1'\nexport * as v2 from './v2'\nexport * as commons from './commons'\nexport * as universal from './universal'\n\nimport * as v1 from './v1'\nimport * as v2 from './v2'\n\nexport { VERSION } from './version'\n\nexport const allVersions = [v1, v2]\n","import { commons } from '@0xsequence/core'\n\nexport function counterfactualVersion(\n  address: string,\n  firstImageHash: string,\n  versions: commons.context.WalletContext[]\n): number {\n  for (let i = 0; i < versions.length; i++) {\n    if (commons.context.addressOf(versions[i], firstImageHash) === address) {\n      return versions[i].version\n    }\n  }\n\n  // if we can't find the version then either the address is invalid,\n  // the version is not in VersionedContext, or the firstImageHash is not correct\n  throw new Error('Could not find version for counterfactual address')\n}\n\nexport interface Version<\n  C extends commons.config.Config,\n  S extends commons.signature.Signature<C>,\n  U extends commons.signature.UnrecoveredSignature\n> {\n  version: number\n  coders: {\n    config: commons.config.ConfigCoder<C>\n    signature: commons.signature.SignatureCoder<C, S, U>\n  }\n}\n","import { commons } from '@0xsequence/core'\nimport { UnsignedMigration } from '../migrator'\nimport { Migration_v1v2 } from './migration_01_02'\n\n//                                 = uint160(keccak256(\"org.sequence.sdk.migration.space.nonce\"))\nexport const MIGRATION_NONCE_SPACE = '0xa04263acf755e8bd19c0d7e20eea39a9ff3729eb'\n\nexport interface Migration<P extends commons.config.Config, C extends commons.config.Config> {\n  version: number\n\n  buildTransaction: (address: string, contexts: commons.context.VersionedContext, newConfig: P | C) => UnsignedMigration\n\n  decodeTransaction: (\n    tx: commons.transaction.TransactionBundle,\n    contexts: commons.context.VersionedContext\n  ) => {\n    address: string\n    newImageHash: string\n  }\n\n  configCoder: commons.config.ConfigCoder<C>\n  signatureCoder: commons.signature.SignatureCoder<C, commons.signature.Signature<C>, commons.signature.UnrecoveredSignature>\n}\n\nexport const v1v2 = new Migration_v1v2()\n","import { commons, v1, v2 } from '@0xsequence/core'\nimport { ethers } from 'ethers'\n\nimport { Migration, MIGRATION_NONCE_SPACE } from '.'\nimport { walletContracts } from '@0xsequence/abi'\nimport { UnsignedMigration } from '../migrator'\n\nexport class Migration_v1v2 implements Migration<v1.config.WalletConfig, v2.config.WalletConfig> {\n  version = 2\n\n  configCoder = v2.config.ConfigCoder\n  signatureCoder = v2.signature.SignatureCoder\n\n  buildTransaction(\n    address: string,\n    contexts: commons.context.VersionedContext,\n    newConfig: v1.config.WalletConfig | v2.config.WalletConfig\n  ): UnsignedMigration {\n    // If new config is not v2, then we need to convert it to v2\n    if (!v2.config.ConfigCoder.isWalletConfig(newConfig)) {\n      const v2Config = v2.config.toWalletConfig({\n        threshold: newConfig.threshold,\n        members: newConfig.signers,\n        checkpoint: 0\n      })\n\n      return this.buildTransaction(address, contexts, v2Config)\n    }\n\n    const context = contexts[2]\n    const contract = new ethers.Interface(walletContracts.mainModule.abi)\n\n    // WARNING: v1 wallets CAN NOT use v2 configurations so we ALWAYS need to update\n    // both the implementation and the configuration at the same time\n\n    const updateBundle = v2.config.ConfigCoder.update.buildTransaction(address, newConfig, context, 'first')\n\n    const tx = {\n      entrypoint: address,\n      nonce: commons.transaction.encodeNonce(MIGRATION_NONCE_SPACE, 0),\n      transactions: [\n        {\n          to: address,\n          value: 0,\n          gasLimit: 0,\n          revertOnError: true,\n          delegateCall: false,\n          data: contract.encodeFunctionData(contract.getFunction('updateImplementation')!, [context.mainModuleUpgradable])\n        },\n        ...updateBundle.transactions\n      ]\n    }\n\n    return {\n      tx,\n      fromVersion: this.version - 1,\n      toVersion: this.version,\n      toConfig: newConfig\n    }\n  }\n\n  decodeTransaction(\n    tx: commons.transaction.TransactionBundle,\n    contexts: commons.context.VersionedContext\n  ): {\n    address: string\n    newImageHash: string\n  } {\n    const address = tx.entrypoint\n\n    if (tx.transactions.length < 2) {\n      throw new Error('Invalid transaction bundle size')\n    }\n\n    if (!tx.nonce || commons.transaction.encodeNonce(MIGRATION_NONCE_SPACE, 0) !== BigInt(tx.nonce)) {\n      throw new Error('Invalid transaction bundle nonce')\n    }\n\n    if (\n      tx.transactions[0].to !== address ||\n      tx.transactions[1].to !== address ||\n      tx.transactions[0].delegateCall ||\n      tx.transactions[1].delegateCall ||\n      !tx.transactions[0].revertOnError ||\n      !tx.transactions[1].revertOnError ||\n      (tx.transactions[0].value && BigInt(tx.transactions[0].value) !== 0n) ||\n      (tx.transactions[1].value && BigInt(tx.transactions[1].value) !== 0n) ||\n      (tx.transactions[0].gasLimit && BigInt(tx.transactions[0].gasLimit) !== 0n) ||\n      (tx.transactions[1].gasLimit && BigInt(tx.transactions[1].gasLimit) !== 0n)\n    ) {\n      throw new Error('Invalid transaction bundle format')\n    }\n\n    const context = contexts[2]\n    const contract = new ethers.Interface(walletContracts.mainModule.abi)\n\n    const data1 = ethers.hexlify(tx.transactions[0].data || new Uint8Array())\n    const expectData1 = ethers.hexlify(\n      contract.encodeFunctionData(contract.getFunction('updateImplementation')!, [context.mainModuleUpgradable])\n    )\n\n    if (data1 !== expectData1) {\n      throw new Error('Invalid new implementation on transaction')\n    }\n\n    const decoded2 = v2.config.ConfigCoder.update.decodeTransaction({ entrypoint: address, transactions: [tx.transactions[1]] })\n    if (decoded2.address !== address) {\n      throw new Error('Invalid transaction bundle address')\n    }\n\n    return decoded2\n  }\n}\n","import { commons } from '@0xsequence/core'\nimport { Wallet } from '@0xsequence/wallet'\n\nimport { Migration } from './migrations'\nimport { ethers } from 'ethers'\n\nexport type UnsignedMigration = {\n  tx: commons.transaction.TransactionBundle\n  fromVersion: number\n  toVersion: number\n  toConfig: commons.config.Config\n}\n\nexport type SignedMigration = Omit<UnsignedMigration, 'tx'> & {\n  tx: commons.transaction.SignedTransactionBundle\n}\n\nexport interface PresignedMigrationTracker {\n  getMigration(\n    address: string,\n    fromImageHash: string,\n    fromVersion: number,\n    chainId: ethers.BigNumberish\n  ): Promise<SignedMigration | undefined>\n\n  saveMigration(address: string, signed: SignedMigration, contexts: commons.context.VersionedContext): Promise<void>\n}\n\nexport type Migrations = { [version: number]: Migration<commons.config.Config, commons.config.Config> }\n\nfunction validateMigrations(migrations: Migrations) {\n  for (const [version, migration] of Object.entries(migrations)) {\n    if (version !== String(migration.version - 1)) {\n      throw new Error(`Migration with key ${version} has version ${migration.version}, expected version to be key + 1`)\n    }\n  }\n}\n\nexport class Migrator {\n  constructor(\n    public readonly tracker: PresignedMigrationTracker,\n    public readonly migrations: Migrations,\n    public readonly contexts: commons.context.VersionedContext\n  ) {\n    validateMigrations(migrations)\n  }\n\n  lastMigration(): Migration<commons.config.Config, commons.config.Config> {\n    let last: Migration<commons.config.Config, commons.config.Config> | undefined\n    for (const migration of Object.values(this.migrations)) {\n      if (last === undefined || migration.version > last.version) {\n        last = migration\n      }\n    }\n    if (last === undefined) {\n      throw new Error('No migrations')\n    }\n    return last\n  }\n\n  async getAllMigratePresignedTransaction(args: {\n    address: string\n    fromImageHash: string\n    fromVersion: number\n    chainId: ethers.BigNumberish\n  }): Promise<{\n    lastVersion: number\n    lastImageHash: string\n    signedMigrations: SignedMigration[]\n    missing: boolean\n  }> {\n    const { address, fromImageHash, fromVersion, chainId } = args\n\n    let fih = fromImageHash\n    let fversion = fromVersion\n\n    const versions = Object.values(this.contexts)\n    const migs: SignedMigration[] = []\n\n    for (let i = 1; i < versions.length; i++) {\n      const mig = await this.tracker.getMigration(address, fih, fversion, chainId)\n      if (!mig) return { signedMigrations: migs, missing: true, lastImageHash: fih, lastVersion: fversion }\n\n      migs.push(mig)\n\n      const migration = this.migrations[fversion]\n      if (!migration) {\n        throw new Error(`No migration found for version ${fversion}`)\n      }\n\n      const decoded = migration.decodeTransaction(mig.tx, this.contexts)\n      if (decoded.address !== address) {\n        throw new Error(`Migration transaction address does not match expected address`)\n      }\n\n      fih = decoded.newImageHash\n      fversion += 1\n    }\n\n    return { signedMigrations: migs, missing: false, lastImageHash: fih, lastVersion: fversion }\n  }\n\n  async signNextMigration(\n    address: string,\n    fromVersion: number,\n    wallet: Wallet,\n    nextConfig: commons.config.Config\n  ): Promise<SignedMigration | undefined> {\n    const migration = this.migrations[fromVersion]\n\n    if (!migration) {\n      return undefined\n    }\n\n    const unsignedMigration = migration.buildTransaction(address, this.contexts, nextConfig)\n    const signedBundle = await wallet.signTransactionBundle(unsignedMigration.tx)\n\n    return {\n      ...unsignedMigration,\n      tx: signedBundle\n    }\n  }\n}\n","import { v1v2 } from './migrations'\nimport { Migrations } from './migrator'\n\nexport const DefaultMigrations: Migrations = {\n  1: v1v2\n}\n","import { ethers } from 'ethers'\nimport { walletContracts } from '@0xsequence/abi'\nimport { FeeOption, FeeQuote, Relayer, SimulateResult } from '.'\nimport { logger, Optionals } from '@0xsequence/utils'\nimport { commons } from '@0xsequence/core'\n\nconst DEFAULT_GAS_LIMIT = 800000n\n\nexport interface ProviderRelayerOptions {\n  provider: ethers.Provider\n  waitPollRate?: number\n  deltaBlocksLog?: number\n  fromBlockLog?: number\n}\n\nexport const ProviderRelayerDefaults: Required<Optionals<ProviderRelayerOptions>> = {\n  waitPollRate: 1000,\n  deltaBlocksLog: 12,\n  fromBlockLog: -1024\n}\n\nexport function isProviderRelayerOptions(obj: any): obj is ProviderRelayerOptions {\n  return typeof obj === 'object' && obj.provider instanceof ethers.AbstractProvider\n}\n\nexport abstract class ProviderRelayer implements Relayer {\n  public provider: ethers.Provider\n  public waitPollRate: number\n  public deltaBlocksLog: number\n  public fromBlockLog: number\n\n  constructor(options: ProviderRelayerOptions) {\n    const opts = { ...ProviderRelayerDefaults, ...options }\n\n    this.provider = opts.provider\n    this.waitPollRate = opts.waitPollRate\n    this.deltaBlocksLog = opts.deltaBlocksLog\n    this.fromBlockLog = opts.fromBlockLog\n  }\n\n  abstract getFeeOptions(\n    address: string,\n    ...transactions: commons.transaction.Transaction[]\n  ): Promise<{ options: FeeOption[]; quote?: FeeQuote }>\n\n  abstract getFeeOptionsRaw(\n    entrypoint: string,\n    data: ethers.BytesLike,\n    options?: {\n      simulate?: boolean\n    }\n  ): Promise<{ options: FeeOption[]; quote?: FeeQuote }>\n\n  abstract gasRefundOptions(address: string, ...transactions: commons.transaction.Transaction[]): Promise<FeeOption[]>\n\n  abstract relay(\n    signedTxs: commons.transaction.IntendedTransactionBundle,\n    quote?: FeeQuote,\n    waitForReceipt?: boolean\n  ): Promise<commons.transaction.TransactionResponse>\n\n  async simulate(wallet: string, ...transactions: commons.transaction.Transaction[]): Promise<SimulateResult[]> {\n    return (\n      await Promise.all(\n        transactions.map(async tx => {\n          // Respect gasLimit request of the transaction (as long as its not 0)\n          if (tx.gasLimit && BigInt(tx.gasLimit || 0) !== 0n) {\n            return tx.gasLimit\n          }\n\n          // Fee can't be estimated locally for delegateCalls\n          if (tx.delegateCall) {\n            return DEFAULT_GAS_LIMIT\n          }\n\n          // Fee can't be estimated for self-called if wallet hasn't been deployed\n          if (tx.to === wallet && (await this.provider.getCode(wallet).then(code => ethers.getBytes(code).length === 0))) {\n            return DEFAULT_GAS_LIMIT\n          }\n\n          if (!this.provider) {\n            throw new Error('signer.provider is not set, but is required')\n          }\n\n          // TODO: If the wallet address has been deployed, gas limits can be\n          // estimated with more accurately by using self-calls with the batch transactions one by one\n          return this.provider.estimateGas({\n            from: wallet,\n            to: tx.to,\n            data: tx.data,\n            value: tx.value\n          })\n        })\n      )\n    ).map(gasLimit => ({\n      executed: true,\n      succeeded: true,\n      gasUsed: Number(gasLimit),\n      gasLimit: Number(gasLimit)\n    }))\n  }\n\n  async getNonce(address: string, space?: ethers.BigNumberish, blockTag?: ethers.BlockTag): Promise<ethers.BigNumberish> {\n    if (!this.provider) {\n      throw new Error('provider is not set')\n    }\n\n    if ((await this.provider.getCode(address)) === '0x') {\n      return 0\n    }\n\n    if (space === undefined) {\n      space = 0\n    }\n\n    const module = new ethers.Contract(address, walletContracts.mainModule.abi, this.provider)\n    const nonce = await module.readNonce(space, { blockTag: blockTag })\n    return commons.transaction.encodeNonce(space, nonce)\n  }\n\n  async wait(\n    metaTxnId: string | commons.transaction.SignedTransactionBundle,\n    timeoutDuration?: number,\n    delay: number = this.waitPollRate,\n    maxFails: number = 5\n  ): Promise<ethers.TransactionResponse & { receipt: ethers.TransactionReceipt }> {\n    if (typeof metaTxnId !== 'string') {\n      metaTxnId = commons.transaction.intendedTransactionID(metaTxnId)\n    }\n\n    let timedOut = false\n\n    const retry = async <T>(f: () => Promise<T>, errorMessage: string): Promise<T> => {\n      let fails = 0\n\n      while (!timedOut) {\n        try {\n          return await f()\n        } catch (error) {\n          fails++\n\n          if (maxFails !== undefined && fails >= maxFails) {\n            logger.error(`giving up after ${fails} failed attempts${errorMessage ? `: ${errorMessage}` : ''}`, error)\n            throw error\n          } else {\n            logger.warn(`attempt #${fails} failed${errorMessage ? `: ${errorMessage}` : ''}`, error)\n          }\n        }\n\n        if (delay > 0) {\n          await new Promise(resolve => setTimeout(resolve, delay))\n        }\n      }\n\n      throw new Error(`timed out after ${fails} failed attempts${errorMessage ? `: ${errorMessage}` : ''}`)\n    }\n\n    const waitReceipt = async (): Promise<ethers.TransactionResponse & { receipt: ethers.TransactionReceipt }> => {\n      // Transactions can only get executed on nonce change\n      // get all nonce changes and look for metaTxnIds in between logs\n      let lastBlock: number = this.fromBlockLog\n\n      if (lastBlock < 0) {\n        const block = await retry(() => this.provider.getBlockNumber(), 'unable to get latest block number')\n        lastBlock = block + lastBlock\n      }\n\n      if (typeof metaTxnId !== 'string') {\n        throw new Error('impossible')\n      }\n\n      const normalMetaTxnId = metaTxnId.replace('0x', '')\n\n      while (!timedOut) {\n        const block = await retry(() => this.provider.getBlockNumber(), 'unable to get latest block number')\n\n        const logs = await retry(\n          () =>\n            this.provider.getLogs({\n              fromBlock: Math.max(0, lastBlock - this.deltaBlocksLog),\n              toBlock: block,\n              // Nonce change event topic\n              topics: ['0x1f180c27086c7a39ea2a7b25239d1ab92348f07ca7bb59d1438fcf527568f881']\n            }),\n          `unable to get NonceChange logs for blocks ${Math.max(0, lastBlock - this.deltaBlocksLog)} to ${block}`\n        )\n\n        lastBlock = block\n\n        // Get receipts of all transactions\n        const txs = await Promise.all(\n          logs.map(l =>\n            retry(\n              () => this.provider.getTransactionReceipt(l.transactionHash),\n              `unable to get receipt for transaction ${l.transactionHash}`\n            )\n          )\n        )\n\n        // Find a transaction with a TxExecuted log\n        const found = txs.find(tx =>\n          tx?.logs.find(\n            l =>\n              (l.topics.length === 0 && l.data.replace('0x', '') === normalMetaTxnId) ||\n              (l.topics.length === 1 &&\n                // TxFailed event topic\n                l.topics[0] === '0x3dbd1590ea96dd3253a91f24e64e3a502e1225d602a5731357bc12643070ccd7' &&\n                l.data.length >= 64 &&\n                l.data.replace('0x', '').startsWith(normalMetaTxnId))\n          )\n        )\n\n        // If found return that\n        if (found) {\n          const response = await retry(() => this.provider.getTransaction(found.hash), `unable to get transaction ${found.hash}`)\n          if (!response) {\n            throw new Error(`Transaction response not found for  ${metaTxnId}`)\n          }\n\n          // NOTE: we have to do this, because ethers-v6 uses private fields\n          // and we can't just extend the class and override the method, so\n          // we just modify the response object directly by adding the receipt to it.\n          const out: any = response\n          out.receipt = found\n          return out\n        }\n\n        // Otherwise wait and try again\n        if (!timedOut) {\n          await new Promise(r => setTimeout(r, delay))\n        }\n      }\n\n      throw new Error(`Timeout waiting for transaction receipt ${metaTxnId}`)\n    }\n\n    if (timeoutDuration !== undefined) {\n      return Promise.race([\n        waitReceipt(),\n        new Promise<ethers.TransactionResponse & { receipt: ethers.TransactionReceipt }>((_, reject) =>\n          setTimeout(() => {\n            timedOut = true\n            reject(`Timeout waiting for transaction receipt ${metaTxnId}`)\n          }, timeoutDuration)\n        )\n      ])\n    } else {\n      return waitReceipt()\n    }\n  }\n}\n","/* eslint-disable */\n// sequence-relayer v0.4.1 1e27d0fd295aa5897878939595ef0c6adc54b1a3\n// --\n// Code generated by webrpc-gen@v0.18.6 with typescript generator. DO NOT EDIT.\n//\n// webrpc-gen -schema=relayer.ridl -target=typescript -client -out=./clients/relayer.gen.ts\n\n// WebRPC description and code-gen version\nexport const WebRPCVersion = 'v1'\n\n// Schema version of your RIDL schema\nexport const WebRPCSchemaVersion = 'v0.4.1'\n\n// Schema hash generated from your RIDL schema\nexport const WebRPCSchemaHash = '1e27d0fd295aa5897878939595ef0c6adc54b1a3'\n\n//\n// Types\n//\n\nexport enum ETHTxnStatus {\n  UNKNOWN = 'UNKNOWN',\n  DROPPED = 'DROPPED',\n  QUEUED = 'QUEUED',\n  SENT = 'SENT',\n  SUCCEEDED = 'SUCCEEDED',\n  PARTIALLY_FAILED = 'PARTIALLY_FAILED',\n  FAILED = 'FAILED'\n}\n\nexport enum TransferType {\n  SEND = 'SEND',\n  RECEIVE = 'RECEIVE',\n  BRIDGE_DEPOSIT = 'BRIDGE_DEPOSIT',\n  BRIDGE_WITHDRAW = 'BRIDGE_WITHDRAW',\n  BURN = 'BURN',\n  UNKNOWN = 'UNKNOWN'\n}\n\nexport enum FeeTokenType {\n  UNKNOWN = 'UNKNOWN',\n  ERC20_TOKEN = 'ERC20_TOKEN',\n  ERC1155_TOKEN = 'ERC1155_TOKEN'\n}\n\nexport enum SortOrder {\n  DESC = 'DESC',\n  ASC = 'ASC'\n}\n\nexport interface Version {\n  webrpcVersion: string\n  schemaVersion: string\n  schemaHash: string\n  appVersion: string\n}\n\nexport interface RuntimeStatus {\n  healthOK: boolean\n  startTime: string\n  uptime: number\n  ver: string\n  branch: string\n  commitHash: string\n  useEIP1559: boolean\n  senders: Array<SenderStatus>\n  checks: RuntimeChecks\n  numTxnsRelayed: NumTxnsRelayed\n}\n\nexport interface SenderStatus {\n  index: number\n  address: string\n  etherBalance: number\n  active: boolean\n}\n\nexport interface RuntimeChecks {}\n\nexport interface NumTxnsRelayed {\n  prev: number\n  current: number\n  period: number\n}\n\nexport interface SequenceContext {\n  factory: string\n  mainModule: string\n  mainModuleUpgradable: string\n  guestModule: string\n  utils: string\n}\n\nexport interface GasTank {\n  id: number\n  name: string\n  currentBalance: number\n  unlimited: boolean\n  feeMarkupFactor: number\n  updatedAt: string\n  createdAt: string\n}\n\nexport interface GasTankBalanceAdjustment {\n  gasTankId: number\n  nonce: number\n  amount: number\n  totalBalance: number\n  balanceTimestamp: string\n  createdAt: string\n}\n\nexport interface GasSponsor {\n  id: number\n  gasTankId: number\n  projectId: number\n  address: string\n  name: string\n  active: boolean\n  updatedAt: string\n  createdAt: string\n  deletedAt: string\n}\n\nexport interface GasSponsorUsage {\n  name: string\n  id: number\n  totalGasUsed: number\n  totalTxnFees: number\n  totalTxnFeesUsd: number\n  avgGasPrice: number\n  totalTxns: number\n  startTime: string\n  endTime: string\n}\n\nexport interface MetaTxn {\n  walletAddress: string\n  contract: string\n  input: string\n}\n\nexport interface MetaTxnLog {\n  id: number\n  projectId: number\n  txnHash: string\n  txnNonce: string\n  metaTxnID?: string\n  txnStatus: ETHTxnStatus\n  txnRevertReason: string\n  requeues: number\n  queuedAt: string\n  sentAt: string\n  minedAt: string\n  target: string\n  input: string\n  txnArgs: { [key: string]: any }\n  txnReceipt?: { [key: string]: any }\n  walletAddress: string\n  metaTxnNonce: string\n  gasLimit: number\n  gasPrice: string\n  gasUsed: number\n  gasEstimated: number\n  gasFeeMarkup?: number\n  usdRate: string\n  creditsUsed: number\n  isWhitelisted: boolean\n  gasSponsor?: number\n  gasTank?: number\n  updatedAt: string\n  createdAt: string\n}\n\nexport interface MetaTxnEntry {\n  id: number\n  metaTxnID: string\n  txnStatus: ETHTxnStatus\n  txnRevertReason: string\n  index: number\n  logs?: Array<any>\n  updatedAt: string\n  createdAt: string\n}\n\nexport interface MetaTxnReceipt {\n  id: string\n  status: string\n  revertReason?: string\n  index: number\n  logs: Array<MetaTxnReceiptLog>\n  receipts: Array<MetaTxnReceipt>\n  txnReceipt: string\n}\n\nexport interface MetaTxnReceiptLog {\n  address: string\n  topics: Array<string>\n  data: string\n}\n\nexport interface Transaction {\n  txnHash?: string\n  blockNumber: number\n  chainId: number\n  metaTxnID?: string\n  transfers?: Array<TxnLogTransfer>\n  users?: { [key: string]: TxnLogUser }\n  timestamp: string\n}\n\nexport interface TxnLogUser {\n  username: string\n}\n\nexport interface TxnLogTransfer {\n  transferType: TransferType\n  contractAddress: string\n  from: string\n  to: string\n  ids: Array<string>\n  amounts: Array<string>\n}\n\nexport interface SentTransactionsFilter {\n  pending?: boolean\n  failed?: boolean\n}\n\nexport interface SimulateResult {\n  executed: boolean\n  succeeded: boolean\n  result?: string\n  reason?: string\n  gasUsed: number\n  gasLimit: number\n}\n\nexport interface FeeOption {\n  token: FeeToken\n  to: string\n  value: string\n  gasLimit: number\n}\n\nexport interface FeeToken {\n  chainId: number\n  name: string\n  symbol: string\n  type: FeeTokenType\n  decimals?: number\n  logoURL: string\n  contractAddress?: string\n  tokenID?: string\n}\n\nexport interface Page {\n  pageSize?: number\n  page?: number\n  more?: boolean\n  totalRecords?: number\n  column?: string\n  before?: any\n  after?: any\n  sort?: Array<SortBy>\n}\n\nexport interface SortBy {\n  column: string\n  order: SortOrder\n}\n\nexport interface Relayer {\n  ping(headers?: object, signal?: AbortSignal): Promise<PingReturn>\n  version(headers?: object, signal?: AbortSignal): Promise<VersionReturn>\n  runtimeStatus(headers?: object, signal?: AbortSignal): Promise<RuntimeStatusReturn>\n  getSequenceContext(headers?: object, signal?: AbortSignal): Promise<GetSequenceContextReturn>\n  getChainID(headers?: object, signal?: AbortSignal): Promise<GetChainIDReturn>\n  sendMetaTxn(args: SendMetaTxnArgs, headers?: object, signal?: AbortSignal): Promise<SendMetaTxnReturn>\n  getMetaTxnNonce(args: GetMetaTxnNonceArgs, headers?: object, signal?: AbortSignal): Promise<GetMetaTxnNonceReturn>\n  getMetaTxnReceipt(args: GetMetaTxnReceiptArgs, headers?: object, signal?: AbortSignal): Promise<GetMetaTxnReceiptReturn>\n  simulate(args: SimulateArgs, headers?: object, signal?: AbortSignal): Promise<SimulateReturn>\n  updateMetaTxnGasLimits(\n    args: UpdateMetaTxnGasLimitsArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<UpdateMetaTxnGasLimitsReturn>\n  feeTokens(headers?: object, signal?: AbortSignal): Promise<FeeTokensReturn>\n  feeOptions(args: FeeOptionsArgs, headers?: object, signal?: AbortSignal): Promise<FeeOptionsReturn>\n  getMetaTxnNetworkFeeOptions(\n    args: GetMetaTxnNetworkFeeOptionsArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetMetaTxnNetworkFeeOptionsReturn>\n  getMetaTransactions(args: GetMetaTransactionsArgs, headers?: object, signal?: AbortSignal): Promise<GetMetaTransactionsReturn>\n  sentTransactions(args: SentTransactionsArgs, headers?: object, signal?: AbortSignal): Promise<SentTransactionsReturn>\n  pendingTransactions(args: PendingTransactionsArgs, headers?: object, signal?: AbortSignal): Promise<PendingTransactionsReturn>\n  getGasTank(args: GetGasTankArgs, headers?: object, signal?: AbortSignal): Promise<GetGasTankReturn>\n  addGasTank(args: AddGasTankArgs, headers?: object, signal?: AbortSignal): Promise<AddGasTankReturn>\n  updateGasTank(args: UpdateGasTankArgs, headers?: object, signal?: AbortSignal): Promise<UpdateGasTankReturn>\n  getGasSponsor(args: GetGasSponsorArgs, headers?: object, signal?: AbortSignal): Promise<GetGasSponsorReturn>\n  addressGasSponsors(args: AddressGasSponsorsArgs, headers?: object, signal?: AbortSignal): Promise<AddressGasSponsorsReturn>\n  listGasSponsors(args: ListGasSponsorsArgs, headers?: object, signal?: AbortSignal): Promise<ListGasSponsorsReturn>\n  addGasSponsor(args: AddGasSponsorArgs, headers?: object, signal?: AbortSignal): Promise<AddGasSponsorReturn>\n  updateGasSponsor(args: UpdateGasSponsorArgs, headers?: object, signal?: AbortSignal): Promise<UpdateGasSponsorReturn>\n  removeGasSponsor(args: RemoveGasSponsorArgs, headers?: object, signal?: AbortSignal): Promise<RemoveGasSponsorReturn>\n  reportGasSponsorUsage(\n    args: ReportGasSponsorUsageArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<ReportGasSponsorUsageReturn>\n  nextGasTankBalanceAdjustmentNonce(\n    args: NextGasTankBalanceAdjustmentNonceArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<NextGasTankBalanceAdjustmentNonceReturn>\n  adjustGasTankBalance(\n    args: AdjustGasTankBalanceArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<AdjustGasTankBalanceReturn>\n  getGasTankBalanceAdjustment(\n    args: GetGasTankBalanceAdjustmentArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetGasTankBalanceAdjustmentReturn>\n  listGasTankBalanceAdjustments(\n    args: ListGasTankBalanceAdjustmentsArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<ListGasTankBalanceAdjustmentsReturn>\n}\n\nexport interface PingArgs {}\n\nexport interface PingReturn {\n  status: boolean\n}\nexport interface VersionArgs {}\n\nexport interface VersionReturn {\n  version: Version\n}\nexport interface RuntimeStatusArgs {}\n\nexport interface RuntimeStatusReturn {\n  status: RuntimeStatus\n}\nexport interface GetSequenceContextArgs {}\n\nexport interface GetSequenceContextReturn {\n  data: SequenceContext\n}\nexport interface GetChainIDArgs {}\n\nexport interface GetChainIDReturn {\n  chainID: number\n}\nexport interface SendMetaTxnArgs {\n  call: MetaTxn\n  quote?: string\n}\n\nexport interface SendMetaTxnReturn {\n  status: boolean\n  txnHash: string\n}\nexport interface GetMetaTxnNonceArgs {\n  walletContractAddress: string\n  space?: string\n}\n\nexport interface GetMetaTxnNonceReturn {\n  nonce: string\n}\nexport interface GetMetaTxnReceiptArgs {\n  metaTxID: string\n}\n\nexport interface GetMetaTxnReceiptReturn {\n  receipt: MetaTxnReceipt\n}\nexport interface SimulateArgs {\n  wallet: string\n  transactions: string\n}\n\nexport interface SimulateReturn {\n  results: Array<SimulateResult>\n}\nexport interface UpdateMetaTxnGasLimitsArgs {\n  walletAddress: string\n  walletConfig: any\n  payload: string\n}\n\nexport interface UpdateMetaTxnGasLimitsReturn {\n  payload: string\n}\nexport interface FeeTokensArgs {}\n\nexport interface FeeTokensReturn {\n  isFeeRequired: boolean\n  tokens: Array<FeeToken>\n}\nexport interface FeeOptionsArgs {\n  wallet: string\n  to: string\n  data: string\n  simulate?: boolean\n}\n\nexport interface FeeOptionsReturn {\n  options: Array<FeeOption>\n  sponsored: boolean\n  quote?: string\n}\nexport interface GetMetaTxnNetworkFeeOptionsArgs {\n  walletConfig: any\n  payload: string\n}\n\nexport interface GetMetaTxnNetworkFeeOptionsReturn {\n  options: Array<FeeOption>\n}\nexport interface GetMetaTransactionsArgs {\n  projectId: number\n  gasTankId: number\n  page?: Page\n}\n\nexport interface GetMetaTransactionsReturn {\n  page: Page\n  transactions: Array<MetaTxnLog>\n}\nexport interface SentTransactionsArgs {\n  filter?: SentTransactionsFilter\n  page?: Page\n}\n\nexport interface SentTransactionsReturn {\n  page: Page\n  transactions: Array<Transaction>\n}\nexport interface PendingTransactionsArgs {\n  page?: Page\n}\n\nexport interface PendingTransactionsReturn {\n  page: Page\n  transactions: Array<Transaction>\n}\nexport interface GetGasTankArgs {\n  id: number\n}\n\nexport interface GetGasTankReturn {\n  gasTank: GasTank\n}\nexport interface AddGasTankArgs {\n  name: string\n  feeMarkupFactor: number\n  unlimited?: boolean\n}\n\nexport interface AddGasTankReturn {\n  status: boolean\n  gasTank: GasTank\n}\nexport interface UpdateGasTankArgs {\n  id: number\n  name?: string\n  feeMarkupFactor?: number\n  unlimited?: boolean\n}\n\nexport interface UpdateGasTankReturn {\n  status: boolean\n  gasTank: GasTank\n}\nexport interface GetGasSponsorArgs {\n  id: number\n}\n\nexport interface GetGasSponsorReturn {\n  gasSponsor: GasSponsor\n}\nexport interface AddressGasSponsorsArgs {\n  address: string\n  page?: Page\n}\n\nexport interface AddressGasSponsorsReturn {\n  page: Page\n  gasSponsors: Array<GasSponsor>\n}\nexport interface ListGasSponsorsArgs {\n  projectId: number\n  gasTankId: number\n  page?: Page\n}\n\nexport interface ListGasSponsorsReturn {\n  page: Page\n  gasSponsors: Array<GasSponsor>\n}\nexport interface AddGasSponsorArgs {\n  projectId: number\n  gasTankId: number\n  address: string\n  name?: string\n  active?: boolean\n}\n\nexport interface AddGasSponsorReturn {\n  status: boolean\n  gasSponsor: GasSponsor\n}\nexport interface UpdateGasSponsorArgs {\n  id: number\n  name?: string\n  active?: boolean\n}\n\nexport interface UpdateGasSponsorReturn {\n  status: boolean\n  gasSponsor: GasSponsor\n}\nexport interface RemoveGasSponsorArgs {\n  id: number\n}\n\nexport interface RemoveGasSponsorReturn {\n  status: boolean\n}\nexport interface ReportGasSponsorUsageArgs {\n  projectId: number\n  gasTankId: number\n  startTime?: string\n  endTime?: string\n}\n\nexport interface ReportGasSponsorUsageReturn {\n  gasSponsorUsage: Array<GasSponsorUsage>\n}\nexport interface NextGasTankBalanceAdjustmentNonceArgs {\n  id: number\n}\n\nexport interface NextGasTankBalanceAdjustmentNonceReturn {\n  nonce: number\n}\nexport interface AdjustGasTankBalanceArgs {\n  id: number\n  nonce: number\n  amount: number\n}\n\nexport interface AdjustGasTankBalanceReturn {\n  status: boolean\n  adjustment: GasTankBalanceAdjustment\n}\nexport interface GetGasTankBalanceAdjustmentArgs {\n  id: number\n  nonce: number\n}\n\nexport interface GetGasTankBalanceAdjustmentReturn {\n  adjustment: GasTankBalanceAdjustment\n}\nexport interface ListGasTankBalanceAdjustmentsArgs {\n  id: number\n  page?: Page\n}\n\nexport interface ListGasTankBalanceAdjustmentsReturn {\n  page: Page\n  adjustments: Array<GasTankBalanceAdjustment>\n}\n\n//\n// Client\n//\nexport class Relayer implements Relayer {\n  protected hostname: string\n  protected fetch: Fetch\n  protected path = '/rpc/Relayer/'\n\n  constructor(hostname: string, fetch: Fetch) {\n    this.hostname = hostname\n    this.fetch = (input: RequestInfo, init?: RequestInit) => fetch(input, init)\n  }\n\n  private url(name: string): string {\n    return this.hostname + this.path + name\n  }\n\n  ping = (headers?: object, signal?: AbortSignal): Promise<PingReturn> => {\n    return this.fetch(this.url('Ping'), createHTTPRequest({}, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  version = (headers?: object, signal?: AbortSignal): Promise<VersionReturn> => {\n    return this.fetch(this.url('Version'), createHTTPRequest({}, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            version: <Version>_data.version\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  runtimeStatus = (headers?: object, signal?: AbortSignal): Promise<RuntimeStatusReturn> => {\n    return this.fetch(this.url('RuntimeStatus'), createHTTPRequest({}, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <RuntimeStatus>_data.status\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getSequenceContext = (headers?: object, signal?: AbortSignal): Promise<GetSequenceContextReturn> => {\n    return this.fetch(this.url('GetSequenceContext'), createHTTPRequest({}, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            data: <SequenceContext>_data.data\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getChainID = (headers?: object, signal?: AbortSignal): Promise<GetChainIDReturn> => {\n    return this.fetch(this.url('GetChainID'), createHTTPRequest({}, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            chainID: <number>_data.chainID\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  sendMetaTxn = (args: SendMetaTxnArgs, headers?: object, signal?: AbortSignal): Promise<SendMetaTxnReturn> => {\n    return this.fetch(this.url('SendMetaTxn'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status,\n            txnHash: <string>_data.txnHash\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getMetaTxnNonce = (args: GetMetaTxnNonceArgs, headers?: object, signal?: AbortSignal): Promise<GetMetaTxnNonceReturn> => {\n    return this.fetch(this.url('GetMetaTxnNonce'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            nonce: <string>_data.nonce\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getMetaTxnReceipt = (args: GetMetaTxnReceiptArgs, headers?: object, signal?: AbortSignal): Promise<GetMetaTxnReceiptReturn> => {\n    return this.fetch(this.url('GetMetaTxnReceipt'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            receipt: <MetaTxnReceipt>_data.receipt\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  simulate = (args: SimulateArgs, headers?: object, signal?: AbortSignal): Promise<SimulateReturn> => {\n    return this.fetch(this.url('Simulate'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            results: <Array<SimulateResult>>_data.results\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  updateMetaTxnGasLimits = (\n    args: UpdateMetaTxnGasLimitsArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<UpdateMetaTxnGasLimitsReturn> => {\n    return this.fetch(this.url('UpdateMetaTxnGasLimits'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            payload: <string>_data.payload\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  feeTokens = (headers?: object, signal?: AbortSignal): Promise<FeeTokensReturn> => {\n    return this.fetch(this.url('FeeTokens'), createHTTPRequest({}, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            isFeeRequired: <boolean>_data.isFeeRequired,\n            tokens: <Array<FeeToken>>_data.tokens\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  feeOptions = (args: FeeOptionsArgs, headers?: object, signal?: AbortSignal): Promise<FeeOptionsReturn> => {\n    return this.fetch(this.url('FeeOptions'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            options: <Array<FeeOption>>_data.options,\n            sponsored: <boolean>_data.sponsored,\n            quote: <string>_data.quote\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getMetaTxnNetworkFeeOptions = (\n    args: GetMetaTxnNetworkFeeOptionsArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetMetaTxnNetworkFeeOptionsReturn> => {\n    return this.fetch(this.url('GetMetaTxnNetworkFeeOptions'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            options: <Array<FeeOption>>_data.options\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getMetaTransactions = (\n    args: GetMetaTransactionsArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetMetaTransactionsReturn> => {\n    return this.fetch(this.url('GetMetaTransactions'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            page: <Page>_data.page,\n            transactions: <Array<MetaTxnLog>>_data.transactions\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  sentTransactions = (args: SentTransactionsArgs, headers?: object, signal?: AbortSignal): Promise<SentTransactionsReturn> => {\n    return this.fetch(this.url('SentTransactions'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            page: <Page>_data.page,\n            transactions: <Array<Transaction>>_data.transactions\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  pendingTransactions = (\n    args: PendingTransactionsArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<PendingTransactionsReturn> => {\n    return this.fetch(this.url('PendingTransactions'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            page: <Page>_data.page,\n            transactions: <Array<Transaction>>_data.transactions\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getGasTank = (args: GetGasTankArgs, headers?: object, signal?: AbortSignal): Promise<GetGasTankReturn> => {\n    return this.fetch(this.url('GetGasTank'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            gasTank: <GasTank>_data.gasTank\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  addGasTank = (args: AddGasTankArgs, headers?: object, signal?: AbortSignal): Promise<AddGasTankReturn> => {\n    return this.fetch(this.url('AddGasTank'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status,\n            gasTank: <GasTank>_data.gasTank\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  updateGasTank = (args: UpdateGasTankArgs, headers?: object, signal?: AbortSignal): Promise<UpdateGasTankReturn> => {\n    return this.fetch(this.url('UpdateGasTank'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status,\n            gasTank: <GasTank>_data.gasTank\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getGasSponsor = (args: GetGasSponsorArgs, headers?: object, signal?: AbortSignal): Promise<GetGasSponsorReturn> => {\n    return this.fetch(this.url('GetGasSponsor'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            gasSponsor: <GasSponsor>_data.gasSponsor\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  addressGasSponsors = (\n    args: AddressGasSponsorsArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<AddressGasSponsorsReturn> => {\n    return this.fetch(this.url('AddressGasSponsors'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            page: <Page>_data.page,\n            gasSponsors: <Array<GasSponsor>>_data.gasSponsors\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  listGasSponsors = (args: ListGasSponsorsArgs, headers?: object, signal?: AbortSignal): Promise<ListGasSponsorsReturn> => {\n    return this.fetch(this.url('ListGasSponsors'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            page: <Page>_data.page,\n            gasSponsors: <Array<GasSponsor>>_data.gasSponsors\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  addGasSponsor = (args: AddGasSponsorArgs, headers?: object, signal?: AbortSignal): Promise<AddGasSponsorReturn> => {\n    return this.fetch(this.url('AddGasSponsor'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status,\n            gasSponsor: <GasSponsor>_data.gasSponsor\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  updateGasSponsor = (args: UpdateGasSponsorArgs, headers?: object, signal?: AbortSignal): Promise<UpdateGasSponsorReturn> => {\n    return this.fetch(this.url('UpdateGasSponsor'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status,\n            gasSponsor: <GasSponsor>_data.gasSponsor\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  removeGasSponsor = (args: RemoveGasSponsorArgs, headers?: object, signal?: AbortSignal): Promise<RemoveGasSponsorReturn> => {\n    return this.fetch(this.url('RemoveGasSponsor'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  reportGasSponsorUsage = (\n    args: ReportGasSponsorUsageArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<ReportGasSponsorUsageReturn> => {\n    return this.fetch(this.url('ReportGasSponsorUsage'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            gasSponsorUsage: <Array<GasSponsorUsage>>_data.gasSponsorUsage\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  nextGasTankBalanceAdjustmentNonce = (\n    args: NextGasTankBalanceAdjustmentNonceArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<NextGasTankBalanceAdjustmentNonceReturn> => {\n    return this.fetch(this.url('NextGasTankBalanceAdjustmentNonce'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            nonce: <number>_data.nonce\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  adjustGasTankBalance = (\n    args: AdjustGasTankBalanceArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<AdjustGasTankBalanceReturn> => {\n    return this.fetch(this.url('AdjustGasTankBalance'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status,\n            adjustment: <GasTankBalanceAdjustment>_data.adjustment\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getGasTankBalanceAdjustment = (\n    args: GetGasTankBalanceAdjustmentArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetGasTankBalanceAdjustmentReturn> => {\n    return this.fetch(this.url('GetGasTankBalanceAdjustment'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            adjustment: <GasTankBalanceAdjustment>_data.adjustment\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  listGasTankBalanceAdjustments = (\n    args: ListGasTankBalanceAdjustmentsArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<ListGasTankBalanceAdjustmentsReturn> => {\n    return this.fetch(this.url('ListGasTankBalanceAdjustments'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            page: <Page>_data.page,\n            adjustments: <Array<GasTankBalanceAdjustment>>_data.adjustments\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n}\n\nconst createHTTPRequest = (body: object = {}, headers: object = {}, signal: AbortSignal | null = null): object => {\n  return {\n    method: 'POST',\n    headers: { ...headers, 'Content-Type': 'application/json' },\n    body: JSON.stringify(body || {}),\n    signal\n  }\n}\n\nconst buildResponse = (res: Response): Promise<any> => {\n  return res.text().then(text => {\n    let data\n    try {\n      data = JSON.parse(text)\n    } catch (error) {\n      let message = ''\n      if (error instanceof Error) {\n        message = error.message\n      }\n      throw WebrpcBadResponseError.new({\n        status: res.status,\n        cause: `JSON.parse(): ${message}: response text: ${text}`\n      })\n    }\n    if (!res.ok) {\n      const code: number = typeof data.code === 'number' ? data.code : 0\n      throw (webrpcErrorByCode[code] || WebrpcError).new(data)\n    }\n    return data\n  })\n}\n\n//\n// Errors\n//\n\nexport class WebrpcError extends Error {\n  name: string\n  code: number\n  message: string\n  status: number\n  cause?: string\n\n  /** @deprecated Use message instead of msg. Deprecated in webrpc v0.11.0. */\n  msg: string\n\n  constructor(name: string, code: number, message: string, status: number, cause?: string) {\n    super(message)\n    this.name = name || 'WebrpcError'\n    this.code = typeof code === 'number' ? code : 0\n    this.message = message || `endpoint error ${this.code}`\n    this.msg = this.message\n    this.status = typeof status === 'number' ? status : 0\n    this.cause = cause\n    Object.setPrototypeOf(this, WebrpcError.prototype)\n  }\n\n  static new(payload: any): WebrpcError {\n    return new this(payload.error, payload.code, payload.message || payload.msg, payload.status, payload.cause)\n  }\n}\n\n// Webrpc errors\n\nexport class WebrpcEndpointError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcEndpoint',\n    code: number = 0,\n    message: string = 'endpoint error',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcEndpointError.prototype)\n  }\n}\n\nexport class WebrpcRequestFailedError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcRequestFailed',\n    code: number = -1,\n    message: string = 'request failed',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcRequestFailedError.prototype)\n  }\n}\n\nexport class WebrpcBadRouteError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcBadRoute',\n    code: number = -2,\n    message: string = 'bad route',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcBadRouteError.prototype)\n  }\n}\n\nexport class WebrpcBadMethodError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcBadMethod',\n    code: number = -3,\n    message: string = 'bad method',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcBadMethodError.prototype)\n  }\n}\n\nexport class WebrpcBadRequestError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcBadRequest',\n    code: number = -4,\n    message: string = 'bad request',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcBadRequestError.prototype)\n  }\n}\n\nexport class WebrpcBadResponseError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcBadResponse',\n    code: number = -5,\n    message: string = 'bad response',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcBadResponseError.prototype)\n  }\n}\n\nexport class WebrpcServerPanicError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcServerPanic',\n    code: number = -6,\n    message: string = 'server panic',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcServerPanicError.prototype)\n  }\n}\n\nexport class WebrpcInternalErrorError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcInternalError',\n    code: number = -7,\n    message: string = 'internal error',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcInternalErrorError.prototype)\n  }\n}\n\nexport class WebrpcClientDisconnectedError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcClientDisconnected',\n    code: number = -8,\n    message: string = 'client disconnected',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcClientDisconnectedError.prototype)\n  }\n}\n\nexport class WebrpcStreamLostError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcStreamLost',\n    code: number = -9,\n    message: string = 'stream lost',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcStreamLostError.prototype)\n  }\n}\n\nexport class WebrpcStreamFinishedError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcStreamFinished',\n    code: number = -10,\n    message: string = 'stream finished',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcStreamFinishedError.prototype)\n  }\n}\n\n// Schema errors\n\nexport class UnauthorizedError extends WebrpcError {\n  constructor(\n    name: string = 'Unauthorized',\n    code: number = 1000,\n    message: string = 'Unauthorized access',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, UnauthorizedError.prototype)\n  }\n}\n\nexport class PermissionDeniedError extends WebrpcError {\n  constructor(\n    name: string = 'PermissionDenied',\n    code: number = 1001,\n    message: string = 'Permission denied',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, PermissionDeniedError.prototype)\n  }\n}\n\nexport class MethodNotFoundError extends WebrpcError {\n  constructor(\n    name: string = 'MethodNotFound',\n    code: number = 1003,\n    message: string = 'Method not found',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, MethodNotFoundError.prototype)\n  }\n}\n\nexport class AbortedError extends WebrpcError {\n  constructor(\n    name: string = 'Aborted',\n    code: number = 1005,\n    message: string = 'Request aborted',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, AbortedError.prototype)\n  }\n}\n\nexport class InvalidArgumentError extends WebrpcError {\n  constructor(\n    name: string = 'InvalidArgument',\n    code: number = 2001,\n    message: string = 'Invalid argument',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, InvalidArgumentError.prototype)\n  }\n}\n\nexport class UnavailableError extends WebrpcError {\n  constructor(\n    name: string = 'Unavailable',\n    code: number = 2002,\n    message: string = 'Unavailable resource',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, UnavailableError.prototype)\n  }\n}\n\nexport class QueryFailedError extends WebrpcError {\n  constructor(\n    name: string = 'QueryFailed',\n    code: number = 2003,\n    message: string = 'Query failed',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, QueryFailedError.prototype)\n  }\n}\n\nexport class NotFoundError extends WebrpcError {\n  constructor(\n    name: string = 'NotFound',\n    code: number = 3000,\n    message: string = 'Resource not found',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, NotFoundError.prototype)\n  }\n}\n\nexport enum errors {\n  WebrpcEndpoint = 'WebrpcEndpoint',\n  WebrpcRequestFailed = 'WebrpcRequestFailed',\n  WebrpcBadRoute = 'WebrpcBadRoute',\n  WebrpcBadMethod = 'WebrpcBadMethod',\n  WebrpcBadRequest = 'WebrpcBadRequest',\n  WebrpcBadResponse = 'WebrpcBadResponse',\n  WebrpcServerPanic = 'WebrpcServerPanic',\n  WebrpcInternalError = 'WebrpcInternalError',\n  WebrpcClientDisconnected = 'WebrpcClientDisconnected',\n  WebrpcStreamLost = 'WebrpcStreamLost',\n  WebrpcStreamFinished = 'WebrpcStreamFinished',\n  Unauthorized = 'Unauthorized',\n  PermissionDenied = 'PermissionDenied',\n  MethodNotFound = 'MethodNotFound',\n  Aborted = 'Aborted',\n  InvalidArgument = 'InvalidArgument',\n  Unavailable = 'Unavailable',\n  QueryFailed = 'QueryFailed',\n  NotFound = 'NotFound'\n}\n\nconst webrpcErrorByCode: { [code: number]: any } = {\n  [0]: WebrpcEndpointError,\n  [-1]: WebrpcRequestFailedError,\n  [-2]: WebrpcBadRouteError,\n  [-3]: WebrpcBadMethodError,\n  [-4]: WebrpcBadRequestError,\n  [-5]: WebrpcBadResponseError,\n  [-6]: WebrpcServerPanicError,\n  [-7]: WebrpcInternalErrorError,\n  [-8]: WebrpcClientDisconnectedError,\n  [-9]: WebrpcStreamLostError,\n  [-10]: WebrpcStreamFinishedError,\n  [1000]: UnauthorizedError,\n  [1001]: PermissionDeniedError,\n  [1003]: MethodNotFoundError,\n  [1005]: AbortedError,\n  [2001]: InvalidArgumentError,\n  [2002]: UnavailableError,\n  [2003]: QueryFailedError,\n  [3000]: NotFoundError\n}\n\nexport type Fetch = (input: RequestInfo, init?: RequestInit) => Promise<Response>\n","import { ethers } from 'ethers'\nimport { FeeOption, FeeQuote, Relayer, SimulateResult } from '..'\nimport * as proto from './relayer.gen'\nimport { commons } from '@0xsequence/core'\nimport { bigintReplacer, getFetchRequest, logger, toHexString } from '@0xsequence/utils'\n\nexport { proto }\n\nconst FINAL_STATUSES = [\n  proto.ETHTxnStatus.DROPPED,\n  proto.ETHTxnStatus.SUCCEEDED,\n  proto.ETHTxnStatus.PARTIALLY_FAILED,\n  proto.ETHTxnStatus.FAILED\n]\n\nconst FAILED_STATUSES = [proto.ETHTxnStatus.DROPPED, proto.ETHTxnStatus.PARTIALLY_FAILED, proto.ETHTxnStatus.FAILED]\n\nexport interface RpcRelayerOptions {\n  provider: ethers.AbstractProvider | { url: string }\n  url: string\n  projectAccessKey?: string\n  jwtAuth?: string\n}\n\nexport function isRpcRelayerOptions(obj: any): obj is RpcRelayerOptions {\n  return (\n    obj.url !== undefined &&\n    typeof obj.url === 'string' &&\n    obj.provider !== undefined &&\n    obj.provider instanceof ethers.AbstractProvider\n  )\n}\n\nconst fetch = globalThis.fetch\n\n// TODO: rename to SequenceRelayer\nexport class RpcRelayer implements Relayer {\n  private readonly service: proto.Relayer\n  public readonly provider: ethers.Provider\n\n  constructor(public options: RpcRelayerOptions) {\n    this.service = new proto.Relayer(options.url, this._fetch)\n\n    if (options.provider instanceof ethers.AbstractProvider) {\n      this.provider = options.provider\n    } else {\n      const { jwtAuth, projectAccessKey } = this.options\n      const fetchRequest = getFetchRequest(options.provider.url, projectAccessKey, jwtAuth)\n      this.provider = new ethers.JsonRpcProvider(fetchRequest, undefined, { staticNetwork: true })\n    }\n  }\n\n  _fetch = (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n    // automatically include jwt and access key auth header to requests\n    // if its been set on the api client\n    const headers: { [key: string]: any } = {}\n\n    const { jwtAuth, projectAccessKey } = this.options\n\n    if (jwtAuth && jwtAuth.length > 0) {\n      headers['Authorization'] = `BEARER ${jwtAuth}`\n    }\n\n    if (projectAccessKey && projectAccessKey.length > 0) {\n      headers['X-Access-Key'] = projectAccessKey\n    }\n\n    // before the request is made\n    init!.headers = { ...init!.headers, ...headers }\n\n    return fetch(input, init)\n  }\n\n  async waitReceipt(\n    metaTxnId: string | commons.transaction.SignedTransactionBundle,\n    delay: number = 1000,\n    maxFails: number = 5,\n    isCancelled?: () => boolean\n  ): Promise<proto.GetMetaTxnReceiptReturn> {\n    if (typeof metaTxnId !== 'string') {\n      metaTxnId = commons.transaction.intendedTransactionID(metaTxnId)\n    }\n\n    logger.info(`[rpc-relayer/waitReceipt] waiting for ${metaTxnId}`)\n\n    let fails = 0\n\n    while (isCancelled === undefined || !isCancelled()) {\n      try {\n        const { receipt } = await this.service.getMetaTxnReceipt({ metaTxID: metaTxnId })\n\n        if (\n          receipt &&\n          receipt.txnReceipt &&\n          receipt.txnReceipt !== 'null' &&\n          FINAL_STATUSES.includes(receipt.status as proto.ETHTxnStatus)\n        ) {\n          return { receipt }\n        }\n      } catch (e) {\n        fails++\n\n        if (fails === maxFails) {\n          throw e\n        }\n      }\n\n      if (isCancelled === undefined || !isCancelled()) {\n        await new Promise(resolve => setTimeout(resolve, delay))\n      }\n    }\n\n    throw new Error(`Cancelled waiting for transaction receipt ${metaTxnId}`)\n  }\n\n  async simulate(wallet: string, ...transactions: commons.transaction.Transaction[]): Promise<SimulateResult[]> {\n    const coder = ethers.AbiCoder.defaultAbiCoder()\n    const encoded = coder.encode(\n      [commons.transaction.MetaTransactionsType],\n      [commons.transaction.sequenceTxAbiEncode(transactions)]\n    )\n    return (await this.service.simulate({ wallet, transactions: encoded })).results\n  }\n\n  async getFeeOptions(\n    address: string,\n    ...transactions: commons.transaction.Transaction[]\n  ): Promise<{ options: FeeOption[]; quote?: FeeQuote }> {\n    // NOTE/TODO: for a given `service` the feeTokens will not change between execution, so we should memoize this value\n    // for a short-period of time, perhaps for 1 day or in memory. Perhaps one day we can make this happen automatically\n    // with http cache response for this endpoint and service-worker.. lots of approaches\n    const feeTokens = await this.service.feeTokens()\n\n    if (feeTokens.isFeeRequired) {\n      const symbols = feeTokens.tokens.map(token => token.symbol).join(', ')\n      logger.info(`[rpc-relayer/getFeeOptions] relayer fees are required, accepted tokens are ${symbols}`)\n\n      const nonce = await this.getNonce(address)\n\n      if (!this.provider) {\n        logger.warn(`[rpc-relayer/getFeeOptions] provider not set, needed for stub signature`)\n        throw new Error('provider is not set')\n      }\n\n      const { options, quote } = await this.service.feeOptions({\n        wallet: address,\n        to: address,\n        data: commons.transaction.encodeBundleExecData({\n          entrypoint: address,\n          transactions,\n          nonce\n        })\n      })\n\n      logger.info(`[rpc-relayer/getFeeOptions] got refund options ${JSON.stringify(options, bigintReplacer)}`)\n      return { options, quote: { _tag: 'FeeQuote', _quote: quote } }\n    } else {\n      logger.info(`[rpc-relayer/getFeeOptions] relayer fees are not required`)\n      return { options: [] }\n    }\n  }\n\n  async getFeeOptionsRaw(\n    entrypoint: string,\n    data: ethers.BytesLike,\n    options?: {\n      simulate?: boolean\n    }\n  ): Promise<{ options: FeeOption[]; quote?: FeeQuote }> {\n    const { options: feeOptions, quote } = await this.service.feeOptions({\n      wallet: entrypoint,\n      to: entrypoint,\n      data: ethers.hexlify(data),\n      simulate: options?.simulate\n    })\n\n    return { options: feeOptions, quote: { _tag: 'FeeQuote', _quote: quote } }\n  }\n\n  async gasRefundOptions(address: string, ...transactions: commons.transaction.Transaction[]): Promise<FeeOption[]> {\n    const { options } = await this.getFeeOptions(address, ...transactions)\n    return options\n  }\n\n  async getNonce(address: string, space?: ethers.BigNumberish): Promise<ethers.BigNumberish> {\n    logger.info(`[rpc-relayer/getNonce] get nonce for wallet ${address} space: ${space}`)\n    const encodedNonce = space !== undefined ? toHexString(BigInt(space)) : undefined\n    const resp = await this.service.getMetaTxnNonce({ walletContractAddress: address, space: encodedNonce })\n    const nonce = BigInt(resp.nonce)\n    const [decodedSpace, decodedNonce] = commons.transaction.decodeNonce(nonce)\n    logger.info(`[rpc-relayer/getNonce] got next nonce for wallet ${address} ${decodedNonce} space: ${decodedSpace}`)\n    return nonce\n  }\n\n  async relay(\n    signedTxs: commons.transaction.IntendedTransactionBundle,\n    quote?: FeeQuote,\n    waitForReceipt: boolean = true\n  ): Promise<commons.transaction.TransactionResponse<RelayerTxReceipt>> {\n    logger.info(\n      `[rpc-relayer/relay] relaying signed meta-transactions ${JSON.stringify(signedTxs, bigintReplacer)} with quote ${JSON.stringify(quote, bigintReplacer)}`\n    )\n\n    let typecheckedQuote: string | undefined\n    if (quote !== undefined) {\n      if (typeof quote._quote === 'string') {\n        typecheckedQuote = quote._quote\n      } else {\n        logger.warn('[rpc-relayer/relay] ignoring invalid fee quote')\n      }\n    }\n\n    if (!this.provider) {\n      logger.warn(`[rpc-relayer/relay] provider not set, failed relay`)\n      throw new Error('provider is not set')\n    }\n\n    const data = commons.transaction.encodeBundleExecData(signedTxs)\n    const metaTxn = await this.service.sendMetaTxn({\n      call: {\n        walletAddress: signedTxs.intent.wallet,\n        contract: signedTxs.entrypoint,\n        input: data\n      },\n      quote: typecheckedQuote\n    })\n\n    logger.info(`[rpc-relayer/relay] got relay result ${JSON.stringify(metaTxn, bigintReplacer)}`)\n\n    if (waitForReceipt) {\n      return this.wait(signedTxs.intent.id)\n    } else {\n      const response = {\n        hash: signedTxs.intent.id,\n        confirmations: 0,\n        from: signedTxs.intent.wallet,\n        wait: (_confirmations?: number): Promise<ethers.TransactionReceipt | null> => Promise.reject(new Error('impossible'))\n      }\n\n      const wait = async (confirmations?: number): Promise<ethers.TransactionReceipt | null> => {\n        if (!this.provider) {\n          throw new Error('cannot wait for receipt, relayer has no provider set')\n        }\n\n        const waitResponse = await this.wait(signedTxs.intent.id)\n        const transactionHash = waitResponse.receipt?.transactionHash\n\n        if (!transactionHash) {\n          throw new Error('cannot wait for receipt, unknown native transaction hash')\n        }\n\n        Object.assign(response, waitResponse)\n\n        return this.provider.waitForTransaction(transactionHash, confirmations)\n      }\n\n      response.wait = wait\n\n      // NOTE: we just ignore these errors which come from the private fields\n      // of ethers-v6 .. but, we should probably rework this instead..\n      // @ts-ignore\n      return response as commons.transaction.TransactionResponse\n    }\n  }\n\n  async wait(\n    metaTxnId: string | commons.transaction.SignedTransactionBundle,\n    timeout?: number,\n    delay: number = 1000,\n    maxFails: number = 5\n  ): Promise<commons.transaction.TransactionResponse<RelayerTxReceipt>> {\n    let timedOut = false\n\n    const { receipt } = await (timeout !== undefined\n      ? Promise.race([\n          this.waitReceipt(metaTxnId, delay, maxFails, () => timedOut),\n          new Promise<proto.GetMetaTxnReceiptReturn>((_, reject) =>\n            setTimeout(() => {\n              timedOut = true\n              reject(`Timeout waiting for transaction receipt ${metaTxnId}`)\n            }, timeout)\n          )\n        ])\n      : this.waitReceipt(metaTxnId, delay, maxFails))\n\n    if (!receipt.txnReceipt || FAILED_STATUSES.includes(receipt.status as proto.ETHTxnStatus)) {\n      throw new MetaTransactionResponseException(receipt)\n    }\n\n    const txReceipt = JSON.parse(receipt.txnReceipt) as RelayerTxReceipt\n\n    // NOTE: we just ignore these errors which come from the private fields\n    // of ethers-v6 .. but, we should probably rework this instead..\n    // @ts-ignore\n    return {\n      blockHash: txReceipt.blockHash,\n      blockNumber: Number(txReceipt.blockNumber),\n      confirmations: 1,\n      from: typeof metaTxnId === 'string' ? undefined : metaTxnId.intent.wallet,\n      hash: txReceipt.transactionHash,\n      raw: receipt.txnReceipt,\n      receipt: txReceipt, // extended type which is Sequence-specific. Contains the decoded metaTxReceipt\n      wait: async (confirmations?: number) => this.provider!.waitForTransaction(txReceipt.transactionHash, confirmations)\n    } as commons.transaction.TransactionResponse\n  }\n}\n\nclass MetaTransactionResponseException {\n  constructor(public receipt: proto.MetaTxnReceipt) {}\n}\n\nexport type RelayerTxReceipt = {\n  blockHash: string\n  blockNumber: string\n  contractAddress: string\n  cumulativeGasUsed: string\n  gasUsed: string\n  logs: {\n    address: string\n    blockHash: string\n    blockNumber: string\n    data: string\n    logIndex: string\n    removed: boolean\n    topics: string[]\n    transactionHash: string\n    transactionIndex: string\n  }[]\n  logsBloom: string\n  root: string\n  status: string\n  transactionHash: string\n  transactionIndex: string\n}\n","import { ethers } from 'ethers'\nimport { proto } from './rpc-relayer'\n\nimport { commons } from '@0xsequence/core'\n\nexport interface Relayer {\n  // simulate returns the execution results for a list of transactions.\n  simulate(wallet: string, ...transactions: commons.transaction.Transaction[]): Promise<SimulateResult[]>\n\n  // getFeeOptions returns the fee options that the relayer will accept as payment.\n  // If a quote is returned, it may be passed back to the relayer for dispatch.\n  getFeeOptions(\n    address: string,\n    ...transactions: commons.transaction.Transaction[]\n  ): Promise<{ options: FeeOption[]; quote?: FeeQuote }>\n\n  // getFeeOptionsRaw returns the fee options that the relayer will accept as payment.\n  // If a quote is returned, it may be passed back to the relayer for dispatch.\n  // It doesn't make any assumptions about the transaction format.\n  getFeeOptionsRaw(\n    entrypoint: string,\n    data: ethers.BytesLike,\n    options?: {\n      simulate?: boolean\n    }\n  ): Promise<{ options: FeeOption[]; quote?: FeeQuote }>\n\n  // gasRefundOptions returns the transactions which can be included to refund a\n  // relayer for submitting your transaction to a network.\n  gasRefundOptions(address: string, ...transactions: commons.transaction.Transaction[]): Promise<FeeOption[]>\n\n  // getNonce returns the transaction count/nonce for a wallet, encoded with nonce space.\n  // If space is undefined, the relayer can choose a nonce space to encode the result with.\n  // Otherwise, the relayer must return a nonce encoded for the given nonce space.\n  getNonce(address: string, space?: ethers.BigNumberish, blockTag?: ethers.BlockTag): Promise<ethers.BigNumberish>\n\n  // relayer will submit the transaction(s) to the network and return the transaction response.\n  // The quote should be the one returned from getFeeOptions, if any.\n  // waitForReceipt must default to true.\n  relay(\n    signedTxs: commons.transaction.IntendedTransactionBundle,\n    quote?: FeeQuote,\n    waitForReceipt?: boolean\n  ): Promise<commons.transaction.TransactionResponse>\n\n  // wait for transaction confirmation\n  // timeout is the maximum time to wait for the transaction response\n  // delay is the polling interval, i.e. the time to wait between requests\n  // maxFails is the maximum number of hard failures to tolerate before giving up\n  wait(\n    metaTxnId: string | commons.transaction.SignedTransactionBundle,\n    timeout?: number,\n    delay?: number,\n    maxFails?: number\n  ): Promise<commons.transaction.TransactionResponse>\n}\n\nexport * from './local-relayer'\nexport * from './provider-relayer'\nexport * from './rpc-relayer'\nexport { proto as RpcRelayerProto } from './rpc-relayer'\nexport type SimulateResult = proto.SimulateResult\nexport type FeeOption = proto.FeeOption\n\n// A fee quote is simply an opaque value that can be obtained via Relayer.getFeeOptions(), and\n// returned back to the same relayer via Relayer.relay(). Fee quotes should be treated as an\n// implementation detail of the relayer that produces them.\n//\n// This interface exists for type-safety purposes to protect against passing non-FeeQuotes to\n// Relayer.relay(), or any other functions that call it indirectly (e.g. Account.sendTransaction).\nexport interface FeeQuote {\n  _tag: 'FeeQuote'\n  _quote: unknown\n}\n\nexport function isRelayer(cand: any): cand is Relayer {\n  return (\n    typeof cand === 'object' &&\n    typeof cand.simulate === 'function' &&\n    typeof cand.getFeeOptions === 'function' &&\n    typeof cand.gasRefundOptions === 'function' &&\n    typeof cand.getNonce === 'function' &&\n    typeof cand.relay === 'function' &&\n    typeof cand.wait === 'function'\n  )\n}\n","import { ethers } from 'ethers'\nimport { NetworkConfig, ChainIdLike } from '@0xsequence/network'\nimport { FeeQuote, Relayer } from '@0xsequence/relayer'\nimport { commons } from '@0xsequence/core'\n\n// TODO: Move to account ?\nexport abstract class Signer extends ethers.AbstractSigner {\n  static isSequenceSigner(cand: any): cand is Signer {\n    return isSequenceSigner(cand)\n  }\n\n  abstract getProvider(chainId?: number): Promise<ethers.JsonRpcProvider | undefined>\n  abstract getRelayer(chainId?: number): Promise<Relayer | undefined>\n\n  // abstract getWalletContext(): Promise<WalletContext>\n  abstract getWalletConfig(chainId?: ChainIdLike): Promise<commons.config.Config>\n  // abstract getWalletState(chainId?: ChainIdLike): Promise<WalletState[]>\n\n  abstract getNetworks(): Promise<NetworkConfig[]>\n\n  // getSigners returns a list of available / attached signers to the interface. Note: you need\n  // enough signers in order to meet the signing threshold that satisfies a wallet config.\n  abstract getSigners(): Promise<string[]>\n\n  // signMessage .....\n  abstract signMessage(\n    message: ethers.BytesLike,\n    chainId?: ChainIdLike,\n    allSigners?: boolean,\n    isDigest?: boolean\n  ): Promise<string>\n\n  // signTypedData ..\n  abstract signTypedData(\n    domain: ethers.TypedDataDomain,\n    types: Record<string, Array<ethers.TypedDataField>>,\n    message: Record<string, any>,\n    chainId?: ChainIdLike,\n    allSigners?: boolean\n  ): Promise<string>\n\n  // sendTransaction takes an unsigned transaction, or list of unsigned transactions, and then has it signed by\n  // the signer, and finally sends it to the relayer for submission to an Ethereum network.\n  abstract sendTransaction(\n    transaction: commons.transaction.Transactionish,\n    chainId?: ChainIdLike,\n    allSigners?: boolean,\n    quote?: FeeQuote\n  ): Promise<commons.transaction.TransactionResponse>\n\n  // sendTransactionBatch provides the ability to send an array/batch of transactions as a single native on-chain transaction.\n  // This method works identically to sendTransaction but offers a different syntax for convience, readability and type clarity.\n  abstract sendTransactionBatch(\n    transactions: ethers.TransactionRequest[] | commons.transaction.Transaction[],\n    chainId?: ChainIdLike,\n    allSigners?: boolean,\n    quote?: FeeQuote\n  ): Promise<commons.transaction.TransactionResponse>\n\n  // Low-level methods to sign and send/relayer signed transactions separately. The combination of these methods\n  // is like calling just sendTransaction(..) above. Also note that sendSignedTransactions is identical\n  // to calling getRelayer().relay(signedTxs), but included in this interface for convenience.\n  abstract signTransactions(\n    txs: commons.transaction.Transactionish,\n    chainId?: ChainIdLike,\n    allSigners?: boolean\n  ): Promise<commons.transaction.SignedTransactionBundle>\n  abstract sendSignedTransactions(\n    signedTxs: commons.transaction.SignedTransactionBundle,\n    chainId?: ChainIdLike,\n    quote?: FeeQuote\n  ): Promise<commons.transaction.TransactionResponse>\n\n  // updateConfig will update the wallet image hash on-chain, aka deploying a smart wallet config to chain. If\n  // newConfig argument is undefined, then it will use the existing config. Config contents will also be\n  // automatically published to the authChain when updating the config image hash.\n  abstract updateConfig(\n    newConfig?: commons.config.Config\n  ): Promise<[commons.config.Config, commons.transaction.TransactionResponse | undefined]>\n\n  // publishConfig will store the raw WalletConfig object on-chain, note: this may be expensive,\n  // and is only necessary for config data-availability, in case of Account the contents are published\n  // to the authChain.\n  abstract publishConfig(): Promise<commons.transaction.TransactionResponse | undefined>\n\n  // isDeployed ..\n  abstract isDeployed(chainId?: ChainIdLike): Promise<boolean>\n}\n\nexport type SignedTransactionsCallback = (signedTxs: commons.transaction.SignedTransactionBundle, metaTxnHash: string) => void\n\nexport function isSequenceSigner(signer: any): signer is Signer {\n  const cand = signer as Signer\n  return cand && cand.updateConfig !== undefined && cand.publishConfig !== undefined && cand.getWalletConfig !== undefined\n}\n\n// TODO: move to error.ts, along with others..\nexport class InvalidSigner extends Error {}\n\nexport class NotEnoughSigners extends Error {}\n","import { ethers } from 'ethers'\n\nexport async function resolveArrayProperties<T>(object: Readonly<T> | Readonly<T>[]): Promise<T> {\n  if (Array.isArray(object)) {\n    // T must include array type\n    return Promise.all(object.map(o => ethers.resolveProperties(o))) as any\n  }\n\n  return ethers.resolveProperties(object)\n}\n\nexport async function findLatestLog(provider: ethers.Provider, filter: ethers.Filter): Promise<ethers.Log | undefined> {\n  const toBlock = filter.toBlock === 'latest' ? await provider.getBlockNumber() : (filter.toBlock as number)\n  const fromBlock = filter.fromBlock as number\n\n  try {\n    const logs = await provider.getLogs({ ...filter, toBlock: toBlock })\n    return logs.length === 0 ? undefined : logs[logs.length - 1]\n  } catch (e) {\n    // TODO Don't assume all errors are bad\n    const pivot = Math.floor((toBlock - fromBlock) / 2 + fromBlock)\n    const nhalf = await findLatestLog(provider, { ...filter, fromBlock: pivot, toBlock: toBlock })\n    if (nhalf !== undefined) return nhalf\n    return findLatestLog(provider, { ...filter, fromBlock: fromBlock, toBlock: pivot })\n  }\n}\n","import { ethers } from 'ethers'\nimport { commons } from '@0xsequence/core'\nimport { Status } from '../orchestrator'\n\nexport interface SapientSigner {\n  getAddress(): Promise<string>\n\n  buildDeployTransaction(metadata: object): Promise<commons.transaction.TransactionBundle | undefined>\n\n  /**\n   * Get signed transactions to be included in the next request.\n   */\n  predecorateSignedTransactions(metadata: object): Promise<commons.transaction.SignedTransactionBundle[]>\n\n  /**\n   * Modify the transaction bundle before it is sent.\n   */\n  decorateTransactions(\n    bundle: commons.transaction.IntendedTransactionBundle,\n    metadata: object\n  ): Promise<commons.transaction.IntendedTransactionBundle>\n\n  /**\n   * Request a signature from the signer.\n   */\n  sign(message: ethers.BytesLike, metadata: object): Promise<ethers.BytesLike>\n\n  /**\n   * Notify the signer of a status change.\n   */\n  notifyStatusChange(id: string, status: Status, metadata: object): void\n\n  suffix(): ethers.BytesLike\n}\n\nexport function isSapientSigner(signer: ethers.Signer | SapientSigner): signer is SapientSigner {\n  return (\n    (signer as SapientSigner).getAddress !== undefined &&\n    (signer as SapientSigner).buildDeployTransaction !== undefined &&\n    (signer as SapientSigner).predecorateSignedTransactions !== undefined &&\n    (signer as SapientSigner).decorateTransactions !== undefined &&\n    (signer as SapientSigner).sign !== undefined &&\n    (signer as SapientSigner).notifyStatusChange !== undefined\n  )\n}\n","import { ethers } from 'ethers'\nimport { commons } from '@0xsequence/core'\nimport { Status } from '../orchestrator'\nimport { SapientSigner } from './signer'\n\nexport class SignerWrapper implements SapientSigner {\n  constructor(\n    public signer: ethers.Signer,\n    public eoa: boolean = true\n  ) {}\n\n  getAddress(): Promise<string> {\n    return this.signer.getAddress()\n  }\n\n  async buildDeployTransaction(_metadata: object): Promise<commons.transaction.TransactionBundle | undefined> {\n    // Wrapped signers don't require deployment\n    return\n  }\n\n  async predecorateSignedTransactions(_metadata: object): Promise<commons.transaction.SignedTransactionBundle[]> {\n    return []\n  }\n\n  async decorateTransactions(\n    bundle: commons.transaction.IntendedTransactionBundle,\n    _metadata: object\n  ): Promise<commons.transaction.IntendedTransactionBundle> {\n    return bundle\n  }\n\n  sign(message: ethers.BytesLike): Promise<ethers.BytesLike> {\n    return this.signer.signMessage(message)\n  }\n\n  notifyStatusChange(_i: string, _s: Status, _m: object): void {}\n\n  suffix(): ethers.BytesLike {\n    return new Uint8Array([2])\n  }\n}\n","import { ethers } from 'ethers'\nimport { commons } from '@0xsequence/core'\nimport { isSapientSigner, SapientSigner } from './signers/signer'\nimport { SignerWrapper } from './signers/wrapper'\n\nexport type Status = {\n  ended: boolean\n  message: ethers.BytesLike\n  signers: { [signer: string]: SignerStatus }\n}\n\nexport enum SignerState {\n  INITIAL,\n  SIGNING,\n  SIGNED,\n  ERROR\n}\n\nexport type SignerStatus =\n  | { state: SignerState.INITIAL }\n  | { state: SignerState.SIGNING; request: Promise<ethers.BytesLike> }\n  | { state: SignerState.SIGNED; signature: ethers.BytesLike; suffix: ethers.BytesLike }\n  | { state: SignerState.ERROR; error: any }\n\nexport function isSignerStatusPending(\n  status?: SignerStatus\n): status is undefined | { state: SignerState.INITIAL } | { state: SignerState.SIGNING; request: Promise<ethers.BytesLike> } {\n  return status === undefined || status.state === SignerState.INITIAL || status.state === SignerState.SIGNING\n}\n\nexport interface SignatureOrchestrator {\n  getSigners(): Promise<string[]>\n\n  signMessage(args: {\n    candidates: string[]\n    message: ethers.BytesLike\n    metadata: object\n    callback: (status: Status, onNewMetadata: (metadata: object) => void) => boolean\n  }): Promise<Status>\n\n  buildDeployTransaction(metadata: object): Promise<commons.transaction.TransactionBundle | undefined>\n\n  predecorateSignedTransactions(metadata?: object): Promise<commons.transaction.SignedTransactionBundle[]>\n\n  decorateTransactions(\n    bundle: commons.transaction.IntendedTransactionBundle,\n    metadata?: object\n  ): Promise<commons.transaction.IntendedTransactionBundle>\n}\n\n/**\n * Orchestrates actions of collective signers.\n * This includes the signing of a single digests and transactions by multiple signers.\n * It can provide internal visibility of the signing process, and it also\n * provides the internal signers with additional information about the\n * message being signed. Transaction decoration can be used to ensure on-chain state\n * is correctly managed during the signing process.\n */\nexport class Orchestrator {\n  private observers: ((status: Status, metadata: object) => void)[] = []\n  private signers: SapientSigner[] = []\n\n  private count = 0\n\n  constructor(\n    signers: (ethers.Signer | SapientSigner)[],\n    public tag: string = Orchestrator.randomTag()\n  ) {\n    this.setSigners(signers)\n  }\n\n  private static randomTag(): string {\n    return `default-${ethers.hexlify(ethers.randomBytes(8)).slice(2)}`\n  }\n\n  private pullId(): string {\n    return `${this.tag}-${this.count++}`\n  }\n\n  setSigners(signers: (ethers.Signer | SapientSigner)[]) {\n    this.signers = signers.map(s => (isSapientSigner(s) ? s : new SignerWrapper(s)))\n  }\n\n  async getSigners(): Promise<string[]> {\n    return Promise.all(this.signers.map(async s => s.getAddress()))\n  }\n\n  subscribe(observer: (status: Status, metadata: object) => void): () => void {\n    this.observers.push(observer)\n    return () => {\n      this.observers = this.observers.filter(o => o !== observer)\n    }\n  }\n\n  private async notifyObservers(id: string, status: Status, metadata: object) {\n    await Promise.all([\n      ...this.signers.map(async signer => signer.notifyStatusChange(id, status, metadata)),\n      ...this.observers.map(async observer => observer(status, metadata))\n    ])\n  }\n\n  async buildDeployTransaction(metadata: object): Promise<commons.transaction.TransactionBundle | undefined> {\n    let bundle: commons.transaction.TransactionBundle | undefined\n    for (const signer of this.signers) {\n      const newBundle = await signer.buildDeployTransaction(metadata)\n      if (bundle === undefined) {\n        // Use first bundle as base\n        bundle = newBundle\n      } else if (newBundle?.transactions) {\n        // Combine deploy transactions\n        bundle.transactions = newBundle.transactions.concat(bundle.transactions)\n      }\n    }\n    return bundle\n  }\n\n  async predecorateSignedTransactions(metadata?: object): Promise<commons.transaction.SignedTransactionBundle[]> {\n    const output: commons.transaction.SignedTransactionBundle[] = []\n    for (const signer of this.signers) {\n      output.push(...(await signer.predecorateSignedTransactions(metadata ?? {})))\n    }\n    return output\n  }\n\n  async decorateTransactions(\n    bundle: commons.transaction.IntendedTransactionBundle,\n    metadata?: object\n  ): Promise<commons.transaction.IntendedTransactionBundle> {\n    for (const signer of this.signers) {\n      bundle = await signer.decorateTransactions(bundle, metadata ?? {})\n    }\n    return bundle\n  }\n\n  signMessage(args: {\n    candidates?: string[]\n    message: ethers.BytesLike\n    metadata?: object\n    callback?: (status: Status, onNewMetadata: (metadata: object) => void) => boolean\n  }): Promise<Status> {\n    const id = this.pullId()\n\n    return new Promise(async resolve => {\n      const { message, metadata, callback, candidates } = args\n      const status: Status = { ended: false, message, signers: {} }\n      let lastMetadata = metadata ?? {}\n\n      const onNewMetadata = (newMetadata: object) => {\n        lastMetadata = newMetadata\n        this.notifyObservers(id, status, lastMetadata)\n      }\n\n      const onStatusUpdate = () => {\n        try {\n          this.notifyObservers(id, status, lastMetadata)\n\n          const pending = Object.entries(status.signers).filter(([_, s]) => isSignerStatusPending(s))\n          if ((callback && callback(status, onNewMetadata)) || pending.length === 0) {\n            status.ended = true\n            resolve(status)\n            this.notifyObservers(id, status, lastMetadata)\n            return\n          }\n        } catch (e) {\n          console.error('Error while notifying observers', e)\n        }\n      }\n\n      // we only call signers that are found in `candidates`\n      // if `candidates` is undefined, we call all signers\n      let signers = this.signers\n      if (candidates) {\n        const addresses = await Promise.all(this.signers.map(async s => s.getAddress()))\n        signers = this.signers.filter((_, i) => candidates.includes(addresses[i]))\n      }\n\n      // build callbacks object\n      const accepted = await Promise.allSettled(\n        signers.map(async s => {\n          const saddr = await s.getAddress()\n\n          status.signers[saddr] = {\n            state: SignerState.SIGNING,\n            request: s\n              .sign(message, metadata ?? {})\n              .then(signature => {\n                const suffix = s.suffix()\n                status.signers[saddr] = { state: SignerState.SIGNED, signature, suffix }\n                onStatusUpdate()\n                return signature\n              })\n              .catch(error => {\n                status.signers[saddr] = { state: SignerState.ERROR, error }\n                onStatusUpdate()\n                throw error\n              })\n          }\n        })\n      )\n\n      for (let i = 0; i < accepted.length; i++) {\n        const signer = this.signers[i]\n        const promise = accepted[i]\n\n        if (promise.status === 'rejected') {\n          const address = await signer.getAddress()\n          console.warn(`signer ${address} rejected the request: ${promise.reason}`)\n          status.signers[address] = {\n            state: SignerState.ERROR,\n            error: new Error(`signer ${address} rejected the request: ${promise.reason}`)\n          }\n        }\n      }\n\n      onStatusUpdate()\n    })\n  }\n}\n","import { ethers } from 'ethers'\nimport { commons, v1, v2 } from '@0xsequence/core'\nimport { SignatureOrchestrator, SignerState, Status } from '@0xsequence/signhub'\nimport { encodeTypedDataDigest, subDigestOf } from '@0xsequence/utils'\nimport { FeeQuote, Relayer } from '@0xsequence/relayer'\nimport { walletContracts } from '@0xsequence/abi'\n\nimport { resolveArrayProperties } from './utils'\n\nexport type WalletOptions<\n  T extends commons.signature.Signature<Y>,\n  Y extends commons.config.Config,\n  Z extends commons.signature.UnrecoveredSignature\n> = {\n  // Sequence version configurator\n  coders: {\n    config: commons.config.ConfigCoder<Y>\n    signature: commons.signature.SignatureCoder<Y, T, Z>\n  }\n\n  context: commons.context.WalletContext\n  config: Y\n\n  chainId: ethers.BigNumberish\n  address: string\n\n  orchestrator: SignatureOrchestrator\n  reader?: commons.reader.Reader\n\n  provider?: ethers.Provider\n  relayer?: Relayer\n}\n\nconst statusToSignatureParts = (status: Status) => {\n  const parts = new Map<string, commons.signature.SignaturePart>()\n\n  for (const signer of Object.keys(status.signers)) {\n    const value = status.signers[signer]\n    if (value.state === SignerState.SIGNED) {\n      const suffix = ethers.getBytes(value.suffix)\n      const suffixed = ethers.solidityPacked(['bytes', 'bytes'], [value.signature, suffix])\n\n      parts.set(signer, { signature: suffixed, isDynamic: suffix.length !== 1 || suffix[0] !== 2 })\n    }\n  }\n\n  return parts\n}\n\nexport type WalletV2 = Wallet<v2.config.WalletConfig, v2.signature.Signature, v2.signature.UnrecoveredSignature>\nexport type WalletV1 = Wallet<v1.config.WalletConfig, v1.signature.Signature, v1.signature.UnrecoveredSignature>\n\n/**\n * The wallet is the minimum interface to interact with a single Sequence wallet/contract.\n * it doesn't have any knowledge of any on-chain state, instead it relies solely on the information\n * provided by the user. This building block is used to create higher level abstractions.\n *\n * Wallet can also be used to create Sequence wallets, but it's not recommended to use it directly.\n */\nexport class Wallet<\n  Y extends commons.config.Config = commons.config.Config,\n  T extends commons.signature.Signature<Y> = commons.signature.Signature<Y>,\n  Z extends commons.signature.UnrecoveredSignature = commons.signature.UnrecoveredSignature\n> extends ethers.AbstractSigner {\n  public context: commons.context.WalletContext\n  public config: Y\n  public address: string\n  public chainId: ethers.BigNumberish\n\n  public relayer?: Relayer\n\n  public coders: {\n    signature: commons.signature.SignatureCoder<Y, T, Z>\n    config: commons.config.ConfigCoder<Y>\n  }\n\n  private orchestrator: SignatureOrchestrator\n  private _reader?: commons.reader.Reader\n\n  constructor(options: WalletOptions<T, Y, Z>) {\n    if (BigInt(options.chainId) === 0n && !options.coders.signature.supportsNoChainId) {\n      throw new Error(`Sequence version ${options.config.version} doesn't support chainId 0`)\n    }\n\n    super(options.provider ?? null)\n\n    this.context = options.context\n    this.config = options.config\n    this.orchestrator = options.orchestrator\n    this.coders = options.coders\n    this.address = options.address\n    this.chainId = options.chainId\n    this.relayer = options.relayer\n\n    this._reader = options.reader\n  }\n\n  static newWallet<\n    Y extends commons.config.Config = commons.config.Config,\n    T extends commons.signature.Signature<Y> = commons.signature.Signature<Y>,\n    Z extends commons.signature.UnrecoveredSignature = commons.signature.UnrecoveredSignature\n  >(options: Omit<WalletOptions<T, Y, Z>, 'address'>): Wallet<Y, T, Z> {\n    const address = commons.context.addressOf(options.context, options.coders.config.imageHashOf(options.config))\n    return new Wallet({ ...options, address })\n  }\n\n  reader(): commons.reader.Reader {\n    if (this._reader) return this._reader\n    if (!this.provider) throw new Error('Wallet status provider requires a provider')\n    return new commons.reader.OnChainReader(this.provider)\n  }\n\n  setConfig(config: Y) {\n    this.config = config\n  }\n\n  setOrchestrator(orchestrator: SignatureOrchestrator) {\n    this.orchestrator = orchestrator\n  }\n\n  setAddress(address: string) {\n    this.address = address\n  }\n\n  getSigners(): Promise<string[]> {\n    return this.orchestrator.getSigners()\n  }\n\n  async getAddress(): Promise<string> {\n    return this.address\n  }\n\n  async decorateTransactions(\n    bundle: commons.transaction.IntendedTransactionBundle\n  ): Promise<commons.transaction.IntendedTransactionBundle> {\n    // Allow children to decorate\n    const decorated = await this.orchestrator.decorateTransactions(bundle)\n\n    if (await this.reader().isDeployed(this.address)) {\n      // Deployed - No decorating at this level\n      return decorated\n    }\n\n    const transactions: commons.transaction.Transaction[] = [\n      {\n        to: decorated.entrypoint,\n        data: commons.transaction.encodeBundleExecData(decorated),\n        revertOnError: true\n      }\n    ]\n\n    // Add deployment tx\n    const deployTx = await this.buildDeployTransaction()\n    if (deployTx) {\n      transactions.unshift(...deployTx.transactions)\n    }\n\n    // TODO: If entrypoint is guestModule we can flatten the bundle\n    // and avoid calling guestModule twice\n\n    return {\n      entrypoint: this.context.guestModule,\n      chainId: this.chainId,\n      intent: decorated.intent,\n      transactions\n    }\n  }\n\n  async buildDeployTransaction(\n    metadata?: commons.WalletDeployMetadata\n  ): Promise<commons.transaction.TransactionBundle | undefined> {\n    if (metadata?.ignoreDeployed && (await this.reader().isDeployed(this.address))) {\n      return\n    }\n\n    const imageHash = this.coders.config.imageHashOf(this.config)\n\n    if (commons.context.addressOf(this.context, imageHash) !== this.address) {\n      throw new Error(`First address of config ${imageHash} doesn't match wallet address ${this.address}`)\n    }\n\n    const bundle = Wallet.buildDeployTransaction(this.context, imageHash)\n    if (metadata?.includeChildren) {\n      const childBundle = await this.orchestrator.buildDeployTransaction(metadata)\n      if (childBundle) {\n        // Deploy children first\n        bundle.transactions = childBundle.transactions.concat(bundle.transactions)\n      }\n    }\n    return bundle\n  }\n\n  async deploy(metadata?: commons.WalletDeployMetadata): Promise<ethers.TransactionResponse | undefined> {\n    const deployTx = await this.buildDeployTransaction(metadata)\n    if (deployTx === undefined) {\n      // Already deployed\n      return\n    }\n    if (!this.relayer) throw new Error('Wallet deploy requires a relayer')\n    return this.relayer.relay({\n      ...deployTx,\n      chainId: this.chainId,\n      intent: {\n        id: ethers.hexlify(ethers.randomBytes(32)),\n        wallet: this.address\n      }\n    })\n  }\n\n  static buildDeployTransaction(\n    context: commons.context.WalletContext,\n    imageHash: string\n  ): commons.transaction.TransactionBundle {\n    const factoryInterface = new ethers.Interface(walletContracts.factory.abi)\n\n    return {\n      entrypoint: context.guestModule,\n      transactions: [\n        {\n          to: context.factory,\n          data: factoryInterface.encodeFunctionData(factoryInterface.getFunction('deploy')!, [context.mainModule, imageHash]),\n          gasLimit: 100000,\n          delegateCall: false,\n          revertOnError: true,\n          value: 0\n        }\n      ]\n    }\n  }\n\n  async buildUpdateConfigurationTransaction(config: Y): Promise<commons.transaction.TransactionBundle> {\n    if (this.coders.config.update.isKindUsed) {\n      const implementation = await this.reader().implementation(this.address)\n      const isLaterUpdate = implementation && implementation === this.context.mainModuleUpgradable\n      return this.coders.config.update.buildTransaction(this.address, config, this.context, isLaterUpdate ? 'later' : 'first')\n    }\n\n    return this.coders.config.update.buildTransaction(this.address, config, this.context)\n  }\n\n  async getNonce(space: ethers.BigNumberish = 0): Promise<number> {\n    const nonce = await this.reader().nonce(this.address, space)\n    if (nonce === undefined) throw new Error('Unable to determine nonce')\n    return Number(nonce)\n  }\n\n  async signDigest(digest: ethers.BytesLike, metadata?: object): Promise<string> {\n    // The subdigest may be statically defined on the configuration\n    // in that case we just encode the proof, no need to sign anything\n    const subdigest = subDigestOf(this.address, this.chainId, digest)\n    if (this.coders.config.hasSubdigest(this.config, subdigest)) {\n      return this.coders.signature.encodeSigners(this.config, new Map(), [subdigest], this.chainId).encoded\n    }\n\n    // We build the metadata object, this contains additional information\n    // that may be needed to sign the digest (by the other signers, or by the guard)\n    const childMetadata: commons.WalletSignRequestMetadata = {\n      ...metadata, // Keep other metadata fields\n      digest,\n      chainId: this.chainId,\n      address: this.address,\n      config: this.config\n    }\n\n    // We ask the orchestrator to sign the digest, as soon as we have enough signature parts\n    // to reach the threshold we returns true, that means the orchestrator will stop asking\n    // and we can encode the final signature\n    const subdigestBytes = ethers.getBytes(subdigest)\n    const signature = await this.orchestrator.signMessage({\n      candidates: this.coders.config.signersOf(this.config).map(s => s.address),\n      message: subdigestBytes,\n      metadata: childMetadata,\n      callback: (status: Status, onNewMetadata: (_metadata: object) => void): boolean => {\n        const parts = statusToSignatureParts(status)\n\n        const newMetadata = { ...childMetadata, parts }\n        onNewMetadata(newMetadata)\n\n        return this.coders.signature.hasEnoughSigningPower(this.config, parts)\n      }\n    })\n\n    const parts = statusToSignatureParts(signature)\n    return this.coders.signature.encodeSigners(this.config, parts, [], this.chainId).encoded\n  }\n\n  signMessage(message: ethers.BytesLike): Promise<string> {\n    return this.signDigest(ethers.keccak256(message), { message })\n  }\n\n  // XXX This method is not implemented in the original code but required by the AbstractSigner interface\n  signTypedData(\n    domain: ethers.TypedDataDomain,\n    types: Record<string, ethers.TypedDataField[]>,\n    value: Record<string, any>\n  ): Promise<string> {\n    const digest = encodeTypedDataDigest({ domain, types, message: value })\n    return this.signDigest(digest)\n  }\n\n  signTransactionBundle(bundle: commons.transaction.TransactionBundle): Promise<commons.transaction.SignedTransactionBundle> {\n    if (bundle.entrypoint !== this.address) {\n      throw new Error(`Invalid entrypoint: ${bundle.entrypoint} !== ${this.address}`)\n    }\n\n    return this.signTransactions(bundle.transactions, bundle.nonce)\n  }\n\n  async fetchNonceOrSpace(\n    nonce?: ethers.BigNumberish | { space: ethers.BigNumberish } | { serial: boolean }\n  ): Promise<ethers.BigNumberish> {\n    let spaceValue\n\n    if (nonce && (nonce as any).space !== undefined) {\n      // specified nonce \"space\"\n      spaceValue = BigInt((nonce as any).space)\n    } else if (nonce === undefined) {\n      // default is random, aka parallel\n      return this.randomNonce()\n    } else if (nonce && (nonce as any).serial === true) {\n      // next nonce determined from the chain\n      spaceValue = 0\n    } else {\n      // specific nonce is used\n      return nonce as ethers.BigNumberish\n    }\n\n    const resultNonce = await this.reader().nonce(this.address, spaceValue)\n    if (resultNonce === undefined) throw new Error('Unable to determine nonce')\n    return commons.transaction.encodeNonce(spaceValue, resultNonce)\n  }\n\n  // Generate nonce with random space\n  randomNonce(): ethers.BigNumberish {\n    const randomNonceSpace = BigInt(ethers.hexlify(ethers.randomBytes(12)))\n    const randomNonce = commons.transaction.encodeNonce(randomNonceSpace, 0)\n    return randomNonce\n  }\n\n  async signTransactions(\n    txs: commons.transaction.Transactionish,\n    nonce?: ethers.BigNumberish | { space: ethers.BigNumberish } | { serial: boolean },\n    metadata?: object\n  ): Promise<commons.transaction.SignedTransactionBundle> {\n    const transaction = await resolveArrayProperties<commons.transaction.Transactionish>(txs)\n    const transactions = commons.transaction.fromTransactionish(this.address, transaction)\n\n    // NOTICE: If the `transactions` list is empty, then we add a dummy transaction\n    // otherwise the `TxExecuted` event will not be emitted, and we won't be able to\n    // find the transaction hash\n    if (transactions.length === 0) {\n      transactions.push({\n        to: this.address,\n        data: '0x',\n        value: 0,\n        gasLimit: 0,\n        delegateCall: false,\n        revertOnError: true\n      })\n    }\n\n    const defaultedNonce = await this.fetchNonceOrSpace(nonce)\n    const digest = commons.transaction.digestOfTransactions(defaultedNonce, transactions)\n    const meta = {\n      digest,\n      transactions,\n      ...metadata\n    }\n    const signature = await this.signDigest(digest, meta)\n\n    return {\n      intent: {\n        // Maybe is better if signDigest returns the subdigest directly\n        id: subDigestOf(this.address, this.chainId, digest),\n        wallet: this.address\n      },\n      chainId: this.chainId,\n      transactions,\n      entrypoint: this.address,\n      nonce: defaultedNonce,\n      signature\n    }\n  }\n\n  async sendSignedTransaction(\n    signedBundle: commons.transaction.IntendedTransactionBundle,\n    quote?: FeeQuote\n  ): Promise<ethers.TransactionResponse> {\n    if (!this.relayer) throw new Error('Wallet sendTransaction requires a relayer')\n    return this.relayer.relay(signedBundle, quote)\n  }\n\n  // sendTransaction will dispatch the transaction to the relayer for submission to the network.\n  // This method is able to send transactions in serial or parallel (default). You can specify\n  // a specific nonce, or let the wallet determine the next nonce on-chain (serial:true).\n  //\n  // By default, nonces are generated randomly and assigned so transactioned can be executed\n  // in parallel. However, if you'd like to execute serially, pass { serial: true } as an option.\n  async sendTransaction(\n    txs: commons.transaction.Transactionish,\n    options?: {\n      quote?: FeeQuote\n      nonce?: ethers.BigNumberish\n      serial?: boolean\n    }\n  ): Promise<ethers.TransactionResponse> {\n    let nonce: ethers.BigNumberish | { serial: boolean }\n    if (options?.nonce !== undefined) {\n      // specific nonce is used\n      nonce = options.nonce\n    } else if (options?.serial) {\n      // next nonce on wallet is used and detected on-chain\n      nonce = { serial: true }\n    } else {\n      // default is random, aka parallel\n      nonce = this.randomNonce()\n    }\n\n    const signed = await this.signTransactions(txs, nonce)\n    const decorated = await this.decorateTransactions(signed)\n    return this.sendSignedTransaction(decorated, options?.quote)\n  }\n\n  async fillGasLimits(txs: commons.transaction.Transactionish): Promise<commons.transaction.SimulatedTransaction[]> {\n    const transaction = await resolveArrayProperties<commons.transaction.Transactionish>(txs)\n    const transactions = commons.transaction.fromTransactionish(this.address, transaction)\n    const relayer = this.relayer\n    if (!relayer) throw new Error('Wallet fillGasLimits requires a relayer')\n\n    const simulations = await relayer.simulate(this.address, ...transactions)\n    return transactions.map((tx, i) => {\n      const gasLimit = tx.gasLimit ? Number(tx.gasLimit) : simulations[i].gasLimit\n      return { ...tx, ...simulations[i], gasLimit }\n    })\n  }\n\n  connect(provider: ethers.Provider, relayer?: Relayer): Wallet<Y, T, Z> {\n    return new Wallet({\n      // Sequence version configurator\n      coders: this.coders,\n\n      context: this.context,\n      config: this.config,\n\n      chainId: this.chainId,\n      address: this.address,\n\n      orchestrator: this.orchestrator,\n      reader: this._reader,\n\n      provider,\n      relayer: relayer ?? this.relayer\n    })\n  }\n\n  signTransaction(transaction: ethers.TransactionRequest): Promise<string> {\n    throw new Error('Method not implemented.')\n  }\n}\n","import { ChainId } from '@0xsequence/network'\nimport { Account } from './account'\nimport { ethers } from 'ethers'\nimport { commons } from '@0xsequence/core'\nimport { FeeOption, proto } from '@0xsequence/relayer'\nimport { toHexString } from '@0xsequence/utils'\n\nexport type AccountSignerOptions = {\n  nonceSpace?: ethers.BigNumberish\n  cantValidateBehavior?: 'ignore' | 'eip6492' | 'throw'\n  stubSignatureOverrides?: Map<string, string>\n  selectFee?: (\n    txs: ethers.TransactionRequest | commons.transaction.Transactionish,\n    options: FeeOption[]\n  ) => Promise<FeeOption | undefined>\n}\n\nfunction encodeGasRefundTransaction(option?: FeeOption) {\n  if (!option) return []\n\n  const value = BigInt(option.value)\n\n  switch (option.token.type) {\n    case proto.FeeTokenType.UNKNOWN:\n      return [\n        {\n          delegateCall: false,\n          revertOnError: true,\n          gasLimit: option.gasLimit,\n          to: option.to,\n          value: toHexString(value),\n          data: '0x'\n        }\n      ]\n\n    case proto.FeeTokenType.ERC20_TOKEN:\n      if (!option.token.contractAddress) {\n        throw new Error(`No contract address for ERC-20 fee option`)\n      }\n\n      return [\n        {\n          delegateCall: false,\n          revertOnError: true,\n          gasLimit: option.gasLimit,\n          to: option.token.contractAddress,\n          value: 0,\n          data: new ethers.Interface([\n            {\n              constant: false,\n              inputs: [{ type: 'address' }, { type: 'uint256' }],\n              name: 'transfer',\n              outputs: [],\n              type: 'function'\n            }\n          ]).encodeFunctionData('transfer', [option.to, toHexString(value)])\n        }\n      ]\n\n    default:\n      throw new Error(`Unhandled fee token type ${option.token.type}`)\n  }\n}\n\nexport class AccountSigner implements ethers.AbstractSigner<ethers.Provider> {\n  constructor(\n    public account: Account,\n    public chainId: ChainId,\n    public readonly options?: AccountSignerOptions\n  ) {}\n\n  get provider() {\n    return this.account.providerFor(this.chainId)\n  }\n\n  async getAddress(): Promise<string> {\n    return this.account.address\n  }\n\n  signMessage(message: string | ethers.BytesLike): Promise<string> {\n    return this.account.signMessage(message, this.chainId, this.options?.cantValidateBehavior ?? 'throw')\n  }\n\n  signTypedData(\n    domain: ethers.TypedDataDomain,\n    types: Record<string, Array<ethers.TypedDataField>>,\n    value: Record<string, any>\n  ): Promise<string> {\n    return this.account.signTypedData(domain, types, value, this.chainId, this.options?.cantValidateBehavior ?? 'throw')\n  }\n\n  private async defaultSelectFee(_txs: commons.transaction.Transactionish, options: FeeOption[]): Promise<FeeOption | undefined> {\n    // If no options, return undefined\n    if (options.length === 0) return undefined\n\n    // If there are multiple options, try them one by one\n    // until we find one that satisfies the balance requirement\n    const balanceOfAbi = [\n      {\n        constant: true,\n        inputs: [{ type: 'address' }],\n        name: 'balanceOf',\n        outputs: [{ type: 'uint256' }],\n        type: 'function'\n      }\n    ]\n\n    for (const option of options) {\n      if (option.token.type === proto.FeeTokenType.UNKNOWN) {\n        // Native token\n        const balance = await this.getBalance()\n        if (balance >= BigInt(option.value)) {\n          return option\n        }\n      } else if (option.token.contractAddress && option.token.type === proto.FeeTokenType.ERC20_TOKEN) {\n        // ERC20 token\n        const token = new ethers.Contract(option.token.contractAddress, balanceOfAbi, this.provider)\n        const balance = await token.balanceOf(this.account.address)\n        if (balance >= BigInt(option.value)) {\n          return option\n        }\n      } else {\n        // Unsupported token type\n      }\n    }\n\n    throw new Error('No fee option available - not enough balance')\n  }\n\n  async sendTransaction(\n    txs: commons.transaction.Transactionish,\n    options?: {\n      simulateForFeeOptions?: boolean\n    }\n  ): Promise<ethers.TransactionResponse> {\n    const prepare = await this.account.prepareTransactions({\n      txs,\n      chainId: this.chainId,\n      stubSignatureOverrides: this.options?.stubSignatureOverrides ?? new Map(),\n      simulateForFeeOptions: options?.simulateForFeeOptions\n    })\n\n    const selectMethod = this.options?.selectFee ?? this.defaultSelectFee.bind(this)\n    const feeOption = await selectMethod(txs, prepare.feeOptions)\n\n    const finalTransactions = [...prepare.transactions, ...encodeGasRefundTransaction(feeOption)]\n\n    return this.account.sendTransaction(\n      finalTransactions,\n      this.chainId,\n      prepare.feeQuote,\n      undefined,\n      undefined,\n      this.options?.nonceSpace !== undefined\n        ? {\n            nonceSpace: this.options.nonceSpace\n          }\n        : undefined\n    ) as Promise<ethers.TransactionResponse> // Will always have a transaction response\n  }\n\n  getBalance(blockTag?: ethers.BlockTag | undefined): Promise<bigint> {\n    return this.provider.getBalance(this.account.address, blockTag)\n  }\n\n  call(transaction: ethers.TransactionRequest, blockTag?: ethers.BlockTag): Promise<string> {\n    return this.provider.call({ ...transaction, blockTag })\n  }\n\n  async resolveName(name: string): Promise<string> {\n    const res = await this.provider.resolveName(name)\n    if (!res) throw new Error(`Could not resolve name ${name}`)\n    return res\n  }\n\n  connect(_provider: ethers.Provider): ethers.Signer {\n    throw new Error('Method not implemented.')\n  }\n\n  signTransaction(transaction: ethers.TransactionRequest): Promise<string> {\n    throw new Error('Method not implemented.')\n  }\n\n  getTransactionCount(blockTag?: ethers.BlockTag | undefined): Promise<number> {\n    throw new Error('Method not implemented.')\n  }\n\n  estimateGas(transaction: ethers.TransactionRequest): Promise<bigint> {\n    throw new Error('Method not implemented.')\n  }\n\n  getChainId(): Promise<number> {\n    return Promise.resolve(Number(this.chainId))\n  }\n\n  getGasPrice(): Promise<bigint> {\n    throw new Error('Method not implemented.')\n  }\n\n  getFeeData(): Promise<ethers.FeeData> {\n    throw new Error('Method not implemented.')\n  }\n\n  getNonce(blockTag?: ethers.BlockTag): Promise<number> {\n    throw new Error('Method not implemented.')\n  }\n\n  populateCall(tx: ethers.TransactionRequest): Promise<ethers.TransactionLike<string>> {\n    throw new Error('Method not implemented.')\n  }\n\n  checkTransaction(transaction: ethers.TransactionRequest): ethers.TransactionRequest {\n    throw new Error('Method not implemented.')\n  }\n\n  async populateTransaction(tx: ethers.TransactionRequest): Promise<ethers.TransactionLike<string>> {\n    throw new Error('Method not implemented.')\n  }\n\n  _checkProvider(operation?: string | undefined): void {\n    throw new Error('Method not implemented.')\n  }\n}\n","import { walletContracts } from '@0xsequence/abi'\nimport { commons, universal } from '@0xsequence/core'\nimport { migrator, defaults, version } from '@0xsequence/migration'\nimport { ChainId, NetworkConfig } from '@0xsequence/network'\nimport { FeeOption, FeeQuote, isRelayer, Relayer, RpcRelayer } from '@0xsequence/relayer'\nimport { tracker } from '@0xsequence/sessions'\nimport { SignatureOrchestrator } from '@0xsequence/signhub'\nimport { encodeTypedDataDigest, getFetchRequest } from '@0xsequence/utils'\nimport { Wallet } from '@0xsequence/wallet'\nimport { ethers } from 'ethers'\nimport { AccountSigner, AccountSignerOptions } from './signer'\n\nexport type AccountStatus = {\n  original: {\n    version: number\n    imageHash: string\n    context: commons.context.WalletContext\n  }\n  onChain: {\n    imageHash: string\n    config: commons.config.Config\n    version: number\n    deployed: boolean\n  }\n  fullyMigrated: boolean\n  signedMigrations: migrator.SignedMigration[]\n  version: number\n  presignedConfigurations: tracker.PresignedConfigLink[]\n  imageHash: string\n  config: commons.config.Config\n  checkpoint: ethers.BigNumberish\n  canOnchainValidate: boolean\n}\n\nexport type AccountOptions = {\n  // The only unique identifier for a wallet is the address\n  address: string\n\n  // The config tracker keeps track of chained configs,\n  // counterfactual addresses and reverse lookups for configurations\n  // it must implement both the ConfigTracker and MigrationTracker\n  tracker: tracker.ConfigTracker & migrator.PresignedMigrationTracker\n\n  // Versioned contexts contains the context information for each Sequence version\n  contexts: commons.context.VersionedContext\n\n  // Optional list of migrations, if not provided, the default migrations will be used\n  // NOTICE: the last vestion is considered the \"current\" version for the account\n  migrations?: migrator.Migrations\n\n  // Orchestrator manages signing messages and transactions\n  orchestrator: SignatureOrchestrator\n\n  // Networks information and providers\n  networks: NetworkConfig[]\n\n  // Jwt\n  jwt?: string\n\n  // Project access key\n  projectAccessKey?: string\n}\n\nexport interface PreparedTransactions {\n  transactions: commons.transaction.SimulatedTransaction[]\n  flatDecorated: commons.transaction.Transaction[]\n  feeOptions: FeeOption[]\n  feeQuote?: FeeQuote\n}\n\nclass Chain0Reader implements commons.reader.Reader {\n  async isDeployed(_wallet: string): Promise<boolean> {\n    return false\n  }\n\n  async implementation(_wallet: string): Promise<string | undefined> {\n    return undefined\n  }\n\n  async imageHash(_wallet: string): Promise<string | undefined> {\n    return undefined\n  }\n\n  async nonce(_wallet: string, _space: ethers.BigNumberish): Promise<bigint> {\n    return 0n\n  }\n\n  async isValidSignature(_wallet: string, _digest: ethers.BytesLike, _signature: ethers.BytesLike): Promise<boolean> {\n    throw new Error('Method not supported.')\n  }\n}\n\nexport class Account {\n  public readonly address: string\n\n  public readonly networks: NetworkConfig[]\n  public readonly tracker: tracker.ConfigTracker & migrator.PresignedMigrationTracker\n  public readonly contexts: commons.context.VersionedContext\n\n  public readonly migrator: migrator.Migrator\n  public readonly migrations: migrator.Migrations\n\n  private orchestrator: SignatureOrchestrator\n\n  private jwt?: string\n\n  private projectAccessKey?: string\n\n  constructor(options: AccountOptions) {\n    this.address = ethers.getAddress(options.address)\n\n    this.contexts = options.contexts\n    this.tracker = options.tracker\n    this.networks = options.networks\n    this.orchestrator = options.orchestrator\n    this.jwt = options.jwt\n    this.projectAccessKey = options.projectAccessKey\n\n    this.migrations = options.migrations || defaults.DefaultMigrations\n    this.migrator = new migrator.Migrator(options.tracker, this.migrations, this.contexts)\n  }\n\n  getSigner(chainId: ChainId, options?: AccountSignerOptions): AccountSigner {\n    return new AccountSigner(this, chainId, options)\n  }\n\n  static async new(options: {\n    config: commons.config.SimpleConfig\n    tracker: tracker.ConfigTracker & migrator.PresignedMigrationTracker\n    contexts: commons.context.VersionedContext\n    orchestrator: SignatureOrchestrator\n    networks: NetworkConfig[]\n    migrations?: migrator.Migrations\n    projectAccessKey?: string\n  }): Promise<Account> {\n    const mig = new migrator.Migrator(options.tracker, options.migrations ?? defaults.DefaultMigrations, options.contexts)\n\n    const lastMigration = mig.lastMigration()\n    const lastCoder = lastMigration.configCoder\n\n    const config = lastCoder.fromSimple(options.config)\n    const imageHash = lastCoder.imageHashOf(config)\n    const context = options.contexts[lastMigration.version]\n    const address = commons.context.addressOf(context, imageHash)\n\n    await options.tracker.saveCounterfactualWallet({ config, context: Object.values(options.contexts) })\n\n    return new Account({\n      address,\n      tracker: options.tracker,\n      contexts: options.contexts,\n      networks: options.networks,\n      orchestrator: options.orchestrator,\n      migrations: options.migrations,\n      projectAccessKey: options.projectAccessKey\n    })\n  }\n\n  getAddress(): Promise<string> {\n    return Promise.resolve(this.address)\n  }\n\n  get version(): number {\n    return this.migrator.lastMigration().version\n  }\n\n  get coders(): {\n    signature: commons.signature.SignatureCoder\n    config: commons.config.ConfigCoder\n  } {\n    const lastMigration = this.migrator.lastMigration()\n\n    return {\n      signature: lastMigration.signatureCoder,\n      config: lastMigration.configCoder\n    }\n  }\n\n  network(chainId: ethers.BigNumberish): NetworkConfig {\n    const tcid = BigInt(chainId)\n    const found = this.networks.find(n => tcid === BigInt(n.chainId))\n    if (!found) throw new Error(`Network not found for chainId ${chainId}`)\n    return found\n  }\n\n  providerFor(chainId: ethers.BigNumberish): ethers.Provider {\n    const found = this.network(chainId)\n    if (!found.provider && !found.rpcUrl) {\n      throw new Error(`Provider not found for chainId ${chainId}`)\n    }\n\n    const network = new ethers.Network(found.name, found.chainId)\n\n    return (\n      found.provider ||\n      new ethers.JsonRpcProvider(getFetchRequest(found.rpcUrl, this.projectAccessKey, this.jwt), network, {\n        staticNetwork: network\n      })\n    )\n  }\n\n  reader(chainId: ethers.BigNumberish): commons.reader.Reader {\n    if (BigInt(chainId) === 0n) {\n      return new Chain0Reader()\n    }\n\n    // TODO: Networks should be able to provide a reader directly\n    // and we should default to the on-chain reader\n    return new commons.reader.OnChainReader(this.providerFor(chainId))\n  }\n\n  relayer(chainId: ethers.BigNumberish): Relayer {\n    const found = this.network(chainId)\n    if (!found.relayer) throw new Error(`Relayer not found for chainId ${chainId}`)\n    if (isRelayer(found.relayer)) return found.relayer\n    return new RpcRelayer({\n      ...found.relayer,\n      // If there's an access key, we don't pass the JWT, because browser-side usage of this code mandates an access key\n      // and passing a JWT causes a CORS error.\n      ...(this.projectAccessKey ? { projectAccessKey: this.projectAccessKey } : { jwtAuth: this.jwt })\n    })\n  }\n\n  setOrchestrator(orchestrator: SignatureOrchestrator) {\n    this.orchestrator = orchestrator\n  }\n\n  setJwt(jwt: string) {\n    this.jwt = jwt\n  }\n\n  contextFor(version: number): commons.context.WalletContext {\n    const ctx = this.contexts[version]\n    if (!ctx) throw new Error(`Context not found for version ${version}`)\n    return ctx\n  }\n\n  walletForStatus(chainId: ethers.BigNumberish, status: Pick<AccountStatus, 'version'> & Pick<AccountStatus, 'config'>): Wallet {\n    const coder = universal.coderFor(status.version)\n    return this.walletFor(chainId, this.contextFor(status.version), status.config, coder)\n  }\n\n  walletFor(\n    chainId: ethers.BigNumberish,\n    context: commons.context.WalletContext,\n    config: commons.config.Config,\n    coders: typeof this.coders\n  ): Wallet {\n    const isNetworkZero = BigInt(chainId) === 0n\n    return new Wallet({\n      config,\n      context,\n      chainId,\n      coders,\n      relayer: isNetworkZero ? undefined : this.relayer(chainId),\n      address: this.address,\n      orchestrator: this.orchestrator,\n      reader: this.reader(chainId)\n    })\n  }\n\n  // Get the status of the account on a given network\n  // this does the following process:\n  // 1. Get the current on-chain status of the wallet (version + imageHash)\n  // 2. Get any pending migrations that have been signed by the wallet\n  // 3. Get any pending configuration updates that have been signed by the wallet\n  // 4. Fetch reverse lookups for both on-chain and pending configurations\n  async status(chainId: ethers.BigNumberish, longestPath: boolean = false): Promise<AccountStatus> {\n    const isDeployedPromise = this.reader(chainId).isDeployed(this.address)\n\n    const counterfactualImageHashPromise = this.tracker\n      .imageHashOfCounterfactualWallet({\n        wallet: this.address\n      })\n      .then(r => {\n        if (!r) throw new Error(`Counterfactual imageHash not found for wallet ${this.address}`)\n        return r\n      })\n\n    const counterFactualVersionPromise = counterfactualImageHashPromise.then(r => {\n      return version.counterfactualVersion(this.address, r.imageHash, Object.values(this.contexts))\n    })\n\n    const onChainVersionPromise = (async () => {\n      const isDeployed = await isDeployedPromise\n      if (!isDeployed) return counterFactualVersionPromise\n\n      const implementation = await this.reader(chainId).implementation(this.address)\n      if (!implementation) throw new Error(`Implementation not found for wallet ${this.address}`)\n\n      const versions = Object.values(this.contexts)\n      for (let i = 0; i < versions.length; i++) {\n        if (versions[i].mainModule === implementation || versions[i].mainModuleUpgradable === implementation) {\n          return versions[i].version\n        }\n      }\n\n      throw new Error(`Version not found for implementation ${implementation}`)\n    })()\n\n    const onChainImageHashPromise = (async () => {\n      const deployedImageHash = await this.reader(chainId).imageHash(this.address)\n      if (deployedImageHash) return deployedImageHash\n      const counterfactualImageHash = await counterfactualImageHashPromise\n      if (counterfactualImageHash) return counterfactualImageHash.imageHash\n      throw new Error(`On-chain imageHash not found for wallet ${this.address}`)\n    })()\n\n    const onChainConfigPromise = (async () => {\n      const onChainImageHash = await onChainImageHashPromise\n      const onChainConfig = await this.tracker.configOfImageHash({ imageHash: onChainImageHash })\n      if (onChainConfig) return onChainConfig\n      throw new Error(`On-chain config not found for imageHash ${onChainImageHash}`)\n    })()\n\n    const onChainVersion = await onChainVersionPromise\n    const onChainImageHash = await onChainImageHashPromise\n\n    let fromImageHash = onChainImageHash\n    let lastVersion = onChainVersion\n    let signedMigrations: migrator.SignedMigration[] = []\n\n    if (onChainVersion !== this.version) {\n      // We either need to use the presigned configuration updates, or we haven't performed\n      // any updates yet, so we can only use the on-chain imageHash as-is\n      const presignedMigrate = await this.migrator.getAllMigratePresignedTransaction({\n        address: this.address,\n        fromImageHash: onChainImageHash,\n        fromVersion: onChainVersion,\n        chainId\n      })\n\n      // The migrator returns the original version and imageHash\n      // if no presigned migration is found, so no need to check here\n      fromImageHash = presignedMigrate.lastImageHash\n      lastVersion = presignedMigrate.lastVersion\n\n      signedMigrations = presignedMigrate.signedMigrations\n    }\n\n    const presigned = await this.tracker.loadPresignedConfiguration({\n      wallet: this.address,\n      fromImageHash: fromImageHash,\n      longestPath\n    })\n\n    const imageHash = presigned && presigned.length > 0 ? presigned[presigned.length - 1].nextImageHash : fromImageHash\n    const config = await this.tracker.configOfImageHash({ imageHash })\n    if (!config) {\n      throw new Error(`Config not found for imageHash ${imageHash}`)\n    }\n\n    const isDeployed = await isDeployedPromise\n    const counterfactualImageHash = await counterfactualImageHashPromise\n    const checkpoint = universal.coderFor(lastVersion).config.checkpointOf(config as any)\n\n    return {\n      original: {\n        ...counterfactualImageHash,\n        version: await counterFactualVersionPromise\n      },\n      onChain: {\n        imageHash: onChainImageHash,\n        config: await onChainConfigPromise,\n        version: onChainVersion,\n        deployed: isDeployed\n      },\n      fullyMigrated: lastVersion === this.version,\n      signedMigrations,\n      version: lastVersion,\n      presignedConfigurations: presigned,\n      imageHash,\n      config,\n      checkpoint,\n      canOnchainValidate: onChainVersion === this.version && isDeployed\n    }\n  }\n\n  private mustBeFullyMigrated(status: AccountStatus) {\n    if (!status.fullyMigrated) {\n      throw new Error(`Wallet ${this.address} is not fully migrated`)\n    }\n  }\n\n  async predecorateSignedTransactions(\n    status: AccountStatus,\n    chainId: ethers.BigNumberish\n  ): Promise<commons.transaction.SignedTransactionBundle[]> {\n    // Request signed predecorate transactions from child wallets\n    const bundles = await this.orchestrator.predecorateSignedTransactions({ chainId })\n    // Get signed predecorate transaction\n    const predecorated = await this.predecorateTransactions([], status, chainId)\n    if (commons.transaction.fromTransactionish(this.address, predecorated).length > 0) {\n      // Sign it\n      bundles.push(await this.signTransactions(predecorated, chainId))\n    }\n    return bundles\n  }\n\n  async predecorateTransactions(\n    txs: commons.transaction.Transactionish,\n    status: AccountStatus,\n    chainId: ethers.BigNumberish\n  ): Promise<commons.transaction.Transactionish> {\n    // if onchain wallet config is not up to date\n    // then we should append an extra transaction that updates it\n    // to the latest \"lazy\" state\n    if (status.onChain.imageHash !== status.imageHash) {\n      const wallet = this.walletForStatus(chainId, status)\n      const updateConfig = await wallet.buildUpdateConfigurationTransaction(status.config)\n      return [Array.isArray(txs) ? txs : [txs], updateConfig.transactions].flat()\n    }\n\n    return txs\n  }\n\n  async decorateTransactions(\n    bundles: commons.transaction.IntendedTransactionBundle | commons.transaction.IntendedTransactionBundle[],\n    status: AccountStatus,\n    chainId?: ethers.BigNumberish\n  ): Promise<commons.transaction.IntendedTransactionBundle> {\n    if (!Array.isArray(bundles)) {\n      // Recurse with array\n      return this.decorateTransactions([bundles], status, chainId)\n    }\n\n    // Default to chainId of first bundle when not supplied\n    chainId = chainId ?? bundles[0].chainId\n\n    const bootstrapBundle = await this.buildBootstrapTransactions(status, chainId)\n    const hasBootstrapTxs = bootstrapBundle.transactions.length > 0\n\n    if (!hasBootstrapTxs && bundles.length === 1) {\n      return bundles[0]\n    }\n\n    // Intent defaults to first bundle when no bootstrap transaction\n    const { entrypoint } = hasBootstrapTxs ? bootstrapBundle : bundles[0]\n\n    const decoratedBundle = {\n      entrypoint,\n      chainId,\n      // Intent of the first bundle is used\n      intent: bundles[0]?.intent,\n      transactions: [\n        ...bootstrapBundle.transactions,\n        ...bundles.map(\n          (bundle): commons.transaction.Transaction => ({\n            to: bundle.entrypoint,\n            data: commons.transaction.encodeBundleExecData(bundle),\n            gasLimit: 0,\n            delegateCall: false,\n            revertOnError: true,\n            value: 0\n          })\n        )\n      ]\n    }\n\n    // Re-compute the meta-transaction id to use the guest module subdigest\n    if (!status.onChain.deployed) {\n      const id = commons.transaction.subdigestOfGuestModuleTransactions(\n        this.contexts[this.version].guestModule,\n        chainId,\n        decoratedBundle.transactions\n      )\n\n      if (decoratedBundle.intent === undefined) {\n        decoratedBundle.intent = { id, wallet: this.address }\n      } else {\n        decoratedBundle.intent.id = id\n      }\n    }\n\n    return decoratedBundle\n  }\n\n  async decorateSignature<T extends ethers.BytesLike>(\n    signature: T,\n    status: Partial<Pick<AccountStatus, 'presignedConfigurations'>>\n  ): Promise<T | string> {\n    if (!status.presignedConfigurations || status.presignedConfigurations.length === 0) {\n      return signature\n    }\n\n    const coder = this.coders.signature\n\n    const chain = status.presignedConfigurations.map(c => c.signature)\n    const chainedSignature = coder.chainSignatures(signature, chain)\n    return coder.trim(chainedSignature)\n  }\n\n  async publishWitness(): Promise<void> {\n    const digest = ethers.id(`This is a Sequence account woo! ${Date.now()}`)\n    const signature = await this.signDigest(digest, 0, false)\n    const decoded = this.coders.signature.decode(signature)\n    const signatures = this.coders.signature.signaturesOfDecoded(decoded)\n    return this.tracker.saveWitnesses({ wallet: this.address, digest, chainId: 0, signatures })\n  }\n\n  async signDigest(\n    digest: ethers.BytesLike,\n    chainId: ethers.BigNumberish,\n    decorate: boolean = true,\n    cantValidateBehavior: 'ignore' | 'eip6492' | 'throw' = 'ignore',\n    metadata?: object\n  ): Promise<string> {\n    // If we are signing a digest for chainId zero then we can never be fully migrated\n    // because Sequence v1 doesn't allow for signing a message on \"all chains\"\n\n    // So we ignore the state on \"chain zero\" and instead use one of the states of the networks\n    // wallet-webapp should ensure the wallet is as migrated as possible, trying to mimic\n    // the behaviour of being migrated on all chains\n    const chainRef = BigInt(chainId) === 0n ? this.networks[0].chainId : chainId\n    const status = await this.status(chainRef)\n    this.mustBeFullyMigrated(status)\n\n    // Check if we can validate onchain and what to do if we can't\n    // revert early, since there is no point in signing a digest now\n    if (!status.canOnchainValidate && cantValidateBehavior === 'throw') {\n      throw new Error('Wallet cannot validate onchain')\n    }\n\n    const wallet = this.walletForStatus(chainId, status)\n    const signature = await wallet.signDigest(digest, metadata)\n\n    const decorated = decorate ? this.decorateSignature(signature, status) : signature\n\n    // If the wallet can't validate onchain then we\n    // need to prefix the decorated signature with all deployments and migrations\n    // aka doing a bootstrap using EIP-6492\n    if (!status.canOnchainValidate) {\n      switch (cantValidateBehavior) {\n        // NOTICE: We covered this case before signing the digest\n        // case 'throw':\n        //   throw new Error('Wallet cannot validate on-chain')\n        case 'ignore':\n          return decorated\n\n        case 'eip6492':\n          return this.buildEIP6492Signature(await decorated, status, chainId)\n      }\n    }\n\n    return decorated\n  }\n\n  buildOnChainSignature(digest: ethers.BytesLike): { bundle: commons.transaction.TransactionBundle; signature: string } {\n    const subdigest = commons.signature.subdigestOf({\n      digest: ethers.hexlify(digest),\n      chainId: 0,\n      address: this.address\n    })\n    const hexSubdigest = ethers.hexlify(subdigest)\n    const config = this.coders.config.fromSimple({\n      // Threshold *only* needs to be > 0, this is not a magic number\n      // we only use 2 ** 15 because it may lead to lower gas costs in some chains\n      threshold: 32768,\n      checkpoint: 0,\n      signers: [],\n      subdigests: [hexSubdigest]\n    })\n\n    const walletInterface = new ethers.Interface(walletContracts.mainModule.abi)\n    const bundle: commons.transaction.TransactionBundle = {\n      entrypoint: this.address,\n      transactions: [\n        {\n          to: this.address,\n          data: walletInterface.encodeFunctionData(\n            // *NEVER* use updateImageHash here, as it would effectively destroy the wallet\n            // setExtraImageHash sets an additional imageHash, without changing the current one\n            'setExtraImageHash',\n            [\n              this.coders.config.imageHashOf(config),\n              // 2 ** 255 instead of max uint256, to have more zeros in the calldata\n              '57896044618658097711785492504343953926634992332820282019728792003956564819968'\n            ]\n          ),\n          // Conservative gas limit, used because the current relayer\n          // has trouble estimating gas for this transaction\n          gasLimit: 250000\n        }\n      ]\n    }\n\n    // Fire and forget request to save the config\n    this.tracker.saveWalletConfig({ config })\n\n    // Encode a signature proof for the given subdigest\n    // use `chainId = 0` to make it simpler, as this signature is only a proof\n    const signature = this.coders.signature.encodeSigners(config, new Map(), [hexSubdigest], 0).encoded\n    return { bundle, signature }\n  }\n\n  private async buildEIP6492Signature(signature: string, status: AccountStatus, chainId: ethers.BigNumberish): Promise<string> {\n    const bootstrapBundle = await this.buildBootstrapTransactions(status, chainId)\n    if (bootstrapBundle.transactions.length === 0) {\n      throw new Error('Cannot build EIP-6492 signature without bootstrap transactions')\n    }\n\n    const encoded = ethers.AbiCoder.defaultAbiCoder().encode(\n      ['address', 'bytes', 'bytes'],\n      [bootstrapBundle.entrypoint, commons.transaction.encodeBundleExecData(bootstrapBundle), signature]\n    )\n\n    return ethers.solidityPacked(['bytes', 'bytes32'], [encoded, commons.EIP6492.EIP_6492_SUFFIX])\n  }\n\n  async editConfig(changes: {\n    add?: commons.config.SimpleSigner[]\n    remove?: string[]\n    threshold?: ethers.BigNumberish\n  }): Promise<void> {\n    const currentConfig = await this.status(0).then(s => s.config)\n    const newConfig = this.coders.config.editConfig(currentConfig, {\n      ...changes,\n      checkpoint: this.coders.config.checkpointOf(currentConfig) + 1n\n    })\n\n    return this.updateConfig(newConfig)\n  }\n\n  async updateConfig(config: commons.config.Config): Promise<void> {\n    // config should be for the current version of the wallet\n    if (!this.coders.config.isWalletConfig(config)) {\n      throw new Error(`Invalid config for wallet ${this.address}`)\n    }\n\n    const nextImageHash = this.coders.config.imageHashOf(config)\n\n    // sign an update config struct\n    const updateStruct = this.coders.signature.hashSetImageHash(nextImageHash)\n\n    // sign the update struct, using chain id 0\n    const signature = await this.signDigest(updateStruct, 0, false)\n\n    // save the presigned transaction to the sessions tracker\n    await this.tracker.savePresignedConfiguration({\n      wallet: this.address,\n      nextConfig: config,\n      signature\n    })\n\n    // safety check, tracker should have a reverse lookup for the imageHash\n    // outside of the local cache\n    const reverseConfig = await this.tracker.configOfImageHash({\n      imageHash: nextImageHash,\n      noCache: true\n    })\n\n    if (!reverseConfig || this.coders.config.imageHashOf(reverseConfig) !== nextImageHash) {\n      throw Error(`Reverse lookup failed for imageHash ${nextImageHash}`)\n    }\n  }\n\n  /**\n   *  This method is used to bootstrap the wallet on a given chain.\n   *  this deploys the wallets and executes all the necessary transactions\n   *  for that wallet to start working with the given version.\n   *\n   *  This usually involves: (a) deploying the wallet, (b) executing migrations\n   *\n   *  Notice: It should NOT explicitly include chained signatures. Unless internally used\n   *  by any of the migrations.\n   *\n   */\n  async buildBootstrapTransactions(\n    status: AccountStatus,\n    chainId: ethers.BigNumberish\n  ): Promise<commons.transaction.IntendedTransactionBundle> {\n    const bundle = await this.orchestrator.buildDeployTransaction({ chainId })\n    const transactions: commons.transaction.Transaction[] = bundle?.transactions ?? []\n\n    // Add wallet deployment if needed\n    if (!status.onChain.deployed) {\n      // Wallet deployment will vary depending on the version\n      // so we need to use the context to get the correct deployment\n      const deployTransaction = Wallet.buildDeployTransaction(status.original.context, status.original.imageHash)\n\n      transactions.push(...deployTransaction.transactions)\n    }\n\n    // Get pending migrations\n    transactions.push(\n      ...status.signedMigrations.map(m => ({\n        to: m.tx.entrypoint,\n        data: commons.transaction.encodeBundleExecData(m.tx),\n        value: 0,\n        gasLimit: 0,\n        revertOnError: true,\n        delegateCall: false\n      }))\n    )\n\n    // Build the transaction intent, if the transaction has migrations\n    // then we should use one of the intents of the migrations (anyone will do)\n    // if it doesn't, then the only intent we could use if the GuestModule one\n    // ... but this may fail if the relayer uses a different GuestModule\n    const id =\n      status.signedMigrations.length > 0\n        ? status.signedMigrations[0].tx.intent.id\n        : commons.transaction.subdigestOfGuestModuleTransactions(this.contexts[this.version].guestModule, chainId, transactions)\n\n    // Everything is encoded as a bundle\n    // using the GuestModule of the account version\n    const { guestModule } = this.contextFor(status.version)\n    return { entrypoint: guestModule, transactions, chainId, intent: { id, wallet: this.address } }\n  }\n\n  async bootstrapTransactions(\n    chainId: ethers.BigNumberish,\n    prestatus?: AccountStatus\n  ): Promise<Omit<commons.transaction.IntendedTransactionBundle, 'chainId'>> {\n    const status = prestatus || (await this.status(chainId))\n    return this.buildBootstrapTransactions(status, chainId)\n  }\n\n  async doBootstrap(chainId: ethers.BigNumberish, feeQuote?: FeeQuote, prestatus?: AccountStatus) {\n    const bootstrapTxs = await this.bootstrapTransactions(chainId, prestatus)\n    return this.relayer(chainId).relay({ ...bootstrapTxs, chainId }, feeQuote)\n  }\n\n  signMessage(\n    message: ethers.BytesLike,\n    chainId: ethers.BigNumberish,\n    cantValidateBehavior: 'ignore' | 'eip6492' | 'throw' = 'ignore'\n  ): Promise<string> {\n    return this.signDigest(ethers.keccak256(message), chainId, true, cantValidateBehavior)\n  }\n\n  async signTransactions(\n    txs: commons.transaction.Transactionish,\n    chainId: ethers.BigNumberish,\n    pstatus?: AccountStatus,\n    options?: {\n      nonceSpace?: ethers.BigNumberish\n      serial?: boolean\n    }\n  ): Promise<commons.transaction.SignedTransactionBundle> {\n    const status = pstatus || (await this.status(chainId))\n    this.mustBeFullyMigrated(status)\n\n    const wallet = this.walletForStatus(chainId, status)\n\n    const metadata: commons.WalletSignRequestMetadata = {\n      address: this.address,\n      digest: '', // Set in wallet.signTransactions\n      chainId,\n      config: { version: this.version },\n      decorate: true,\n      cantValidateBehavior: 'ignore'\n    }\n\n    const nonceOptions = options?.serial\n      ? { serial: true }\n      : options?.nonceSpace !== undefined\n        ? { space: options.nonceSpace }\n        : undefined\n\n    const signed = await wallet.signTransactions(txs, nonceOptions, metadata)\n\n    return {\n      ...signed,\n      signature: await this.decorateSignature(signed.signature, status)\n    }\n  }\n\n  async signMigrations(\n    chainId: ethers.BigNumberish,\n    editConfig: (prevConfig: commons.config.Config) => commons.config.Config\n  ): Promise<boolean> {\n    const status = await this.status(chainId)\n    if (status.fullyMigrated) return false\n\n    const wallet = this.walletForStatus(chainId, status)\n    const nextConfig = editConfig(wallet.config)\n    const signed = await this.migrator.signNextMigration(this.address, status.version, wallet, nextConfig)\n    if (!signed) return false\n\n    // Make sure the tracker has a copy of the config\n    // before attempting to save the migration\n    // otherwise if this second step fails the tracker could end up\n    // with a migration to an unknown config\n    await this.tracker.saveWalletConfig({ config: nextConfig })\n    const nextCoder = universal.coderFor(nextConfig.version).config\n    const nextImageHash = nextCoder.imageHashOf(nextConfig as any)\n    const reverseConfig = await this.tracker.configOfImageHash({ imageHash: nextImageHash, noCache: true })\n    if (!reverseConfig || nextCoder.imageHashOf(reverseConfig as any) !== nextImageHash) {\n      throw Error(`Reverse lookup failed for imageHash ${nextImageHash}`)\n    }\n\n    await this.tracker.saveMigration(this.address, signed, this.contexts)\n\n    return true\n  }\n\n  async signAllMigrations(\n    editConfig: (prevConfig: commons.config.Config) => commons.config.Config\n  ): Promise<{ signedMigrations: Array<any>; failedChains: number[] }> {\n    const failedChains: number[] = []\n    const signedMigrations = await Promise.all(\n      this.networks.map(async n => {\n        try {\n          // Signing migrations for each chain\n          return await this.signMigrations(n.chainId, editConfig)\n        } catch (error) {\n          console.warn(`Failed to sign migrations for chain ${n.chainId}`, error)\n\n          // Adding failed chainId to the failedChains array\n          failedChains.push(n.chainId)\n          // Using null as a placeholder for failed chains\n          return null\n        }\n      })\n    )\n\n    // Filter out null values to get only the successful signed migrations\n    const successfulSignedMigrations = signedMigrations.filter(migration => migration !== null)\n\n    return { signedMigrations: successfulSignedMigrations, failedChains }\n  }\n\n  async isMigratedAllChains(): Promise<{ migratedAllChains: boolean; failedChains: number[] }> {\n    const failedChains: number[] = []\n    const statuses = await Promise.all(\n      this.networks.map(async n => {\n        try {\n          return await this.status(n.chainId)\n        } catch (error) {\n          failedChains.push(n.chainId)\n\n          console.warn(`Failed to get status for chain ${n.chainId}`, error)\n\n          // default to true for failed chains\n          return { fullyMigrated: true }\n        }\n      })\n    )\n\n    const migratedAllChains = statuses.every(s => s.fullyMigrated)\n    return { migratedAllChains, failedChains }\n  }\n\n  async sendSignedTransactions(\n    signedBundle: commons.transaction.IntendedTransactionBundle | commons.transaction.IntendedTransactionBundle[],\n    chainId: ethers.BigNumberish,\n    quote?: FeeQuote,\n    pstatus?: AccountStatus,\n    callback?: (bundle: commons.transaction.IntendedTransactionBundle) => void\n  ): Promise<ethers.TransactionResponse> {\n    if (!Array.isArray(signedBundle)) {\n      return this.sendSignedTransactions([signedBundle], chainId, quote, pstatus, callback)\n    }\n    const status = pstatus || (await this.status(chainId))\n    this.mustBeFullyMigrated(status)\n\n    const decoratedBundle = await this.decorateTransactions(signedBundle, status, chainId)\n    callback?.(decoratedBundle)\n\n    return this.relayer(chainId).relay(decoratedBundle, quote)\n  }\n\n  async fillGasLimits(\n    txs: commons.transaction.Transactionish,\n    chainId: ethers.BigNumberish,\n    status?: AccountStatus\n  ): Promise<commons.transaction.SimulatedTransaction[]> {\n    const wallet = this.walletForStatus(chainId, status || (await this.status(chainId)))\n    return wallet.fillGasLimits(txs)\n  }\n\n  async gasRefundQuotes(\n    txs: commons.transaction.Transactionish,\n    chainId: ethers.BigNumberish,\n    stubSignatureOverrides: Map<string, string>,\n    status?: AccountStatus,\n    options?: {\n      simulate?: boolean\n    }\n  ): Promise<{\n    options: FeeOption[]\n    quote?: FeeQuote\n    decorated: commons.transaction.IntendedTransactionBundle\n  }> {\n    const wstatus = status || (await this.status(chainId))\n    const wallet = this.walletForStatus(chainId, wstatus)\n\n    const predecorated = await this.predecorateTransactions(txs, wstatus, chainId)\n    const transactions = commons.transaction.fromTransactionish(this.address, predecorated)\n\n    // We can't sign the transactions (because we don't want to bother the user)\n    // so we use the latest configuration to build a \"stub\" signature, the relayer\n    // knows to ignore the wallet signatures\n    const stubSignature = wallet.coders.config.buildStubSignature(wallet.config, stubSignatureOverrides)\n\n    // Now we can decorate the transactions as always, but we need to manually build the signed bundle\n    const intentId = ethers.hexlify(ethers.randomBytes(32))\n    const signedBundle: commons.transaction.SignedTransactionBundle = {\n      chainId,\n      intent: {\n        id: intentId,\n        wallet: this.address\n      },\n      signature: stubSignature,\n      transactions,\n      entrypoint: this.address,\n      nonce: 0 // The relayer also ignored the nonce\n    }\n\n    const decoratedBundle = await this.decorateTransactions(signedBundle, wstatus)\n    const data = commons.transaction.encodeBundleExecData(decoratedBundle)\n    const res = await this.relayer(chainId).getFeeOptionsRaw(decoratedBundle.entrypoint, data, options)\n    return { ...res, decorated: decoratedBundle }\n  }\n\n  async prepareTransactions(args: {\n    txs: commons.transaction.Transactionish\n    chainId: ethers.BigNumberish\n    stubSignatureOverrides: Map<string, string>\n    simulateForFeeOptions?: boolean\n  }): Promise<PreparedTransactions> {\n    const status = await this.status(args.chainId)\n\n    const transactions = await this.fillGasLimits(args.txs, args.chainId, status)\n    const gasRefundQuote = await this.gasRefundQuotes(transactions, args.chainId, args.stubSignatureOverrides, status, {\n      simulate: args.simulateForFeeOptions\n    })\n    const flatDecorated = commons.transaction.unwind(this.address, gasRefundQuote.decorated.transactions)\n\n    return {\n      transactions,\n      flatDecorated,\n      feeOptions: gasRefundQuote.options,\n      feeQuote: gasRefundQuote.quote\n    }\n  }\n\n  async sendTransaction(\n    txs: commons.transaction.Transactionish,\n    chainId: ethers.BigNumberish,\n    quote?: FeeQuote,\n    skipPreDecorate: boolean = false,\n    callback?: (bundle: commons.transaction.IntendedTransactionBundle) => void,\n    options?: {\n      nonceSpace?: ethers.BigNumberish\n      serial?: boolean\n    }\n  ): Promise<ethers.TransactionResponse | undefined> {\n    const status = await this.status(chainId)\n\n    const predecorated = skipPreDecorate ? txs : await this.predecorateTransactions(txs, status, chainId)\n    const hasTxs = commons.transaction.fromTransactionish(this.address, predecorated).length > 0\n    const signed = hasTxs ? await this.signTransactions(predecorated, chainId, undefined, options) : undefined\n\n    const childBundles = await this.orchestrator.predecorateSignedTransactions({ chainId })\n\n    const bundles: commons.transaction.SignedTransactionBundle[] = []\n    if (signed !== undefined && signed.transactions.length > 0) {\n      bundles.push(signed)\n    }\n    bundles.push(...childBundles.filter(b => b.transactions.length > 0))\n\n    return this.sendSignedTransactions(bundles, chainId, quote, undefined, callback)\n  }\n\n  async signTypedData(\n    domain: ethers.TypedDataDomain,\n    types: Record<string, Array<ethers.TypedDataField>>,\n    message: Record<string, any>,\n    chainId: ethers.BigNumberish,\n    cantValidateBehavior: 'ignore' | 'eip6492' | 'throw' = 'ignore'\n  ): Promise<string> {\n    const digest = encodeTypedDataDigest({ domain, types, message })\n    return this.signDigest(digest, chainId, true, cantValidateBehavior)\n  }\n\n  async getSigners(): Promise<Array<{ address: string; network: ChainId; weight: number }>> {\n    const last = <T>(ts: T[]): T | undefined => (ts.length ? ts[ts.length - 1] : undefined)\n\n    return (\n      await Promise.all(\n        this.networks.map(async ({ chainId, name }) => {\n          try {\n            const status = await this.status(chainId)\n\n            let latestImageHash = last(status.presignedConfigurations)?.nextImageHash\n            if (!latestImageHash) {\n              if (status.onChain.version !== status.version) {\n                const migration = last(status.signedMigrations)\n                if (migration) {\n                  const { toVersion, toConfig } = migration\n                  const coder = universal.genericCoderFor(toVersion)\n                  latestImageHash = coder.config.imageHashOf(toConfig)\n                }\n              }\n            }\n            if (!latestImageHash) {\n              latestImageHash = status.onChain.imageHash\n            }\n\n            const latestConfig = await this.tracker.configOfImageHash({ imageHash: latestImageHash })\n            if (!latestConfig) {\n              throw new Error(`unable to find config for image hash ${latestImageHash}`)\n            }\n\n            const coder = universal.genericCoderFor(latestConfig.version)\n            const signers = coder.config.signersOf(latestConfig)\n\n            return signers.map(signer => ({ ...signer, network: chainId }))\n          } catch (error) {\n            console.warn(`unable to get signers on network ${chainId} ${name}`, error)\n            return []\n          }\n        })\n      )\n    ).flat()\n  }\n\n  async getAllSigners(): Promise<\n    {\n      address: string\n      weight: number\n      network: number\n      flaggedForRemoval: boolean\n    }[]\n  > {\n    const allSigners: {\n      address: string\n      weight: number\n      network: number\n      flaggedForRemoval: boolean\n    }[] = []\n\n    // We need to get the signers for each status\n    await Promise.all(\n      this.networks.map(async network => {\n        const chainId = network.chainId\n\n        // Getting the status with `longestPath` set to true will give us all the possible configurations\n        // between the current onChain config and the latest config, including the ones \"flagged for removal\"\n        const status = await this.status(chainId, true)\n\n        const fullChain = [\n          status.onChain.imageHash,\n          ...(status.onChain.version !== status.version\n            ? status.signedMigrations.map(m => universal.coderFor(m.toVersion).config.imageHashOf(m.toConfig as any))\n            : []),\n          ...status.presignedConfigurations.map(update => update.nextImageHash)\n        ]\n\n        return Promise.all(\n          fullChain.map(async (nextImageHash, iconf) => {\n            const isLast = iconf === fullChain.length - 1\n            const config = await this.tracker.configOfImageHash({ imageHash: nextImageHash })\n\n            if (!config) {\n              console.warn(`AllSigners may be incomplete, config not found for imageHash ${nextImageHash}`)\n              return\n            }\n\n            const coder = universal.genericCoderFor(config.version)\n            const signers = coder.config.signersOf(config)\n\n            signers.forEach(signer => {\n              const exists = allSigners.find(s => s.address === signer.address && s.network === chainId)\n\n              if (exists && isLast && exists.flaggedForRemoval) {\n                exists.flaggedForRemoval = false\n                return\n              }\n\n              if (exists) return\n\n              allSigners.push({\n                address: signer.address,\n                weight: signer.weight,\n                network: chainId,\n                flaggedForRemoval: !isLast\n              })\n            })\n          })\n        )\n      })\n    )\n\n    return allSigners\n  }\n}\n\nexport function isAccount(value: any): value is Account {\n  return value instanceof Account\n}\n","/* eslint-disable */\n// sequence-indexer v0.4.0 9accea267e7db3d66f40d5e0f27db92eb5a29e2f\n// --\n// Code generated by webrpc-gen@v0.18.6 with typescript generator. DO NOT EDIT.\n//\n// webrpc-gen -schema=indexer.ridl -target=typescript -client -out=./clients/indexer.gen.ts\n\n// WebRPC description and code-gen version\nexport const WebRPCVersion = 'v1'\n\n// Schema version of your RIDL schema\nexport const WebRPCSchemaVersion = 'v0.4.0'\n\n// Schema hash generated from your RIDL schema\nexport const WebRPCSchemaHash = '9accea267e7db3d66f40d5e0f27db92eb5a29e2f'\n\n//\n// Types\n//\n\nexport interface ContractInfo {\n  chainId: number\n  address: string\n  name: string\n  type: string\n  symbol: string\n  decimals?: number\n  logoURI: string\n  deployed: boolean\n  bytecodeHash: string\n  extensions: ContractInfoExtensions\n  updatedAt: string\n}\n\nexport interface ContractInfoExtensions {\n  link: string\n  description: string\n  ogImage: string\n  originChainId: number\n  originAddress: string\n  blacklist: boolean\n  verified: boolean\n  verifiedBy: string\n  featured: boolean\n}\n\nexport interface TokenMetadata {\n  tokenId: string\n  name: string\n  description?: string\n  image?: string\n  video?: string\n  audio?: string\n  properties?: { [key: string]: any }\n  attributes: Array<{ [key: string]: any }>\n  image_data?: string\n  external_url?: string\n  background_color?: string\n  animation_url?: string\n  decimals?: number\n  updatedAt?: string\n  assets?: Array<Asset>\n}\n\nexport interface Asset {\n  id: number\n  collectionId: number\n  tokenId?: string\n  url?: string\n  metadataField: string\n  name?: string\n  filesize?: number\n  mimeType?: string\n  width?: number\n  height?: number\n  updatedAt?: string\n}\n\nexport enum ContractType {\n  UNKNOWN = 'UNKNOWN',\n  NATIVE = 'NATIVE',\n  ERC20 = 'ERC20',\n  ERC721 = 'ERC721',\n  ERC1155 = 'ERC1155',\n  SEQUENCE_WALLET = 'SEQUENCE_WALLET',\n  ERC20_BRIDGE = 'ERC20_BRIDGE',\n  ERC721_BRIDGE = 'ERC721_BRIDGE',\n  ERC1155_BRIDGE = 'ERC1155_BRIDGE',\n  SEQ_MARKETPLACE = 'SEQ_MARKETPLACE'\n}\n\nexport enum EventLogType {\n  UNKNOWN = 'UNKNOWN',\n  BLOCK_ADDED = 'BLOCK_ADDED',\n  BLOCK_REMOVED = 'BLOCK_REMOVED'\n}\n\nexport enum EventLogDataType {\n  EVENT = 'EVENT',\n  TOKEN_TRANSFER = 'TOKEN_TRANSFER',\n  NATIVE_TOKEN_TRANSFER = 'NATIVE_TOKEN_TRANSFER',\n  SEQUENCE_TXN = 'SEQUENCE_TXN'\n}\n\nexport enum OrderStatus {\n  OPEN = 'OPEN',\n  CLOSED = 'CLOSED',\n  CANCELLED = 'CANCELLED'\n}\n\nexport enum TxnTransferType {\n  UNKNOWN = 'UNKNOWN',\n  SEND = 'SEND',\n  RECEIVE = 'RECEIVE'\n}\n\nexport enum TransactionStatus {\n  FAILED = 'FAILED',\n  SUCCESSFUL = 'SUCCESSFUL'\n}\n\nexport enum TransactionType {\n  LegacyTxnType = 'LegacyTxnType',\n  AccessListTxnType = 'AccessListTxnType',\n  DynamicFeeTxnType = 'DynamicFeeTxnType'\n}\n\nexport enum SortOrder {\n  DESC = 'DESC',\n  ASC = 'ASC'\n}\n\nexport interface Version {\n  webrpcVersion: string\n  schemaVersion: string\n  schemaHash: string\n  appVersion: string\n}\n\nexport interface RuntimeStatus {\n  healthOK: boolean\n  indexerEnabled: boolean\n  startTime: string\n  uptime: number\n  ver: string\n  branch: string\n  commitHash: string\n  chainID: number\n  checks: RuntimeChecks\n}\n\nexport interface WALWriterRuntimeStatus {\n  healthOK: boolean\n  startTime: string\n  uptime: number\n  ver: string\n  branch: string\n  commitHash: string\n  chainID: number\n  percentWALWritten: number\n}\n\nexport interface RuntimeChecks {\n  running: boolean\n  runnables: any\n  cgoEnabled: boolean\n  quotaControlEnabled: boolean\n  syncMode: string\n  percentIndexed: number\n  lastBlockNum: number\n  lastBlockNumWithState: number\n  bloomStatus: BloomStatus\n  bond: Bond\n  diskUsage: DiskUsage\n}\n\nexport interface DiskUsage {\n  humanReadable: string\n  used: number\n  size: number\n  percent: number\n  dirs: { [key: string]: string }\n}\n\nexport interface Bond {\n  pebble: PebbleMetrics\n  estimatedDiskUsagePerTable: any\n  estimatedDiskUsageTotal: string\n}\n\nexport interface PebbleMetrics {\n  compactionCount: number\n  compactionEstimatedDebt: number\n  compactionInProgressBytes: number\n  compactionNumInProgress: number\n  compactionMarkedFiles: number\n}\n\nexport interface BloomStatus {\n  enabled: boolean\n  initialized: boolean\n  bloomInitElapsedTime: string\n}\n\nexport interface EtherBalance {\n  accountAddress: string\n  balanceWei: string\n}\n\nexport interface IndexState {\n  chainId: string\n  lastBlockNum: number\n  lastBlockHash: string\n}\n\nexport interface IndexedBlock {\n  blockNumber: number\n  blockShortHash: string\n}\n\nexport interface TxnInfo {\n  from: string\n  to: string\n  value: string\n}\n\nexport interface EventLog {\n  id: number\n  uid: string\n  type: EventLogType\n  blockNumber: number\n  blockHash: string\n  parentBlockHash: string\n  contractAddress: string\n  contractType: ContractType\n  txnHash: string\n  txnIndex: number\n  txnLogIndex: number\n  logDataType: EventLogDataType\n  ts: string\n  txnInfo?: TxnInfo\n  rawLog?: { [key: string]: any }\n  event?: EventDecoded\n}\n\nexport interface EventDecoded {\n  topicHash: string\n  eventSig: string\n  types: Array<string>\n  names: Array<string>\n  values: Array<string>\n}\n\nexport interface TokenBalance {\n  contractType: ContractType\n  contractAddress: string\n  accountAddress: string\n  tokenID?: string\n  balance: string\n  blockHash: string\n  blockNumber: number\n  chainId: number\n  contractInfo?: ContractInfo\n  tokenMetadata?: TokenMetadata\n}\n\nexport interface OrderbookOrder {\n  orderId: string\n  tokenContract: string\n  tokenId: string\n  isListing: boolean\n  quantity: string\n  quantityRemaining: string\n  currencyAddress: string\n  pricePerToken: string\n  expiry: string\n  orderStatus: OrderStatus\n  createdBy: string\n  createdAt: number\n  orderbookContractAddress: string\n}\n\nexport interface OrderbookOrderFilter {\n  isListing?: boolean\n  userAddress?: string\n  tokenIds: Array<string>\n  excludeUserAddress?: string\n}\n\nexport interface TokenHistory {\n  blockNumber: number\n  blockHash: string\n  accountAddress: string\n  contractAddress: string\n  contractType: ContractType\n  fromAddress: string\n  toAddress: string\n  txnHash: string\n  txnIndex: number\n  txnLogIndex: number\n  logData: string\n  tokenIDs: string\n  Amounts: string\n  ts: string\n}\n\nexport interface TokenSupply {\n  tokenID: string\n  supply: string\n  chainId: number\n  contractInfo?: ContractInfo\n  tokenMetadata?: TokenMetadata\n}\n\nexport interface Transaction {\n  txnHash: string\n  blockNumber: number\n  blockHash: string\n  chainId: number\n  metaTxnID?: string\n  transfers?: Array<TxnTransfer>\n  timestamp: string\n}\n\nexport interface TxnTransfer {\n  transferType: TxnTransferType\n  contractAddress: string\n  contractType: ContractType\n  from: string\n  to: string\n  tokenIds?: Array<string>\n  amounts: Array<string>\n  logIndex: number\n  contractInfo?: ContractInfo\n  tokenMetadata?: { [key: string]: TokenMetadata }\n}\n\nexport interface TransactionHistoryFilter {\n  accountAddress?: string\n  contractAddress?: string\n  accountAddresses?: Array<string>\n  contractAddresses?: Array<string>\n  transactionHashes?: Array<string>\n  metaTransactionIDs?: Array<string>\n  fromBlock?: number\n  toBlock?: number\n  tokenID?: string\n}\n\nexport interface TransactionFilter {\n  txnHash?: string\n  from?: string\n  to?: string\n  contractAddress?: string\n  event?: string\n}\n\nexport interface TransactionReceipt {\n  txnHash: string\n  txnStatus: TransactionStatus\n  txnIndex: number\n  txnType: TransactionType\n  blockHash: string\n  blockNumber: number\n  gasUsed: number\n  effectiveGasPrice: string\n  from: string\n  to: string\n  logs: Array<TransactionLog>\n  final: boolean\n  reorged: boolean\n}\n\nexport interface TransactionLog {\n  contractAddress: string\n  topics: Array<string>\n  data: string\n  index: number\n}\n\nexport interface Page {\n  page?: number\n  column?: string\n  before?: any\n  after?: any\n  sort?: Array<SortBy>\n  pageSize?: number\n  more?: boolean\n}\n\nexport interface SortBy {\n  column: string\n  order: SortOrder\n}\n\nexport interface WebhookListener {\n  id: number\n  projectID: number\n  url: string\n  filters: EventFilter\n  name: string\n  updatedAt: string\n  active: boolean\n}\n\nexport interface EventFilter {\n  events?: Array<string>\n  contractAddresses?: Array<string>\n  accounts?: Array<string>\n  tokenIDs?: Array<string>\n}\n\nexport interface TokenBalanceFilter {\n  contractAddress: string\n  sinceBlockNumber: number\n}\n\nexport interface MetadataOptions {\n  verifiedOnly?: boolean\n  unverifiedOnly?: boolean\n  includeContracts?: Array<string>\n}\n\nexport interface Indexer {\n  ping(headers?: object, signal?: AbortSignal): Promise<PingReturn>\n  version(headers?: object, signal?: AbortSignal): Promise<VersionReturn>\n  runtimeStatus(headers?: object, signal?: AbortSignal): Promise<RuntimeStatusReturn>\n  getChainID(headers?: object, signal?: AbortSignal): Promise<GetChainIDReturn>\n  getEtherBalance(args: GetEtherBalanceArgs, headers?: object, signal?: AbortSignal): Promise<GetEtherBalanceReturn>\n  getTokenBalances(args: GetTokenBalancesArgs, headers?: object, signal?: AbortSignal): Promise<GetTokenBalancesReturn>\n  getTokenSupplies(args: GetTokenSuppliesArgs, headers?: object, signal?: AbortSignal): Promise<GetTokenSuppliesReturn>\n  getTokenSuppliesMap(args: GetTokenSuppliesMapArgs, headers?: object, signal?: AbortSignal): Promise<GetTokenSuppliesMapReturn>\n  getBalanceUpdates(args: GetBalanceUpdatesArgs, headers?: object, signal?: AbortSignal): Promise<GetBalanceUpdatesReturn>\n  getTransactionHistory(\n    args: GetTransactionHistoryArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetTransactionHistoryReturn>\n  syncBalance(args: SyncBalanceArgs, headers?: object, signal?: AbortSignal): Promise<SyncBalanceReturn>\n  fetchTransactionReceipt(\n    args: FetchTransactionReceiptArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<FetchTransactionReceiptReturn>\n  getOrderbookOrders(args: GetOrderbookOrdersArgs, headers?: object, signal?: AbortSignal): Promise<GetOrderbookOrdersReturn>\n  getTopOrders(args: GetTopOrdersArgs, headers?: object, signal?: AbortSignal): Promise<GetTopOrdersReturn>\n  fetchTransactionReceiptWithFilter(\n    args: FetchTransactionReceiptWithFilterArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<FetchTransactionReceiptWithFilterReturn>\n  getAllWebhookListeners(\n    args: GetAllWebhookListenersArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetAllWebhookListenersReturn>\n  getWebhookListener(args: GetWebhookListenerArgs, headers?: object, signal?: AbortSignal): Promise<GetWebhookListenerReturn>\n  addWebhookListener(args: AddWebhookListenerArgs, headers?: object, signal?: AbortSignal): Promise<AddWebhookListenerReturn>\n  updateWebhookListener(\n    args: UpdateWebhookListenerArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<UpdateWebhookListenerReturn>\n  removeWebhookListener(\n    args: RemoveWebhookListenerArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<RemoveWebhookListenerReturn>\n  toggleWebhookListener(\n    args: ToggleWebhookListenerArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<ToggleWebhookListenerReturn>\n  pauseAllWebhookListeners(\n    args: PauseAllWebhookListenersArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<PauseAllWebhookListenersReturn>\n  resumeAllWebhookListeners(\n    args: ResumeAllWebhookListenersArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<ResumeAllWebhookListenersReturn>\n  subscribeReceipts(args: SubscribeReceiptsArgs, options: WebrpcStreamOptions<SubscribeReceiptsReturn>): Promise<void>\n  subscribeEvents(args: SubscribeEventsArgs, options: WebrpcStreamOptions<SubscribeEventsReturn>): Promise<void>\n  subscribeBalanceUpdates(\n    args: SubscribeBalanceUpdatesArgs,\n    options: WebrpcStreamOptions<SubscribeBalanceUpdatesReturn>\n  ): Promise<void>\n}\n\nexport interface PingArgs {}\n\nexport interface PingReturn {\n  status: boolean\n}\nexport interface VersionArgs {}\n\nexport interface VersionReturn {\n  version: Version\n}\nexport interface RuntimeStatusArgs {}\n\nexport interface RuntimeStatusReturn {\n  status: RuntimeStatus\n}\nexport interface GetChainIDArgs {}\n\nexport interface GetChainIDReturn {\n  chainID: number\n}\nexport interface GetEtherBalanceArgs {\n  accountAddress?: string\n}\n\nexport interface GetEtherBalanceReturn {\n  balance: EtherBalance\n}\nexport interface GetTokenBalancesArgs {\n  accountAddress?: string\n  contractAddress?: string\n  tokenID?: string\n  includeMetadata?: boolean\n  metadataOptions?: MetadataOptions\n  includeCollectionTokens?: boolean\n  page?: Page\n}\n\nexport interface GetTokenBalancesReturn {\n  page: Page\n  balances: Array<TokenBalance>\n}\nexport interface GetTokenSuppliesArgs {\n  contractAddress: string\n  includeMetadata?: boolean\n  metadataOptions?: MetadataOptions\n  page?: Page\n}\n\nexport interface GetTokenSuppliesReturn {\n  page: Page\n  contractType: ContractType\n  tokenIDs: Array<TokenSupply>\n}\nexport interface GetTokenSuppliesMapArgs {\n  tokenMap: { [key: string]: Array<string> }\n  includeMetadata?: boolean\n  metadataOptions?: MetadataOptions\n}\n\nexport interface GetTokenSuppliesMapReturn {\n  supplies: { [key: string]: Array<TokenSupply> }\n}\nexport interface GetBalanceUpdatesArgs {\n  contractAddress: string\n  lastBlockNumber: number\n  lastBlockHash?: string\n  page?: Page\n}\n\nexport interface GetBalanceUpdatesReturn {\n  page: Page\n  balances: Array<TokenBalance>\n}\nexport interface GetTransactionHistoryArgs {\n  filter: TransactionHistoryFilter\n  page?: Page\n  includeMetadata?: boolean\n  metadataOptions?: MetadataOptions\n}\n\nexport interface GetTransactionHistoryReturn {\n  page: Page\n  transactions: Array<Transaction>\n}\nexport interface SyncBalanceArgs {\n  accountAddress: string\n  contractAddress: string\n  tokenID?: string\n}\n\nexport interface SyncBalanceReturn {}\nexport interface FetchTransactionReceiptArgs {\n  txnHash: string\n  maxBlockWait?: number\n}\n\nexport interface FetchTransactionReceiptReturn {\n  receipt: TransactionReceipt\n}\nexport interface GetOrderbookOrdersArgs {\n  page?: Page\n  orderbookContractAddress: string\n  collectionAddress: string\n  currencyAddresses: Array<string>\n  filters: Array<OrderbookOrderFilter>\n  orderStatuses: Array<OrderStatus>\n  beforeExpiryTimestamp: number\n}\n\nexport interface GetOrderbookOrdersReturn {\n  page?: Page\n  orders: Array<OrderbookOrder>\n}\nexport interface GetTopOrdersArgs {\n  orderbookContractAddress: string\n  collectionAddress: string\n  currencyAddresses: Array<string>\n  tokenIDs: Array<string>\n  isListing: boolean\n  priceSort: SortOrder\n  excludeUser?: string\n}\n\nexport interface GetTopOrdersReturn {\n  orders: Array<OrderbookOrder>\n}\nexport interface FetchTransactionReceiptWithFilterArgs {\n  filter: TransactionFilter\n  maxBlockWait?: number\n}\n\nexport interface FetchTransactionReceiptWithFilterReturn {\n  receipt: TransactionReceipt\n}\nexport interface GetAllWebhookListenersArgs {\n  projectId?: number\n}\n\nexport interface GetAllWebhookListenersReturn {\n  listeners: Array<WebhookListener>\n}\nexport interface GetWebhookListenerArgs {\n  id: number\n  projectId?: number\n}\n\nexport interface GetWebhookListenerReturn {\n  listener: WebhookListener\n}\nexport interface AddWebhookListenerArgs {\n  url: string\n  filters: EventFilter\n  projectId?: number\n}\n\nexport interface AddWebhookListenerReturn {\n  status: boolean\n  listener: WebhookListener\n}\nexport interface UpdateWebhookListenerArgs {\n  listener: WebhookListener\n  projectId?: number\n}\n\nexport interface UpdateWebhookListenerReturn {\n  status: boolean\n}\nexport interface RemoveWebhookListenerArgs {\n  id: number\n  projectId?: number\n}\n\nexport interface RemoveWebhookListenerReturn {\n  status: boolean\n}\nexport interface ToggleWebhookListenerArgs {\n  id: number\n  projectId?: number\n}\n\nexport interface ToggleWebhookListenerReturn {\n  webhookListener: WebhookListener\n}\nexport interface PauseAllWebhookListenersArgs {\n  projectId?: number\n}\n\nexport interface PauseAllWebhookListenersReturn {\n  status: boolean\n}\nexport interface ResumeAllWebhookListenersArgs {\n  projectId?: number\n}\n\nexport interface ResumeAllWebhookListenersReturn {\n  status: boolean\n}\nexport interface SubscribeReceiptsArgs {\n  filter: TransactionFilter\n}\n\nexport interface SubscribeReceiptsReturn {\n  receipt: TransactionReceipt\n}\nexport interface SubscribeEventsArgs {\n  filter: EventFilter\n}\n\nexport interface SubscribeEventsReturn {\n  log: EventLog\n}\nexport interface SubscribeBalanceUpdatesArgs {\n  contractAddress: string\n}\n\nexport interface SubscribeBalanceUpdatesReturn {\n  balance: TokenBalance\n}\n\n//\n// Client\n//\nexport class Indexer implements Indexer {\n  protected hostname: string\n  protected fetch: Fetch\n  protected path = '/rpc/Indexer/'\n\n  constructor(hostname: string, fetch: Fetch) {\n    this.hostname = hostname\n    this.fetch = (input: RequestInfo, init?: RequestInit) => fetch(input, init)\n  }\n\n  private url(name: string): string {\n    return this.hostname + this.path + name\n  }\n\n  ping = (headers?: object, signal?: AbortSignal): Promise<PingReturn> => {\n    return this.fetch(this.url('Ping'), createHTTPRequest({}, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  version = (headers?: object, signal?: AbortSignal): Promise<VersionReturn> => {\n    return this.fetch(this.url('Version'), createHTTPRequest({}, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            version: <Version>_data.version\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  runtimeStatus = (headers?: object, signal?: AbortSignal): Promise<RuntimeStatusReturn> => {\n    return this.fetch(this.url('RuntimeStatus'), createHTTPRequest({}, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <RuntimeStatus>_data.status\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getChainID = (headers?: object, signal?: AbortSignal): Promise<GetChainIDReturn> => {\n    return this.fetch(this.url('GetChainID'), createHTTPRequest({}, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            chainID: <number>_data.chainID\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getEtherBalance = (args: GetEtherBalanceArgs, headers?: object, signal?: AbortSignal): Promise<GetEtherBalanceReturn> => {\n    return this.fetch(this.url('GetEtherBalance'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            balance: <EtherBalance>_data.balance\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getTokenBalances = (args: GetTokenBalancesArgs, headers?: object, signal?: AbortSignal): Promise<GetTokenBalancesReturn> => {\n    return this.fetch(this.url('GetTokenBalances'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            page: <Page>_data.page,\n            balances: <Array<TokenBalance>>_data.balances\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getTokenSupplies = (args: GetTokenSuppliesArgs, headers?: object, signal?: AbortSignal): Promise<GetTokenSuppliesReturn> => {\n    return this.fetch(this.url('GetTokenSupplies'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            page: <Page>_data.page,\n            contractType: <ContractType>_data.contractType,\n            tokenIDs: <Array<TokenSupply>>_data.tokenIDs\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getTokenSuppliesMap = (\n    args: GetTokenSuppliesMapArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetTokenSuppliesMapReturn> => {\n    return this.fetch(this.url('GetTokenSuppliesMap'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            supplies: <{ [key: string]: Array<TokenSupply> }>_data.supplies\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getBalanceUpdates = (args: GetBalanceUpdatesArgs, headers?: object, signal?: AbortSignal): Promise<GetBalanceUpdatesReturn> => {\n    return this.fetch(this.url('GetBalanceUpdates'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            page: <Page>_data.page,\n            balances: <Array<TokenBalance>>_data.balances\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getTransactionHistory = (\n    args: GetTransactionHistoryArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetTransactionHistoryReturn> => {\n    return this.fetch(this.url('GetTransactionHistory'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            page: <Page>_data.page,\n            transactions: <Array<Transaction>>_data.transactions\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  syncBalance = (args: SyncBalanceArgs, headers?: object, signal?: AbortSignal): Promise<SyncBalanceReturn> => {\n    return this.fetch(this.url('SyncBalance'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {}\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  fetchTransactionReceipt = (\n    args: FetchTransactionReceiptArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<FetchTransactionReceiptReturn> => {\n    return this.fetch(this.url('FetchTransactionReceipt'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            receipt: <TransactionReceipt>_data.receipt\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getOrderbookOrders = (\n    args: GetOrderbookOrdersArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetOrderbookOrdersReturn> => {\n    return this.fetch(this.url('GetOrderbookOrders'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            page: <Page>_data.page,\n            orders: <Array<OrderbookOrder>>_data.orders\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getTopOrders = (args: GetTopOrdersArgs, headers?: object, signal?: AbortSignal): Promise<GetTopOrdersReturn> => {\n    return this.fetch(this.url('GetTopOrders'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            orders: <Array<OrderbookOrder>>_data.orders\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  fetchTransactionReceiptWithFilter = (\n    args: FetchTransactionReceiptWithFilterArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<FetchTransactionReceiptWithFilterReturn> => {\n    return this.fetch(this.url('FetchTransactionReceiptWithFilter'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            receipt: <TransactionReceipt>_data.receipt\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getAllWebhookListeners = (\n    args: GetAllWebhookListenersArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetAllWebhookListenersReturn> => {\n    return this.fetch(this.url('GetAllWebhookListeners'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            listeners: <Array<WebhookListener>>_data.listeners\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getWebhookListener = (\n    args: GetWebhookListenerArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetWebhookListenerReturn> => {\n    return this.fetch(this.url('GetWebhookListener'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            listener: <WebhookListener>_data.listener\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  addWebhookListener = (\n    args: AddWebhookListenerArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<AddWebhookListenerReturn> => {\n    return this.fetch(this.url('AddWebhookListener'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status,\n            listener: <WebhookListener>_data.listener\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  updateWebhookListener = (\n    args: UpdateWebhookListenerArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<UpdateWebhookListenerReturn> => {\n    return this.fetch(this.url('UpdateWebhookListener'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  removeWebhookListener = (\n    args: RemoveWebhookListenerArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<RemoveWebhookListenerReturn> => {\n    return this.fetch(this.url('RemoveWebhookListener'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  toggleWebhookListener = (\n    args: ToggleWebhookListenerArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<ToggleWebhookListenerReturn> => {\n    return this.fetch(this.url('ToggleWebhookListener'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            webhookListener: <WebhookListener>_data.webhookListener\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  pauseAllWebhookListeners = (\n    args: PauseAllWebhookListenersArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<PauseAllWebhookListenersReturn> => {\n    return this.fetch(this.url('PauseAllWebhookListeners'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  resumeAllWebhookListeners = (\n    args: ResumeAllWebhookListenersArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<ResumeAllWebhookListenersReturn> => {\n    return this.fetch(this.url('ResumeAllWebhookListeners'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  subscribeReceipts = (args: SubscribeReceiptsArgs, options: WebrpcStreamOptions<SubscribeReceiptsReturn>): Promise<void> => {\n    const _fetch = () =>\n      this.fetch(this.url('SubscribeReceipts'), createHTTPRequest(args, options.headers, options.signal)).then(\n        async res => {\n          await sseResponse(res, options, _fetch)\n        },\n        error => {\n          options.onError(error, _fetch)\n        }\n      )\n    return _fetch()\n  }\n  subscribeEvents = (args: SubscribeEventsArgs, options: WebrpcStreamOptions<SubscribeEventsReturn>): Promise<void> => {\n    const _fetch = () =>\n      this.fetch(this.url('SubscribeEvents'), createHTTPRequest(args, options.headers, options.signal)).then(\n        async res => {\n          await sseResponse(res, options, _fetch)\n        },\n        error => {\n          options.onError(error, _fetch)\n        }\n      )\n    return _fetch()\n  }\n  subscribeBalanceUpdates = (\n    args: SubscribeBalanceUpdatesArgs,\n    options: WebrpcStreamOptions<SubscribeBalanceUpdatesReturn>\n  ): Promise<void> => {\n    const _fetch = () =>\n      this.fetch(this.url('SubscribeBalanceUpdates'), createHTTPRequest(args, options.headers, options.signal)).then(\n        async res => {\n          await sseResponse(res, options, _fetch)\n        },\n        error => {\n          options.onError(error, _fetch)\n        }\n      )\n    return _fetch()\n  }\n}\n\nconst sseResponse = async (res: Response, options: WebrpcStreamOptions<any>, retryFetch: () => Promise<void>) => {\n  const { onMessage, onOpen, onClose, onError } = options\n\n  if (!res.ok) {\n    try {\n      await buildResponse(res)\n    } catch (error) {\n      // @ts-ignore\n      onError(error, retryFetch)\n    }\n    return\n  }\n\n  if (!res.body) {\n    onError(\n      WebrpcBadResponseError.new({\n        status: res.status,\n        cause: 'Invalid response, missing body'\n      }),\n      retryFetch\n    )\n    return\n  }\n\n  onOpen && onOpen()\n\n  const reader = res.body.getReader()\n  const decoder = new TextDecoder()\n  let buffer = ''\n  let lastReadTime = Date.now()\n  const timeout = (10 + 1) * 1000\n  let intervalId: any\n\n  try {\n    intervalId = setInterval(() => {\n      if (Date.now() - lastReadTime > timeout) {\n        throw WebrpcStreamLostError.new({ cause: 'Stream timed out' })\n      }\n    }, timeout)\n\n    while (true) {\n      let value\n      let done\n      try {\n        ;({ value, done } = await reader.read())\n        lastReadTime = Date.now()\n        buffer += decoder.decode(value, { stream: true })\n      } catch (error) {\n        let message = ''\n        if (error instanceof Error) {\n          message = error.message\n        }\n\n        if (error instanceof DOMException && error.name === 'AbortError') {\n          onError(\n            WebrpcRequestFailedError.new({\n              message: 'AbortError',\n              cause: `AbortError: ${message}`\n            }),\n            () => {\n              throw new Error('Abort signal cannot be used to reconnect')\n            }\n          )\n        } else {\n          onError(\n            WebrpcStreamLostError.new({\n              cause: `reader.read(): ${message}`\n            }),\n            retryFetch\n          )\n        }\n        return\n      }\n\n      let lines = buffer.split('\\n')\n      for (let i = 0; i < lines.length - 1; i++) {\n        if (lines[i].length == 0) {\n          continue\n        }\n        let data: any\n        try {\n          data = JSON.parse(lines[i])\n          if (data.hasOwnProperty('webrpcError')) {\n            const error = data.webrpcError\n            const code: number = typeof error.code === 'number' ? error.code : 0\n            onError((webrpcErrorByCode[code] || WebrpcError).new(error), retryFetch)\n            return\n          }\n        } catch (error) {\n          if (error instanceof Error && error.message === 'Abort signal cannot be used to reconnect') {\n            throw error\n          }\n          onError(\n            WebrpcBadResponseError.new({\n              status: res.status,\n              // @ts-ignore\n              cause: `JSON.parse(): ${error.message}`\n            }),\n            retryFetch\n          )\n        }\n        onMessage(data)\n      }\n\n      if (!done) {\n        buffer = lines[lines.length - 1]\n        continue\n      }\n\n      onClose && onClose()\n      return\n    }\n  } catch (error) {\n    // @ts-ignore\n    if (error instanceof WebrpcStreamLostError) {\n      onError(error, retryFetch)\n    } else {\n      throw error\n    }\n  } finally {\n    clearInterval(intervalId)\n  }\n}\n\nconst createHTTPRequest = (body: object = {}, headers: object = {}, signal: AbortSignal | null = null): object => {\n  return {\n    method: 'POST',\n    headers: { ...headers, 'Content-Type': 'application/json' },\n    body: JSON.stringify(body || {}),\n    signal\n  }\n}\n\nconst buildResponse = (res: Response): Promise<any> => {\n  return res.text().then(text => {\n    let data\n    try {\n      data = JSON.parse(text)\n    } catch (error) {\n      let message = ''\n      if (error instanceof Error) {\n        message = error.message\n      }\n      throw WebrpcBadResponseError.new({\n        status: res.status,\n        cause: `JSON.parse(): ${message}: response text: ${text}`\n      })\n    }\n    if (!res.ok) {\n      const code: number = typeof data.code === 'number' ? data.code : 0\n      throw (webrpcErrorByCode[code] || WebrpcError).new(data)\n    }\n    return data\n  })\n}\n\n//\n// Errors\n//\n\nexport class WebrpcError extends Error {\n  name: string\n  code: number\n  message: string\n  status: number\n  cause?: string\n\n  /** @deprecated Use message instead of msg. Deprecated in webrpc v0.11.0. */\n  msg: string\n\n  constructor(name: string, code: number, message: string, status: number, cause?: string) {\n    super(message)\n    this.name = name || 'WebrpcError'\n    this.code = typeof code === 'number' ? code : 0\n    this.message = message || `endpoint error ${this.code}`\n    this.msg = this.message\n    this.status = typeof status === 'number' ? status : 0\n    this.cause = cause\n    Object.setPrototypeOf(this, WebrpcError.prototype)\n  }\n\n  static new(payload: any): WebrpcError {\n    return new this(payload.error, payload.code, payload.message || payload.msg, payload.status, payload.cause)\n  }\n}\n\n// Webrpc errors\n\nexport class WebrpcEndpointError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcEndpoint',\n    code: number = 0,\n    message: string = 'endpoint error',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcEndpointError.prototype)\n  }\n}\n\nexport class WebrpcRequestFailedError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcRequestFailed',\n    code: number = -1,\n    message: string = 'request failed',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcRequestFailedError.prototype)\n  }\n}\n\nexport class WebrpcBadRouteError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcBadRoute',\n    code: number = -2,\n    message: string = 'bad route',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcBadRouteError.prototype)\n  }\n}\n\nexport class WebrpcBadMethodError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcBadMethod',\n    code: number = -3,\n    message: string = 'bad method',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcBadMethodError.prototype)\n  }\n}\n\nexport class WebrpcBadRequestError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcBadRequest',\n    code: number = -4,\n    message: string = 'bad request',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcBadRequestError.prototype)\n  }\n}\n\nexport class WebrpcBadResponseError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcBadResponse',\n    code: number = -5,\n    message: string = 'bad response',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcBadResponseError.prototype)\n  }\n}\n\nexport class WebrpcServerPanicError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcServerPanic',\n    code: number = -6,\n    message: string = 'server panic',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcServerPanicError.prototype)\n  }\n}\n\nexport class WebrpcInternalErrorError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcInternalError',\n    code: number = -7,\n    message: string = 'internal error',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcInternalErrorError.prototype)\n  }\n}\n\nexport class WebrpcClientDisconnectedError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcClientDisconnected',\n    code: number = -8,\n    message: string = 'client disconnected',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcClientDisconnectedError.prototype)\n  }\n}\n\nexport class WebrpcStreamLostError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcStreamLost',\n    code: number = -9,\n    message: string = 'stream lost',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcStreamLostError.prototype)\n  }\n}\n\nexport class WebrpcStreamFinishedError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcStreamFinished',\n    code: number = -10,\n    message: string = 'stream finished',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcStreamFinishedError.prototype)\n  }\n}\n\n// Schema errors\n\nexport class UnauthorizedError extends WebrpcError {\n  constructor(\n    name: string = 'Unauthorized',\n    code: number = 1000,\n    message: string = 'Unauthorized access',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, UnauthorizedError.prototype)\n  }\n}\n\nexport class PermissionDeniedError extends WebrpcError {\n  constructor(\n    name: string = 'PermissionDenied',\n    code: number = 1001,\n    message: string = 'Permission denied',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, PermissionDeniedError.prototype)\n  }\n}\n\nexport class SessionExpiredError extends WebrpcError {\n  constructor(\n    name: string = 'SessionExpired',\n    code: number = 1002,\n    message: string = 'Session expired',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, SessionExpiredError.prototype)\n  }\n}\n\nexport class MethodNotFoundError extends WebrpcError {\n  constructor(\n    name: string = 'MethodNotFound',\n    code: number = 1003,\n    message: string = 'Method not found',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, MethodNotFoundError.prototype)\n  }\n}\n\nexport class RequestConflictError extends WebrpcError {\n  constructor(\n    name: string = 'RequestConflict',\n    code: number = 1004,\n    message: string = 'Conflict with target resource',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, RequestConflictError.prototype)\n  }\n}\n\nexport class AbortedError extends WebrpcError {\n  constructor(\n    name: string = 'Aborted',\n    code: number = 1005,\n    message: string = 'Request aborted',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, AbortedError.prototype)\n  }\n}\n\nexport class TimeoutError extends WebrpcError {\n  constructor(\n    name: string = 'Timeout',\n    code: number = 2000,\n    message: string = 'Request timed out',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, TimeoutError.prototype)\n  }\n}\n\nexport class InvalidArgumentError extends WebrpcError {\n  constructor(\n    name: string = 'InvalidArgument',\n    code: number = 2001,\n    message: string = 'Invalid argument',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, InvalidArgumentError.prototype)\n  }\n}\n\nexport class UnavailableError extends WebrpcError {\n  constructor(\n    name: string = 'Unavailable',\n    code: number = 2002,\n    message: string = 'Unavailable resource',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, UnavailableError.prototype)\n  }\n}\n\nexport class QueryFailedError extends WebrpcError {\n  constructor(\n    name: string = 'QueryFailed',\n    code: number = 2003,\n    message: string = 'Query failed',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, QueryFailedError.prototype)\n  }\n}\n\nexport class ResourceExhaustedError extends WebrpcError {\n  constructor(\n    name: string = 'ResourceExhausted',\n    code: number = 2004,\n    message: string = 'Resource exhausted',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, ResourceExhaustedError.prototype)\n  }\n}\n\nexport class NotFoundError extends WebrpcError {\n  constructor(\n    name: string = 'NotFound',\n    code: number = 3000,\n    message: string = 'Resource not found',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, NotFoundError.prototype)\n  }\n}\n\nexport class ProjectNotFoundError extends WebrpcError {\n  constructor(\n    name: string = 'ProjectNotFound',\n    code: number = 3002,\n    message: string = 'Project not found',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, ProjectNotFoundError.prototype)\n  }\n}\n\nexport class MetadataCallFailedError extends WebrpcError {\n  constructor(\n    name: string = 'MetadataCallFailed',\n    code: number = 3003,\n    message: string = 'Metadata service call failed',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, MetadataCallFailedError.prototype)\n  }\n}\n\nexport enum errors {\n  WebrpcEndpoint = 'WebrpcEndpoint',\n  WebrpcRequestFailed = 'WebrpcRequestFailed',\n  WebrpcBadRoute = 'WebrpcBadRoute',\n  WebrpcBadMethod = 'WebrpcBadMethod',\n  WebrpcBadRequest = 'WebrpcBadRequest',\n  WebrpcBadResponse = 'WebrpcBadResponse',\n  WebrpcServerPanic = 'WebrpcServerPanic',\n  WebrpcInternalError = 'WebrpcInternalError',\n  WebrpcClientDisconnected = 'WebrpcClientDisconnected',\n  WebrpcStreamLost = 'WebrpcStreamLost',\n  WebrpcStreamFinished = 'WebrpcStreamFinished',\n  Unauthorized = 'Unauthorized',\n  PermissionDenied = 'PermissionDenied',\n  SessionExpired = 'SessionExpired',\n  MethodNotFound = 'MethodNotFound',\n  RequestConflict = 'RequestConflict',\n  Aborted = 'Aborted',\n  Timeout = 'Timeout',\n  InvalidArgument = 'InvalidArgument',\n  Unavailable = 'Unavailable',\n  QueryFailed = 'QueryFailed',\n  ResourceExhausted = 'ResourceExhausted',\n  NotFound = 'NotFound',\n  ProjectNotFound = 'ProjectNotFound',\n  MetadataCallFailed = 'MetadataCallFailed'\n}\n\nconst webrpcErrorByCode: { [code: number]: any } = {\n  [0]: WebrpcEndpointError,\n  [-1]: WebrpcRequestFailedError,\n  [-2]: WebrpcBadRouteError,\n  [-3]: WebrpcBadMethodError,\n  [-4]: WebrpcBadRequestError,\n  [-5]: WebrpcBadResponseError,\n  [-6]: WebrpcServerPanicError,\n  [-7]: WebrpcInternalErrorError,\n  [-8]: WebrpcClientDisconnectedError,\n  [-9]: WebrpcStreamLostError,\n  [-10]: WebrpcStreamFinishedError,\n  [1000]: UnauthorizedError,\n  [1001]: PermissionDeniedError,\n  [1002]: SessionExpiredError,\n  [1003]: MethodNotFoundError,\n  [1004]: RequestConflictError,\n  [1005]: AbortedError,\n  [2000]: TimeoutError,\n  [2001]: InvalidArgumentError,\n  [2002]: UnavailableError,\n  [2003]: QueryFailedError,\n  [2004]: ResourceExhaustedError,\n  [3000]: NotFoundError,\n  [3002]: ProjectNotFoundError,\n  [3003]: MetadataCallFailedError\n}\n\nexport type Fetch = (input: RequestInfo, init?: RequestInit) => Promise<Response>\n\nexport interface WebrpcStreamOptions<T> extends WebrpcOptions {\n  onMessage: (message: T) => void\n  onError: (error: WebrpcError, reconnect: () => void) => void\n  onOpen?: () => void\n  onClose?: () => void\n}\nexport interface WebrpcOptions {\n  headers?: HeadersInit\n  signal?: AbortSignal\n}\n","export * from './indexer.gen'\n\nimport { Indexer as IndexerRpc } from './indexer.gen'\n\nconst fetch = globalThis.fetch\n\nexport class SequenceIndexer extends IndexerRpc {\n  constructor(\n    hostname: string,\n    public projectAccessKey?: string,\n    public jwtAuth?: string\n  ) {\n    super(hostname.endsWith('/') ? hostname.slice(0, -1) : hostname, fetch)\n    this.fetch = this._fetch\n  }\n\n  _fetch = (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n    // automatically include jwt and access key auth header to requests\n    // if its been set on the api client\n    const headers: { [key: string]: any } = {}\n\n    const jwtAuth = this.jwtAuth\n    const projectAccessKey = this.projectAccessKey\n\n    if (jwtAuth && jwtAuth.length > 0) {\n      headers['Authorization'] = `BEARER ${jwtAuth}`\n    }\n\n    if (projectAccessKey && projectAccessKey.length > 0) {\n      headers['X-Access-Key'] = projectAccessKey\n    }\n\n    // before the request is made\n    init!.headers = { ...init!.headers, ...headers }\n\n    return fetch(input, init)\n  }\n}\n","/* eslint-disable */\n// sequence-metadata v0.4.0 9d0976f6ff345b6a688b69cff647454e7fd0e3a6\n// --\n// Code generated by webrpc-gen@v0.18.6 with typescript generator. DO NOT EDIT.\n//\n// webrpc-gen -schema=metadata.ridl -target=typescript -client -out=./clients/metadata.gen.ts\n\n// WebRPC description and code-gen version\nexport const WebRPCVersion = 'v1'\n\n// Schema version of your RIDL schema\nexport const WebRPCSchemaVersion = 'v0.4.0'\n\n// Schema hash generated from your RIDL schema\nexport const WebRPCSchemaHash = '9d0976f6ff345b6a688b69cff647454e7fd0e3a6'\n\n//\n// Types\n//\n\nexport enum ContractType {\n  UNKNOWN = 'UNKNOWN',\n  ERC20 = 'ERC20',\n  ERC721 = 'ERC721',\n  ERC1155 = 'ERC1155'\n}\n\nexport enum PropertyType {\n  INT = 'INT',\n  STRING = 'STRING',\n  ARRAY = 'ARRAY',\n  GENERIC = 'GENERIC'\n}\n\nexport enum SwapType {\n  UNKNOWN = 'UNKNOWN',\n  BUY = 'BUY',\n  SELL = 'SELL'\n}\n\nexport enum TaskStatus {\n  PENDING = 'PENDING',\n  PAUSED = 'PAUSED',\n  FAILED = 'FAILED',\n  COMPLETED = 'COMPLETED',\n  DISABLED = 'DISABLED'\n}\n\nexport interface Version {\n  webrpcVersion: string\n  schemaVersion: string\n  schemaHash: string\n  appVersion: string\n}\n\nexport interface RuntimeStatus {\n  healthOK: boolean\n  startTime: string\n  uptime: number\n  ver: string\n  branch: string\n  commitHash: string\n  checks: RuntimeChecks\n}\n\nexport interface RuntimeChecks {}\n\nexport interface ContractIndex {\n  chainId: number\n  address: string\n  type: ContractType\n  metadata: { [key: string]: any }\n  contentHash: number\n  deployed: boolean\n  bytecodeHash: string\n  notFound: boolean\n  updatedAt: string\n}\n\nexport interface TokenIndex {\n  key: string\n  chainId: number\n  contractAddress: string\n  tokenId: string\n  metadata: { [key: string]: any }\n  notFound?: boolean\n  lastFetched?: string\n  fetchCount?: number\n  updatedAt: string\n}\n\nexport interface ContractInfo {\n  chainId: number\n  address: string\n  name: string\n  type: string\n  symbol: string\n  decimals?: number\n  logoURI: string\n  deployed: boolean\n  bytecodeHash: string\n  extensions: ContractInfoExtensions\n  updatedAt: string\n}\n\nexport interface ContractInfoExtensions {\n  link: string\n  description: string\n  ogImage: string\n  ogName: string\n  originChainId: number\n  originAddress: string\n  blacklist: boolean\n  verified: boolean\n  verifiedBy: string\n  featured: boolean\n  private: boolean\n}\n\nexport interface TokenMetadata {\n  tokenId: string\n  name: string\n  description?: string\n  image?: string\n  video?: string\n  audio?: string\n  properties?: { [key: string]: any }\n  attributes: Array<{ [key: string]: any }>\n  image_data?: string\n  external_url?: string\n  background_color?: string\n  animation_url?: string\n  decimals?: number\n  updatedAt?: string\n  assets?: Array<Asset>\n}\n\nexport interface PropertyFilter {\n  name: string\n  type: PropertyType\n  min?: number\n  max?: number\n  values?: Array<any>\n}\n\nexport interface Filter {\n  text?: string\n  properties?: Array<PropertyFilter>\n}\n\nexport interface Collection {\n  id: number\n  projectId: number\n  metadata: CollectionMetadata\n  private: boolean\n  revealKey?: string\n  tokenCount?: number\n  createdAt?: string\n  updatedAt?: string\n  deletedAt?: string\n  baseURIs?: CollectionBaseURIs\n  assets?: Array<Asset>\n}\n\nexport interface CollectionMetadata {\n  name: string\n  description?: string\n  image?: string\n  external_link?: string\n  properties?: { [key: string]: any }\n  attributes?: Array<{ [key: string]: any }>\n}\n\nexport interface CollectionBaseURIs {\n  contractMetadataURI: string\n  tokenMetadataURI: string\n}\n\nexport interface ContractCollection {\n  id: number\n  chainId: number\n  contractAddress: string\n  collectionId: number\n}\n\nexport interface Asset {\n  id: number\n  collectionId: number\n  tokenId?: string\n  url?: string\n  metadataField: string\n  name?: string\n  filesize?: number\n  mimeType?: string\n  width?: number\n  height?: number\n  updatedAt?: string\n}\n\nexport interface Token {\n  collectionId: number\n  tokenId: string\n  metadata: TokenMetadata\n  private: boolean\n  updatedAt?: string\n}\n\nexport interface GetNiftyswapUnitPricesRequest {\n  swapType: SwapType\n  ids: Array<string>\n  amounts: Array<string>\n}\n\nexport interface GetNiftyswapUnitPricesResponse {\n  unitPrice: string\n  unitAmount: string\n  availableAmount: string\n}\n\nexport interface Page {\n  page?: number\n  column?: string\n  before?: any\n  after?: any\n  pageSize?: number\n  more?: boolean\n}\n\nexport interface TaskRunner {\n  id: number\n  workGroup: string\n  runAt: string\n}\n\nexport interface Task {\n  id: number\n  queue: string\n  status?: TaskStatus\n  try: number\n  runAt?: string\n  lastRanAt?: string\n  createdAt?: string\n  payload: Array<string>\n  hash?: string\n}\n\nexport interface Metadata {\n  ping(headers?: object, signal?: AbortSignal): Promise<PingReturn>\n  version(headers?: object, signal?: AbortSignal): Promise<VersionReturn>\n  runtimeStatus(headers?: object, signal?: AbortSignal): Promise<RuntimeStatusReturn>\n  getTokenMetadata(args: GetTokenMetadataArgs, headers?: object, signal?: AbortSignal): Promise<GetTokenMetadataReturn>\n  refreshTokenMetadata(\n    args: RefreshTokenMetadataArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<RefreshTokenMetadataReturn>\n  enqueueTokensForRefresh(\n    args: EnqueueTokensForRefreshArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<EnqueueTokensForRefreshReturn>\n  getTokenRefreshStatus(\n    args: GetTokenRefreshStatusArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetTokenRefreshStatusReturn>\n  getTokenRefreshResult(\n    args: GetTokenRefreshResultArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetTokenRefreshResultReturn>\n  cancelRefreshJob(args: CancelRefreshJobArgs, headers?: object, signal?: AbortSignal): Promise<CancelRefreshJobReturn>\n  getTokenMetadataBatch(\n    args: GetTokenMetadataBatchArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetTokenMetadataBatchReturn>\n  searchTokenMetadata(args: SearchTokenMetadataArgs, headers?: object, signal?: AbortSignal): Promise<SearchTokenMetadataReturn>\n  searchTokenIDs(args: SearchTokenIDsArgs, headers?: object, signal?: AbortSignal): Promise<SearchTokenIDsReturn>\n  tokenCollectionFilters(\n    args: TokenCollectionFiltersArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<TokenCollectionFiltersReturn>\n  getContractInfo(args: GetContractInfoArgs, headers?: object, signal?: AbortSignal): Promise<GetContractInfoReturn>\n  getContractInfoBatch(\n    args: GetContractInfoBatchArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetContractInfoBatchReturn>\n  searchContractInfo(args: SearchContractInfoArgs, headers?: object, signal?: AbortSignal): Promise<SearchContractInfoReturn>\n  searchContractInfoBatch(\n    args: SearchContractInfoBatchArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<SearchContractInfoBatchReturn>\n  searchMetadata(args: SearchMetadataArgs, headers?: object, signal?: AbortSignal): Promise<SearchMetadataReturn>\n  searchTokens(args: SearchTokensArgs, headers?: object, signal?: AbortSignal): Promise<SearchTokensReturn>\n  searchContracts(args: SearchContractsArgs, headers?: object, signal?: AbortSignal): Promise<SearchContractsReturn>\n  getNiftyswapTokenQuantity(\n    args: GetNiftyswapTokenQuantityArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetNiftyswapTokenQuantityReturn>\n  getNiftyswapUnitPrices(\n    args: GetNiftyswapUnitPricesArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetNiftyswapUnitPricesReturn>\n  getNiftyswapUnitPricesWithQuantities(\n    args: GetNiftyswapUnitPricesWithQuantitiesArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetNiftyswapUnitPricesWithQuantitiesReturn>\n  addContractToMintMonitor(\n    args: AddContractToMintMonitorArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<AddContractToMintMonitorReturn>\n  removeContractFromMintMonitor(\n    args: RemoveContractFromMintMonitorArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<RemoveContractFromMintMonitorReturn>\n  mintMonitorJobStatus(\n    args: MintMonitorJobStatusArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<MintMonitorJobStatusReturn>\n  mintMonitorTriggerJob(\n    args: MintMonitorTriggerJobArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<MintMonitorTriggerJobReturn>\n  syncContractTokens(args: SyncContractTokensArgs, headers?: object, signal?: AbortSignal): Promise<SyncContractTokensReturn>\n  abortContractSync(args: AbortContractSyncArgs, headers?: object, signal?: AbortSignal): Promise<AbortContractSyncReturn>\n  contractSyncJobStatus(\n    args: ContractSyncJobStatusArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<ContractSyncJobStatusReturn>\n  directoryGetNetworks(\n    args: DirectoryGetNetworksArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<DirectoryGetNetworksReturn>\n  directoryGetCollections(\n    args: DirectoryGetCollectionsArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<DirectoryGetCollectionsReturn>\n  directorySearchCollections(\n    args: DirectorySearchCollectionsArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<DirectorySearchCollectionsReturn>\n}\n\nexport interface PingArgs {}\n\nexport interface PingReturn {\n  status: boolean\n}\nexport interface VersionArgs {}\n\nexport interface VersionReturn {\n  version: Version\n}\nexport interface RuntimeStatusArgs {}\n\nexport interface RuntimeStatusReturn {\n  status: RuntimeStatus\n}\nexport interface GetTokenMetadataArgs {\n  chainID: string\n  contractAddress: string\n  tokenIDs: Array<string>\n}\n\nexport interface GetTokenMetadataReturn {\n  tokenMetadata: Array<TokenMetadata>\n}\nexport interface RefreshTokenMetadataArgs {\n  chainID: string\n  contractAddress: string\n  tokenIDs?: Array<string>\n  refreshAll?: boolean\n}\n\nexport interface RefreshTokenMetadataReturn {\n  taskId: number\n}\nexport interface EnqueueTokensForRefreshArgs {\n  chainID: string\n  contractAddress: string\n  tokenIDs?: Array<string>\n  refreshAll?: boolean\n}\n\nexport interface EnqueueTokensForRefreshReturn {\n  taskId: number\n}\nexport interface GetTokenRefreshStatusArgs {\n  taskId: number\n}\n\nexport interface GetTokenRefreshStatusReturn {\n  status?: TaskStatus\n}\nexport interface GetTokenRefreshResultArgs {\n  taskId: number\n}\n\nexport interface GetTokenRefreshResultReturn {\n  status?: TaskStatus\n  tokens: { [key: string]: boolean }\n  failureReasons: { [key: string]: string }\n}\nexport interface CancelRefreshJobArgs {\n  taskId: number\n}\n\nexport interface CancelRefreshJobReturn {\n  ok: boolean\n}\nexport interface GetTokenMetadataBatchArgs {\n  chainID: string\n  contractTokenMap: { [key: string]: Array<string> }\n}\n\nexport interface GetTokenMetadataBatchReturn {\n  contractTokenMetadata: { [key: string]: Array<TokenMetadata> }\n}\nexport interface SearchTokenMetadataArgs {\n  chainID: string\n  contractAddress: string\n  filter: Filter\n  page?: Page\n}\n\nexport interface SearchTokenMetadataReturn {\n  page: Page\n  tokenMetadata: Array<TokenMetadata>\n}\nexport interface SearchTokenIDsArgs {\n  chainID: string\n  contractAddress: string\n  filter: Filter\n  page?: Page\n}\n\nexport interface SearchTokenIDsReturn {\n  page: Page\n  tokenIds: Array<string>\n}\nexport interface TokenCollectionFiltersArgs {\n  chainID: string\n  contractAddress: string\n}\n\nexport interface TokenCollectionFiltersReturn {\n  filters: Array<PropertyFilter>\n}\nexport interface GetContractInfoArgs {\n  chainID: string\n  contractAddress: string\n}\n\nexport interface GetContractInfoReturn {\n  contractInfo: ContractInfo\n}\nexport interface GetContractInfoBatchArgs {\n  chainID: string\n  contractAddresses: Array<string>\n}\n\nexport interface GetContractInfoBatchReturn {\n  contractInfoMap: { [key: string]: ContractInfo }\n}\nexport interface SearchContractInfoArgs {\n  contractAddress: string\n}\n\nexport interface SearchContractInfoReturn {\n  contractInfoList: Array<ContractInfo>\n}\nexport interface SearchContractInfoBatchArgs {\n  contractAddresses: Array<string>\n}\n\nexport interface SearchContractInfoBatchReturn {\n  contractInfoByChain: { [key: string]: Array<ContractInfo> }\n}\nexport interface SearchMetadataArgs {\n  filter: string\n  chainID?: string\n  types?: Array<ContractType>\n  excludeTokenMetadata?: boolean\n}\n\nexport interface SearchMetadataReturn {\n  tokenMetadata: Array<TokenMetadata>\n  contractInfo: Array<ContractInfo>\n}\nexport interface SearchTokensArgs {\n  q: string\n  chainID?: string\n  page?: Page\n}\n\nexport interface SearchTokensReturn {\n  tokenMetadata: Array<TokenMetadata>\n  nextPage: Page\n}\nexport interface SearchContractsArgs {\n  q: string\n  chainID?: string\n  chainIDs?: Array<string>\n  types?: Array<ContractType>\n  page?: Page\n}\n\nexport interface SearchContractsReturn {\n  contractInfo: Array<ContractInfo>\n  nextPage: Page\n}\nexport interface GetNiftyswapTokenQuantityArgs {\n  chainID: string\n  contractAddress: string\n  tokenIDs: Array<string>\n}\n\nexport interface GetNiftyswapTokenQuantityReturn {\n  quantity: { [key: string]: string }\n}\nexport interface GetNiftyswapUnitPricesArgs {\n  chainID: string\n  contractAddress: string\n  req: GetNiftyswapUnitPricesRequest\n  fresh: boolean\n}\n\nexport interface GetNiftyswapUnitPricesReturn {\n  prices: { [key: string]: string }\n}\nexport interface GetNiftyswapUnitPricesWithQuantitiesArgs {\n  chainID: string\n  contractAddress: string\n  req: GetNiftyswapUnitPricesRequest\n  fresh: boolean\n}\n\nexport interface GetNiftyswapUnitPricesWithQuantitiesReturn {\n  prices: { [key: string]: GetNiftyswapUnitPricesResponse }\n}\nexport interface AddContractToMintMonitorArgs {\n  chainID: string\n  contractAddress: string\n}\n\nexport interface AddContractToMintMonitorReturn {\n  ok: boolean\n}\nexport interface RemoveContractFromMintMonitorArgs {\n  chainID: string\n  contractAddress: string\n}\n\nexport interface RemoveContractFromMintMonitorReturn {\n  ok: boolean\n}\nexport interface MintMonitorJobStatusArgs {\n  chainID: string\n  contractAddress: string\n}\n\nexport interface MintMonitorJobStatusReturn {\n  task: Task\n}\nexport interface MintMonitorTriggerJobArgs {\n  chainID: string\n  contractAddress: string\n}\n\nexport interface MintMonitorTriggerJobReturn {\n  ok: boolean\n}\nexport interface SyncContractTokensArgs {\n  chainID: string\n  contractAddress: string\n}\n\nexport interface SyncContractTokensReturn {\n  taskID: number\n}\nexport interface AbortContractSyncArgs {\n  taskID: number\n}\n\nexport interface AbortContractSyncReturn {\n  ok: boolean\n}\nexport interface ContractSyncJobStatusArgs {\n  taskID: number\n}\n\nexport interface ContractSyncJobStatusReturn {\n  refreshTask: Task\n  syncTask: Task\n}\nexport interface DirectoryGetNetworksArgs {\n  includeTestnets?: boolean\n  onlyFeatured?: boolean\n}\n\nexport interface DirectoryGetNetworksReturn {\n  networks: Array<number>\n}\nexport interface DirectoryGetCollectionsArgs {\n  chainId?: number\n  includeTestnets?: boolean\n  onlyFeatured?: boolean\n  page?: Page\n}\n\nexport interface DirectoryGetCollectionsReturn {\n  collections: Array<ContractInfo>\n  page: Page\n}\nexport interface DirectorySearchCollectionsArgs {\n  query: string\n  chainId?: number\n  includeTestnets?: boolean\n  onlyFeatured?: boolean\n  page?: Page\n}\n\nexport interface DirectorySearchCollectionsReturn {\n  collections: Array<ContractInfo>\n  page: Page\n}\n\nexport interface Collections {\n  createCollection(args: CreateCollectionArgs, headers?: object, signal?: AbortSignal): Promise<CreateCollectionReturn>\n  getCollection(args: GetCollectionArgs, headers?: object, signal?: AbortSignal): Promise<GetCollectionReturn>\n  listCollections(args: ListCollectionsArgs, headers?: object, signal?: AbortSignal): Promise<ListCollectionsReturn>\n  updateCollection(args: UpdateCollectionArgs, headers?: object, signal?: AbortSignal): Promise<UpdateCollectionReturn>\n  deleteCollection(args: DeleteCollectionArgs, headers?: object, signal?: AbortSignal): Promise<DeleteCollectionReturn>\n  publishCollection(args: PublishCollectionArgs, headers?: object, signal?: AbortSignal): Promise<PublishCollectionReturn>\n  unpublishCollection(args: UnpublishCollectionArgs, headers?: object, signal?: AbortSignal): Promise<UnpublishCollectionReturn>\n  createContractCollection(\n    args: CreateContractCollectionArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<CreateContractCollectionReturn>\n  getContractCollection(\n    args: GetContractCollectionArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetContractCollectionReturn>\n  listContractCollections(\n    args: ListContractCollectionsArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<ListContractCollectionsReturn>\n  updateContractCollection(\n    args: UpdateContractCollectionArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<UpdateContractCollectionReturn>\n  deleteContractCollection(\n    args: DeleteContractCollectionArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<DeleteContractCollectionReturn>\n  createToken(args: CreateTokenArgs, headers?: object, signal?: AbortSignal): Promise<CreateTokenReturn>\n  getToken(args: GetTokenArgs, headers?: object, signal?: AbortSignal): Promise<GetTokenReturn>\n  listTokens(args: ListTokensArgs, headers?: object, signal?: AbortSignal): Promise<ListTokensReturn>\n  updateToken(args: UpdateTokenArgs, headers?: object, signal?: AbortSignal): Promise<UpdateTokenReturn>\n  deleteToken(args: DeleteTokenArgs, headers?: object, signal?: AbortSignal): Promise<DeleteTokenReturn>\n  createAsset(args: CreateAssetArgs, headers?: object, signal?: AbortSignal): Promise<CreateAssetReturn>\n  getAsset(args: GetAssetArgs, headers?: object, signal?: AbortSignal): Promise<GetAssetReturn>\n  updateAsset(args: UpdateAssetArgs, headers?: object, signal?: AbortSignal): Promise<UpdateAssetReturn>\n  deleteAsset(args: DeleteAssetArgs, headers?: object, signal?: AbortSignal): Promise<DeleteAssetReturn>\n}\n\nexport interface CreateCollectionArgs {\n  projectId?: number\n  collection: Collection\n}\n\nexport interface CreateCollectionReturn {\n  collection: Collection\n}\nexport interface GetCollectionArgs {\n  projectId?: number\n  collectionId: number\n}\n\nexport interface GetCollectionReturn {\n  collection: Collection\n}\nexport interface ListCollectionsArgs {\n  projectId?: number\n  page?: Page\n}\n\nexport interface ListCollectionsReturn {\n  page: Page\n  collections: Array<Collection>\n}\nexport interface UpdateCollectionArgs {\n  projectId?: number\n  collection: Collection\n}\n\nexport interface UpdateCollectionReturn {\n  collection: Collection\n}\nexport interface DeleteCollectionArgs {\n  projectId?: number\n  collectionId: number\n}\n\nexport interface DeleteCollectionReturn {\n  status: boolean\n}\nexport interface PublishCollectionArgs {\n  projectId?: number\n  collectionId: number\n  recursive?: boolean\n}\n\nexport interface PublishCollectionReturn {\n  collection: Collection\n}\nexport interface UnpublishCollectionArgs {\n  projectId?: number\n  collectionId: number\n}\n\nexport interface UnpublishCollectionReturn {\n  collection: Collection\n}\nexport interface CreateContractCollectionArgs {\n  projectId: number\n  contractCollection: ContractCollection\n}\n\nexport interface CreateContractCollectionReturn {\n  contractCollection: ContractCollection\n}\nexport interface GetContractCollectionArgs {\n  projectId: number\n  chainId: number\n  contractAddress: string\n}\n\nexport interface GetContractCollectionReturn {\n  contractCollection: ContractCollection\n}\nexport interface ListContractCollectionsArgs {\n  projectId: number\n  collectionId?: number\n  page?: Page\n}\n\nexport interface ListContractCollectionsReturn {\n  contractCollections: Array<ContractCollection>\n  collections: Array<Collection>\n  page: Page\n}\nexport interface UpdateContractCollectionArgs {\n  projectId: number\n  contractCollection: ContractCollection\n}\n\nexport interface UpdateContractCollectionReturn {\n  ok: boolean\n}\nexport interface DeleteContractCollectionArgs {\n  projectId: number\n  chainId: number\n  contractAddress: string\n}\n\nexport interface DeleteContractCollectionReturn {\n  ok: boolean\n}\nexport interface CreateTokenArgs {\n  projectId?: number\n  collectionId: number\n  token: TokenMetadata\n  private?: boolean\n}\n\nexport interface CreateTokenReturn {\n  token: TokenMetadata\n  assets: Array<Asset>\n}\nexport interface GetTokenArgs {\n  projectId?: number\n  collectionId: number\n  tokenId: string\n}\n\nexport interface GetTokenReturn {\n  token: TokenMetadata\n  assets: Array<Asset>\n}\nexport interface ListTokensArgs {\n  projectId?: number\n  collectionId: number\n  page?: Page\n}\n\nexport interface ListTokensReturn {\n  page: Page\n  tokens: Array<TokenMetadata>\n}\nexport interface UpdateTokenArgs {\n  projectId?: number\n  collectionId: number\n  tokenId: string\n  token: TokenMetadata\n  private?: boolean\n}\n\nexport interface UpdateTokenReturn {\n  token: TokenMetadata\n}\nexport interface DeleteTokenArgs {\n  projectId?: number\n  collectionId: number\n  tokenId: string\n}\n\nexport interface DeleteTokenReturn {\n  status: boolean\n}\nexport interface CreateAssetArgs {\n  projectId?: number\n  asset: Asset\n}\n\nexport interface CreateAssetReturn {\n  asset: Asset\n}\nexport interface GetAssetArgs {\n  projectId?: number\n  assetId: number\n}\n\nexport interface GetAssetReturn {\n  asset: Asset\n}\nexport interface UpdateAssetArgs {\n  projectId?: number\n  asset: Asset\n}\n\nexport interface UpdateAssetReturn {\n  asset: Asset\n}\nexport interface DeleteAssetArgs {\n  projectId?: number\n  assetId: number\n}\n\nexport interface DeleteAssetReturn {\n  status: boolean\n}\n\nexport interface Admin {\n  addContractsToTokenDirectory(\n    args: AddContractsToTokenDirectoryArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<AddContractsToTokenDirectoryReturn>\n  removeContractsFromTokenDirectory(\n    args: RemoveContractsFromTokenDirectoryArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<RemoveContractsFromTokenDirectoryReturn>\n  modifyFeatureIndex(args: ModifyFeatureIndexArgs, headers?: object, signal?: AbortSignal): Promise<ModifyFeatureIndexReturn>\n  getFeatureIndex(args: GetFeatureIndexArgs, headers?: object, signal?: AbortSignal): Promise<GetFeatureIndexReturn>\n  listTokenDirectory(args: ListTokenDirectoryArgs, headers?: object, signal?: AbortSignal): Promise<ListTokenDirectoryReturn>\n}\n\nexport interface AddContractsToTokenDirectoryArgs {\n  contracts: Array<ContractInfo>\n  featureIndexes: Array<number>\n}\n\nexport interface AddContractsToTokenDirectoryReturn {\n  ok: boolean\n}\nexport interface RemoveContractsFromTokenDirectoryArgs {\n  chainHandle: string\n  contracts: Array<string>\n}\n\nexport interface RemoveContractsFromTokenDirectoryReturn {\n  ok: boolean\n}\nexport interface ModifyFeatureIndexArgs {\n  chainHandle: string\n  contractAddress: string\n  featured: number\n}\n\nexport interface ModifyFeatureIndexReturn {\n  ok: boolean\n}\nexport interface GetFeatureIndexArgs {\n  chainHandle: string\n  contractAddress: string\n}\n\nexport interface GetFeatureIndexReturn {\n  featured: number\n}\nexport interface ListTokenDirectoryArgs {\n  chainID?: number\n  includeTestnets?: boolean\n  onlyFeatured?: boolean\n  page?: Page\n}\n\nexport interface ListTokenDirectoryReturn {\n  page: Page\n  collections: Array<ContractInfo>\n}\n\n//\n// Client\n//\nexport class Metadata implements Metadata {\n  protected hostname: string\n  protected fetch: Fetch\n  protected path = '/rpc/Metadata/'\n\n  constructor(hostname: string, fetch: Fetch) {\n    this.hostname = hostname\n    this.fetch = (input: RequestInfo, init?: RequestInit) => fetch(input, init)\n  }\n\n  private url(name: string): string {\n    return this.hostname + this.path + name\n  }\n\n  ping = (headers?: object, signal?: AbortSignal): Promise<PingReturn> => {\n    return this.fetch(this.url('Ping'), createHTTPRequest({}, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  version = (headers?: object, signal?: AbortSignal): Promise<VersionReturn> => {\n    return this.fetch(this.url('Version'), createHTTPRequest({}, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            version: <Version>_data.version\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  runtimeStatus = (headers?: object, signal?: AbortSignal): Promise<RuntimeStatusReturn> => {\n    return this.fetch(this.url('RuntimeStatus'), createHTTPRequest({}, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <RuntimeStatus>_data.status\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getTokenMetadata = (args: GetTokenMetadataArgs, headers?: object, signal?: AbortSignal): Promise<GetTokenMetadataReturn> => {\n    return this.fetch(this.url('GetTokenMetadata'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            tokenMetadata: <Array<TokenMetadata>>_data.tokenMetadata\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  refreshTokenMetadata = (\n    args: RefreshTokenMetadataArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<RefreshTokenMetadataReturn> => {\n    return this.fetch(this.url('RefreshTokenMetadata'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            taskId: <number>_data.taskId\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  enqueueTokensForRefresh = (\n    args: EnqueueTokensForRefreshArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<EnqueueTokensForRefreshReturn> => {\n    return this.fetch(this.url('EnqueueTokensForRefresh'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            taskId: <number>_data.taskId\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getTokenRefreshStatus = (\n    args: GetTokenRefreshStatusArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetTokenRefreshStatusReturn> => {\n    return this.fetch(this.url('GetTokenRefreshStatus'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <TaskStatus>_data.status\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getTokenRefreshResult = (\n    args: GetTokenRefreshResultArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetTokenRefreshResultReturn> => {\n    return this.fetch(this.url('GetTokenRefreshResult'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <TaskStatus>_data.status,\n            tokens: <{ [key: string]: boolean }>_data.tokens,\n            failureReasons: <{ [key: string]: string }>_data.failureReasons\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  cancelRefreshJob = (args: CancelRefreshJobArgs, headers?: object, signal?: AbortSignal): Promise<CancelRefreshJobReturn> => {\n    return this.fetch(this.url('CancelRefreshJob'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            ok: <boolean>_data.ok\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getTokenMetadataBatch = (\n    args: GetTokenMetadataBatchArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetTokenMetadataBatchReturn> => {\n    return this.fetch(this.url('GetTokenMetadataBatch'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            contractTokenMetadata: <{ [key: string]: Array<TokenMetadata> }>_data.contractTokenMetadata\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  searchTokenMetadata = (\n    args: SearchTokenMetadataArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<SearchTokenMetadataReturn> => {\n    return this.fetch(this.url('SearchTokenMetadata'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            page: <Page>_data.page,\n            tokenMetadata: <Array<TokenMetadata>>_data.tokenMetadata\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  searchTokenIDs = (args: SearchTokenIDsArgs, headers?: object, signal?: AbortSignal): Promise<SearchTokenIDsReturn> => {\n    return this.fetch(this.url('SearchTokenIDs'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            page: <Page>_data.page,\n            tokenIds: <Array<string>>_data.tokenIds\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  tokenCollectionFilters = (\n    args: TokenCollectionFiltersArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<TokenCollectionFiltersReturn> => {\n    return this.fetch(this.url('TokenCollectionFilters'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            filters: <Array<PropertyFilter>>_data.filters\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getContractInfo = (args: GetContractInfoArgs, headers?: object, signal?: AbortSignal): Promise<GetContractInfoReturn> => {\n    return this.fetch(this.url('GetContractInfo'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            contractInfo: <ContractInfo>_data.contractInfo\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getContractInfoBatch = (\n    args: GetContractInfoBatchArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetContractInfoBatchReturn> => {\n    return this.fetch(this.url('GetContractInfoBatch'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            contractInfoMap: <{ [key: string]: ContractInfo }>_data.contractInfoMap\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  searchContractInfo = (\n    args: SearchContractInfoArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<SearchContractInfoReturn> => {\n    return this.fetch(this.url('SearchContractInfo'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            contractInfoList: <Array<ContractInfo>>_data.contractInfoList\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  searchContractInfoBatch = (\n    args: SearchContractInfoBatchArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<SearchContractInfoBatchReturn> => {\n    return this.fetch(this.url('SearchContractInfoBatch'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            contractInfoByChain: <{ [key: string]: Array<ContractInfo> }>_data.contractInfoByChain\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  searchMetadata = (args: SearchMetadataArgs, headers?: object, signal?: AbortSignal): Promise<SearchMetadataReturn> => {\n    return this.fetch(this.url('SearchMetadata'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            tokenMetadata: <Array<TokenMetadata>>_data.tokenMetadata,\n            contractInfo: <Array<ContractInfo>>_data.contractInfo\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  searchTokens = (args: SearchTokensArgs, headers?: object, signal?: AbortSignal): Promise<SearchTokensReturn> => {\n    return this.fetch(this.url('SearchTokens'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            tokenMetadata: <Array<TokenMetadata>>_data.tokenMetadata,\n            nextPage: <Page>_data.nextPage\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  searchContracts = (args: SearchContractsArgs, headers?: object, signal?: AbortSignal): Promise<SearchContractsReturn> => {\n    return this.fetch(this.url('SearchContracts'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            contractInfo: <Array<ContractInfo>>_data.contractInfo,\n            nextPage: <Page>_data.nextPage\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getNiftyswapTokenQuantity = (\n    args: GetNiftyswapTokenQuantityArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetNiftyswapTokenQuantityReturn> => {\n    return this.fetch(this.url('GetNiftyswapTokenQuantity'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            quantity: <{ [key: string]: string }>_data.quantity\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getNiftyswapUnitPrices = (\n    args: GetNiftyswapUnitPricesArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetNiftyswapUnitPricesReturn> => {\n    return this.fetch(this.url('GetNiftyswapUnitPrices'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            prices: <{ [key: string]: string }>_data.prices\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getNiftyswapUnitPricesWithQuantities = (\n    args: GetNiftyswapUnitPricesWithQuantitiesArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetNiftyswapUnitPricesWithQuantitiesReturn> => {\n    return this.fetch(this.url('GetNiftyswapUnitPricesWithQuantities'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            prices: <{ [key: string]: GetNiftyswapUnitPricesResponse }>_data.prices\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  addContractToMintMonitor = (\n    args: AddContractToMintMonitorArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<AddContractToMintMonitorReturn> => {\n    return this.fetch(this.url('AddContractToMintMonitor'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            ok: <boolean>_data.ok\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  removeContractFromMintMonitor = (\n    args: RemoveContractFromMintMonitorArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<RemoveContractFromMintMonitorReturn> => {\n    return this.fetch(this.url('RemoveContractFromMintMonitor'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            ok: <boolean>_data.ok\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  mintMonitorJobStatus = (\n    args: MintMonitorJobStatusArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<MintMonitorJobStatusReturn> => {\n    return this.fetch(this.url('MintMonitorJobStatus'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            task: <Task>_data.task\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  mintMonitorTriggerJob = (\n    args: MintMonitorTriggerJobArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<MintMonitorTriggerJobReturn> => {\n    return this.fetch(this.url('MintMonitorTriggerJob'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            ok: <boolean>_data.ok\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  syncContractTokens = (\n    args: SyncContractTokensArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<SyncContractTokensReturn> => {\n    return this.fetch(this.url('SyncContractTokens'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            taskID: <number>_data.taskID\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  abortContractSync = (args: AbortContractSyncArgs, headers?: object, signal?: AbortSignal): Promise<AbortContractSyncReturn> => {\n    return this.fetch(this.url('AbortContractSync'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            ok: <boolean>_data.ok\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  contractSyncJobStatus = (\n    args: ContractSyncJobStatusArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<ContractSyncJobStatusReturn> => {\n    return this.fetch(this.url('ContractSyncJobStatus'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            refreshTask: <Task>_data.refreshTask,\n            syncTask: <Task>_data.syncTask\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  directoryGetNetworks = (\n    args: DirectoryGetNetworksArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<DirectoryGetNetworksReturn> => {\n    return this.fetch(this.url('DirectoryGetNetworks'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            networks: <Array<number>>_data.networks\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  directoryGetCollections = (\n    args: DirectoryGetCollectionsArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<DirectoryGetCollectionsReturn> => {\n    return this.fetch(this.url('DirectoryGetCollections'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            collections: <Array<ContractInfo>>_data.collections,\n            page: <Page>_data.page\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  directorySearchCollections = (\n    args: DirectorySearchCollectionsArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<DirectorySearchCollectionsReturn> => {\n    return this.fetch(this.url('DirectorySearchCollections'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            collections: <Array<ContractInfo>>_data.collections,\n            page: <Page>_data.page\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n}\nexport class Collections implements Collections {\n  protected hostname: string\n  protected fetch: Fetch\n  protected path = '/rpc/Collections/'\n\n  constructor(hostname: string, fetch: Fetch) {\n    this.hostname = hostname\n    this.fetch = (input: RequestInfo, init?: RequestInit) => fetch(input, init)\n  }\n\n  private url(name: string): string {\n    return this.hostname + this.path + name\n  }\n\n  createCollection = (args: CreateCollectionArgs, headers?: object, signal?: AbortSignal): Promise<CreateCollectionReturn> => {\n    return this.fetch(this.url('CreateCollection'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            collection: <Collection>_data.collection\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getCollection = (args: GetCollectionArgs, headers?: object, signal?: AbortSignal): Promise<GetCollectionReturn> => {\n    return this.fetch(this.url('GetCollection'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            collection: <Collection>_data.collection\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  listCollections = (args: ListCollectionsArgs, headers?: object, signal?: AbortSignal): Promise<ListCollectionsReturn> => {\n    return this.fetch(this.url('ListCollections'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            page: <Page>_data.page,\n            collections: <Array<Collection>>_data.collections\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  updateCollection = (args: UpdateCollectionArgs, headers?: object, signal?: AbortSignal): Promise<UpdateCollectionReturn> => {\n    return this.fetch(this.url('UpdateCollection'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            collection: <Collection>_data.collection\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  deleteCollection = (args: DeleteCollectionArgs, headers?: object, signal?: AbortSignal): Promise<DeleteCollectionReturn> => {\n    return this.fetch(this.url('DeleteCollection'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  publishCollection = (args: PublishCollectionArgs, headers?: object, signal?: AbortSignal): Promise<PublishCollectionReturn> => {\n    return this.fetch(this.url('PublishCollection'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            collection: <Collection>_data.collection\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  unpublishCollection = (\n    args: UnpublishCollectionArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<UnpublishCollectionReturn> => {\n    return this.fetch(this.url('UnpublishCollection'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            collection: <Collection>_data.collection\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  createContractCollection = (\n    args: CreateContractCollectionArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<CreateContractCollectionReturn> => {\n    return this.fetch(this.url('CreateContractCollection'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            contractCollection: <ContractCollection>_data.contractCollection\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getContractCollection = (\n    args: GetContractCollectionArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<GetContractCollectionReturn> => {\n    return this.fetch(this.url('GetContractCollection'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            contractCollection: <ContractCollection>_data.contractCollection\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  listContractCollections = (\n    args: ListContractCollectionsArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<ListContractCollectionsReturn> => {\n    return this.fetch(this.url('ListContractCollections'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            contractCollections: <Array<ContractCollection>>_data.contractCollections,\n            collections: <Array<Collection>>_data.collections,\n            page: <Page>_data.page\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  updateContractCollection = (\n    args: UpdateContractCollectionArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<UpdateContractCollectionReturn> => {\n    return this.fetch(this.url('UpdateContractCollection'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            ok: <boolean>_data.ok\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  deleteContractCollection = (\n    args: DeleteContractCollectionArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<DeleteContractCollectionReturn> => {\n    return this.fetch(this.url('DeleteContractCollection'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            ok: <boolean>_data.ok\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  createToken = (args: CreateTokenArgs, headers?: object, signal?: AbortSignal): Promise<CreateTokenReturn> => {\n    return this.fetch(this.url('CreateToken'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            token: <TokenMetadata>_data.token,\n            assets: <Array<Asset>>_data.assets\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getToken = (args: GetTokenArgs, headers?: object, signal?: AbortSignal): Promise<GetTokenReturn> => {\n    return this.fetch(this.url('GetToken'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            token: <TokenMetadata>_data.token,\n            assets: <Array<Asset>>_data.assets\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  listTokens = (args: ListTokensArgs, headers?: object, signal?: AbortSignal): Promise<ListTokensReturn> => {\n    return this.fetch(this.url('ListTokens'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            page: <Page>_data.page,\n            tokens: <Array<TokenMetadata>>_data.tokens\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  updateToken = (args: UpdateTokenArgs, headers?: object, signal?: AbortSignal): Promise<UpdateTokenReturn> => {\n    return this.fetch(this.url('UpdateToken'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            token: <TokenMetadata>_data.token\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  deleteToken = (args: DeleteTokenArgs, headers?: object, signal?: AbortSignal): Promise<DeleteTokenReturn> => {\n    return this.fetch(this.url('DeleteToken'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  createAsset = (args: CreateAssetArgs, headers?: object, signal?: AbortSignal): Promise<CreateAssetReturn> => {\n    return this.fetch(this.url('CreateAsset'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            asset: <Asset>_data.asset\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getAsset = (args: GetAssetArgs, headers?: object, signal?: AbortSignal): Promise<GetAssetReturn> => {\n    return this.fetch(this.url('GetAsset'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            asset: <Asset>_data.asset\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  updateAsset = (args: UpdateAssetArgs, headers?: object, signal?: AbortSignal): Promise<UpdateAssetReturn> => {\n    return this.fetch(this.url('UpdateAsset'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            asset: <Asset>_data.asset\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  deleteAsset = (args: DeleteAssetArgs, headers?: object, signal?: AbortSignal): Promise<DeleteAssetReturn> => {\n    return this.fetch(this.url('DeleteAsset'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n}\nexport class Admin implements Admin {\n  protected hostname: string\n  protected fetch: Fetch\n  protected path = '/rpc/Admin/'\n\n  constructor(hostname: string, fetch: Fetch) {\n    this.hostname = hostname\n    this.fetch = (input: RequestInfo, init?: RequestInit) => fetch(input, init)\n  }\n\n  private url(name: string): string {\n    return this.hostname + this.path + name\n  }\n\n  addContractsToTokenDirectory = (\n    args: AddContractsToTokenDirectoryArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<AddContractsToTokenDirectoryReturn> => {\n    return this.fetch(this.url('AddContractsToTokenDirectory'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            ok: <boolean>_data.ok\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  removeContractsFromTokenDirectory = (\n    args: RemoveContractsFromTokenDirectoryArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<RemoveContractsFromTokenDirectoryReturn> => {\n    return this.fetch(this.url('RemoveContractsFromTokenDirectory'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            ok: <boolean>_data.ok\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  modifyFeatureIndex = (\n    args: ModifyFeatureIndexArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<ModifyFeatureIndexReturn> => {\n    return this.fetch(this.url('ModifyFeatureIndex'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            ok: <boolean>_data.ok\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getFeatureIndex = (args: GetFeatureIndexArgs, headers?: object, signal?: AbortSignal): Promise<GetFeatureIndexReturn> => {\n    return this.fetch(this.url('GetFeatureIndex'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            featured: <number>_data.featured\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  listTokenDirectory = (\n    args: ListTokenDirectoryArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<ListTokenDirectoryReturn> => {\n    return this.fetch(this.url('ListTokenDirectory'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            page: <Page>_data.page,\n            collections: <Array<ContractInfo>>_data.collections\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n}\n\nconst createHTTPRequest = (body: object = {}, headers: object = {}, signal: AbortSignal | null = null): object => {\n  return {\n    method: 'POST',\n    headers: { ...headers, 'Content-Type': 'application/json' },\n    body: JSON.stringify(body || {}),\n    signal\n  }\n}\n\nconst buildResponse = (res: Response): Promise<any> => {\n  return res.text().then(text => {\n    let data\n    try {\n      data = JSON.parse(text)\n    } catch (error) {\n      let message = ''\n      if (error instanceof Error) {\n        message = error.message\n      }\n      throw WebrpcBadResponseError.new({\n        status: res.status,\n        cause: `JSON.parse(): ${message}: response text: ${text}`\n      })\n    }\n    if (!res.ok) {\n      const code: number = typeof data.code === 'number' ? data.code : 0\n      throw (webrpcErrorByCode[code] || WebrpcError).new(data)\n    }\n    return data\n  })\n}\n\n//\n// Errors\n//\n\nexport class WebrpcError extends Error {\n  name: string\n  code: number\n  message: string\n  status: number\n  cause?: string\n\n  /** @deprecated Use message instead of msg. Deprecated in webrpc v0.11.0. */\n  msg: string\n\n  constructor(name: string, code: number, message: string, status: number, cause?: string) {\n    super(message)\n    this.name = name || 'WebrpcError'\n    this.code = typeof code === 'number' ? code : 0\n    this.message = message || `endpoint error ${this.code}`\n    this.msg = this.message\n    this.status = typeof status === 'number' ? status : 0\n    this.cause = cause\n    Object.setPrototypeOf(this, WebrpcError.prototype)\n  }\n\n  static new(payload: any): WebrpcError {\n    return new this(payload.error, payload.code, payload.message || payload.msg, payload.status, payload.cause)\n  }\n}\n\n// Webrpc errors\n\nexport class WebrpcEndpointError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcEndpoint',\n    code: number = 0,\n    message: string = 'endpoint error',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcEndpointError.prototype)\n  }\n}\n\nexport class WebrpcRequestFailedError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcRequestFailed',\n    code: number = -1,\n    message: string = 'request failed',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcRequestFailedError.prototype)\n  }\n}\n\nexport class WebrpcBadRouteError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcBadRoute',\n    code: number = -2,\n    message: string = 'bad route',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcBadRouteError.prototype)\n  }\n}\n\nexport class WebrpcBadMethodError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcBadMethod',\n    code: number = -3,\n    message: string = 'bad method',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcBadMethodError.prototype)\n  }\n}\n\nexport class WebrpcBadRequestError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcBadRequest',\n    code: number = -4,\n    message: string = 'bad request',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcBadRequestError.prototype)\n  }\n}\n\nexport class WebrpcBadResponseError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcBadResponse',\n    code: number = -5,\n    message: string = 'bad response',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcBadResponseError.prototype)\n  }\n}\n\nexport class WebrpcServerPanicError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcServerPanic',\n    code: number = -6,\n    message: string = 'server panic',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcServerPanicError.prototype)\n  }\n}\n\nexport class WebrpcInternalErrorError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcInternalError',\n    code: number = -7,\n    message: string = 'internal error',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcInternalErrorError.prototype)\n  }\n}\n\nexport class WebrpcClientDisconnectedError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcClientDisconnected',\n    code: number = -8,\n    message: string = 'client disconnected',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcClientDisconnectedError.prototype)\n  }\n}\n\nexport class WebrpcStreamLostError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcStreamLost',\n    code: number = -9,\n    message: string = 'stream lost',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcStreamLostError.prototype)\n  }\n}\n\nexport class WebrpcStreamFinishedError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcStreamFinished',\n    code: number = -10,\n    message: string = 'stream finished',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcStreamFinishedError.prototype)\n  }\n}\n\n// Schema errors\n\nexport class UnauthorizedError extends WebrpcError {\n  constructor(\n    name: string = 'Unauthorized',\n    code: number = 1000,\n    message: string = 'Unauthorized access',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, UnauthorizedError.prototype)\n  }\n}\n\nexport class PermissionDeniedError extends WebrpcError {\n  constructor(\n    name: string = 'PermissionDenied',\n    code: number = 1001,\n    message: string = 'Permission denied',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, PermissionDeniedError.prototype)\n  }\n}\n\nexport class SessionExpiredError extends WebrpcError {\n  constructor(\n    name: string = 'SessionExpired',\n    code: number = 1002,\n    message: string = 'Session expired',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, SessionExpiredError.prototype)\n  }\n}\n\nexport class MethodNotFoundError extends WebrpcError {\n  constructor(\n    name: string = 'MethodNotFound',\n    code: number = 1003,\n    message: string = 'Method not found',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, MethodNotFoundError.prototype)\n  }\n}\n\nexport class RequestConflictError extends WebrpcError {\n  constructor(\n    name: string = 'RequestConflict',\n    code: number = 1004,\n    message: string = 'Conflict with target resource',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, RequestConflictError.prototype)\n  }\n}\n\nexport class FailError extends WebrpcError {\n  constructor(\n    name: string = 'Fail',\n    code: number = 1005,\n    message: string = 'Request Failed',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, FailError.prototype)\n  }\n}\n\nexport class GeoblockedError extends WebrpcError {\n  constructor(\n    name: string = 'Geoblocked',\n    code: number = 1006,\n    message: string = 'Geoblocked region',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, GeoblockedError.prototype)\n  }\n}\n\nexport class TimeoutError extends WebrpcError {\n  constructor(\n    name: string = 'Timeout',\n    code: number = 2000,\n    message: string = 'Request timed out',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, TimeoutError.prototype)\n  }\n}\n\nexport class InvalidArgumentError extends WebrpcError {\n  constructor(\n    name: string = 'InvalidArgument',\n    code: number = 2001,\n    message: string = 'Invalid argument',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, InvalidArgumentError.prototype)\n  }\n}\n\nexport class RequiredArgumentError extends WebrpcError {\n  constructor(\n    name: string = 'RequiredArgument',\n    code: number = 2002,\n    message: string = 'Required argument missing',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, RequiredArgumentError.prototype)\n  }\n}\n\nexport class QueryFailedError extends WebrpcError {\n  constructor(\n    name: string = 'QueryFailed',\n    code: number = 2003,\n    message: string = 'Query failed',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, QueryFailedError.prototype)\n  }\n}\n\nexport class ValidationFailedError extends WebrpcError {\n  constructor(\n    name: string = 'ValidationFailed',\n    code: number = 2004,\n    message: string = 'Validation failed',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, ValidationFailedError.prototype)\n  }\n}\n\nexport class RateLimitedError extends WebrpcError {\n  constructor(\n    name: string = 'RateLimited',\n    code: number = 2005,\n    message: string = 'Rate limited',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, RateLimitedError.prototype)\n  }\n}\n\nexport class NotFoundError extends WebrpcError {\n  constructor(\n    name: string = 'NotFound',\n    code: number = 3000,\n    message: string = 'Resource not found',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, NotFoundError.prototype)\n  }\n}\n\nexport class ProjectNotFoundError extends WebrpcError {\n  constructor(\n    name: string = 'ProjectNotFound',\n    code: number = 3002,\n    message: string = 'Project not found',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, ProjectNotFoundError.prototype)\n  }\n}\n\nexport class ChainNotFoundError extends WebrpcError {\n  constructor(\n    name: string = 'ChainNotFound',\n    code: number = 3003,\n    message: string = 'Chain not found',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, ChainNotFoundError.prototype)\n  }\n}\n\nexport class TokenDirectoryDisabledError extends WebrpcError {\n  constructor(\n    name: string = 'TokenDirectoryDisabled',\n    code: number = 4001,\n    message: string = 'Token Directory is disabled',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, TokenDirectoryDisabledError.prototype)\n  }\n}\n\nexport enum errors {\n  WebrpcEndpoint = 'WebrpcEndpoint',\n  WebrpcRequestFailed = 'WebrpcRequestFailed',\n  WebrpcBadRoute = 'WebrpcBadRoute',\n  WebrpcBadMethod = 'WebrpcBadMethod',\n  WebrpcBadRequest = 'WebrpcBadRequest',\n  WebrpcBadResponse = 'WebrpcBadResponse',\n  WebrpcServerPanic = 'WebrpcServerPanic',\n  WebrpcInternalError = 'WebrpcInternalError',\n  WebrpcClientDisconnected = 'WebrpcClientDisconnected',\n  WebrpcStreamLost = 'WebrpcStreamLost',\n  WebrpcStreamFinished = 'WebrpcStreamFinished',\n  Unauthorized = 'Unauthorized',\n  PermissionDenied = 'PermissionDenied',\n  SessionExpired = 'SessionExpired',\n  MethodNotFound = 'MethodNotFound',\n  RequestConflict = 'RequestConflict',\n  Fail = 'Fail',\n  Geoblocked = 'Geoblocked',\n  Timeout = 'Timeout',\n  InvalidArgument = 'InvalidArgument',\n  RequiredArgument = 'RequiredArgument',\n  QueryFailed = 'QueryFailed',\n  ValidationFailed = 'ValidationFailed',\n  RateLimited = 'RateLimited',\n  NotFound = 'NotFound',\n  ProjectNotFound = 'ProjectNotFound',\n  ChainNotFound = 'ChainNotFound',\n  TokenDirectoryDisabled = 'TokenDirectoryDisabled'\n}\n\nconst webrpcErrorByCode: { [code: number]: any } = {\n  [0]: WebrpcEndpointError,\n  [-1]: WebrpcRequestFailedError,\n  [-2]: WebrpcBadRouteError,\n  [-3]: WebrpcBadMethodError,\n  [-4]: WebrpcBadRequestError,\n  [-5]: WebrpcBadResponseError,\n  [-6]: WebrpcServerPanicError,\n  [-7]: WebrpcInternalErrorError,\n  [-8]: WebrpcClientDisconnectedError,\n  [-9]: WebrpcStreamLostError,\n  [-10]: WebrpcStreamFinishedError,\n  [1000]: UnauthorizedError,\n  [1001]: PermissionDeniedError,\n  [1002]: SessionExpiredError,\n  [1003]: MethodNotFoundError,\n  [1004]: RequestConflictError,\n  [1005]: FailError,\n  [1006]: GeoblockedError,\n  [2000]: TimeoutError,\n  [2001]: InvalidArgumentError,\n  [2002]: RequiredArgumentError,\n  [2003]: QueryFailedError,\n  [2004]: ValidationFailedError,\n  [2005]: RateLimitedError,\n  [3000]: NotFoundError,\n  [3002]: ProjectNotFoundError,\n  [3003]: ChainNotFoundError,\n  [4001]: TokenDirectoryDisabledError\n}\n\nexport type Fetch = (input: RequestInfo, init?: RequestInit) => Promise<Response>\n","export * from './metadata.gen'\n\nimport { Metadata as MetadataRpc, Collections as CollectionsRpc } from './metadata.gen'\n\nconst fetch = globalThis.fetch\n\nexport class SequenceMetadata extends MetadataRpc {\n  constructor(\n    hostname: string = 'https://metadata.sequence.app',\n    public projectAccessKey?: string,\n    public jwtAuth?: string\n  ) {\n    super(hostname.endsWith('/') ? hostname.slice(0, -1) : hostname, fetch)\n    this.fetch = this._fetch\n  }\n\n  _fetch = (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n    // automatically include jwt and access key auth header to requests\n    // if its been set on the client\n    const headers: { [key: string]: any } = {}\n\n    const jwtAuth = this.jwtAuth\n    const projectAccessKey = this.projectAccessKey\n\n    if (jwtAuth && jwtAuth.length > 0) {\n      headers['Authorization'] = `BEARER ${jwtAuth}`\n    }\n\n    if (projectAccessKey && projectAccessKey.length > 0) {\n      headers['X-Access-Key'] = projectAccessKey\n    }\n\n    // before the request is made\n    init!.headers = { ...init!.headers, ...headers }\n\n    return fetch(input, init)\n  }\n}\n\nexport class SequenceCollections extends CollectionsRpc {\n  constructor(\n    hostname: string = 'https://metadata.sequence.app',\n    public jwtAuth?: string\n  ) {\n    super(hostname.endsWith('/') ? hostname.slice(0, -1) : hostname, fetch)\n    this.fetch = this._fetch\n  }\n\n  _fetch = (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n    // automatically include jwt auth header to requests\n    // if its been set on the client\n    const headers: { [key: string]: any } = {}\n\n    const jwtAuth = this.jwtAuth\n\n    if (jwtAuth && jwtAuth.length > 0) {\n      headers['Authorization'] = `BEARER ${jwtAuth}`\n    }\n\n    // before the request is made\n    init!.headers = { ...init!.headers, ...headers }\n\n    return fetch(input, init)\n  }\n\n  // TODO: add uploadAsset() method similar to,\n  // https://github.com/0xsequence/go-sequence/blob/master/metadata/collections.go#L52\n}\n","import { Account } from '@0xsequence/account'\nimport { SequenceAPIClient } from '@0xsequence/api'\nimport { ETHAuth, Proof } from '@0xsequence/ethauth'\nimport { Indexer, SequenceIndexer } from '@0xsequence/indexer'\nimport { SequenceMetadata } from '@0xsequence/metadata'\nimport { ChainIdLike, findNetworkConfig } from '@0xsequence/network'\nimport { getFetchRequest } from '@0xsequence/utils'\nimport { ethers } from 'ethers'\n\nexport type SessionMeta = {\n  // name of the app requesting the session, used with ETHAuth\n  name: string\n\n  // expiration in seconds for a session before it expires, used with ETHAuth\n  expiration?: number\n}\n\nexport type ServicesSettings = {\n  metadata: SessionMeta\n  sequenceApiUrl: string\n  sequenceApiChainId: ethers.BigNumberish\n  sequenceMetadataUrl: string\n}\n\nexport type SessionJWT = {\n  token: string\n  expiration: number\n}\n\nexport type SessionJWTPromise = {\n  token: Promise<string>\n  expiration: number\n}\n\nexport type ProofStringPromise = {\n  proofString: Promise<string>\n  expiration: number\n}\n\n// Default session expiration of ETHAuth token (1 week)\nexport const DEFAULT_SESSION_EXPIRATION = 60 * 60 * 24 * 7\n\n// Long session expiration of ETHAuth token (~1 year)\nexport const LONG_SESSION_EXPIRATION = 3e7\n\nconst EXPIRATION_JWT_MARGIN = 60 // seconds\n\nexport class Services {\n  _initialAuthRequest: Promise<SequenceAPIClient>\n\n  // proof strings are indexed by account address and app name, see getProofStringKey()\n  private readonly proofStrings: Map<string, ProofStringPromise> = new Map()\n\n  private onAuthCallbacks: ((result: PromiseSettledResult<string>) => void)[] = []\n\n  private apiClient: SequenceAPIClient | undefined\n  private metadataClient: SequenceMetadata | undefined\n  private indexerClients: Map<number, Indexer> = new Map()\n\n  private projectAccessKey?: string\n\n  constructor(\n    public readonly account: Account,\n    public readonly settings: ServicesSettings,\n    public readonly status: {\n      jwt?: SessionJWTPromise\n      metadata?: SessionMeta\n    } = {},\n    projectAccessKey?: string\n  ) {\n    this.projectAccessKey = projectAccessKey\n  }\n\n  private now(): number {\n    return Math.floor(Date.now() / 1000)\n  }\n\n  get expiration(): number {\n    return Math.max(this.settings.metadata.expiration ?? DEFAULT_SESSION_EXPIRATION, 120)\n  }\n\n  onAuth(cb: (result: PromiseSettledResult<string>) => void) {\n    this.onAuthCallbacks.push(cb)\n    return () => (this.onAuthCallbacks = this.onAuthCallbacks.filter(c => c !== cb))\n  }\n\n  async dump(): Promise<{\n    jwt?: SessionJWT\n    metadata?: SessionMeta\n  }> {\n    if (!this.status.jwt) return { metadata: this.settings.metadata }\n\n    return {\n      jwt: {\n        token: await this.status.jwt.token,\n        expiration: this.status.jwt.expiration\n      },\n      metadata: this.status.metadata\n    }\n  }\n\n  auth(maxTries: number = 5): Promise<SequenceAPIClient> {\n    if (this._initialAuthRequest) return this._initialAuthRequest\n\n    this._initialAuthRequest = (async () => {\n      const url = this.settings.sequenceApiUrl\n      if (!url) throw Error('No sequence api url')\n\n      let jwtAuth: string | undefined\n      for (let i = 1; ; i++) {\n        try {\n          jwtAuth = (await this.getJWT(true)).token\n          break\n        } catch (error) {\n          if (i === maxTries) {\n            console.error(`couldn't authenticate after ${maxTries} attempts`, error)\n            throw error\n          }\n        }\n      }\n\n      return new SequenceAPIClient(url, undefined, jwtAuth)\n    })()\n\n    return this._initialAuthRequest\n  }\n\n  private async getJWT(tryAuth: boolean): Promise<SessionJWT> {\n    const url = this.settings.sequenceApiUrl\n    if (!url) throw Error('No sequence api url')\n\n    // check if we already have or are waiting for a token\n    if (this.status.jwt) {\n      const jwt = this.status.jwt\n      const token = await jwt.token\n\n      if (this.now() < jwt.expiration) {\n        return { token, expiration: jwt.expiration }\n      }\n\n      // token expired, delete it and get a new one\n      this.status.jwt = undefined\n    }\n\n    if (!tryAuth) {\n      throw new Error('no auth token in memory')\n    }\n\n    const proofStringKey = this.getProofStringKey()\n    const { proofString, expiration } = this.getProofString(proofStringKey)\n\n    const jwt = {\n      token: proofString\n        .then(async proofString => {\n          const api = new SequenceAPIClient(url)\n\n          const authResp = await api.getAuthToken({ ewtString: proofString })\n\n          if (authResp?.status === true && authResp.jwtToken.length !== 0) {\n            return authResp.jwtToken\n          } else {\n            if (!(await this.isProofStringValid(proofString))) {\n              this.proofStrings.delete(proofStringKey)\n            }\n            throw new Error('no auth token from server')\n          }\n        })\n        .catch(reason => {\n          this.status.jwt = undefined\n          throw reason\n        }),\n      expiration\n    }\n\n    this.status.jwt = jwt\n\n    jwt.token\n      .then(token => {\n        this.onAuthCallbacks.forEach(cb => {\n          try {\n            cb({ status: 'fulfilled', value: token })\n          } catch {}\n        })\n      })\n      .catch((reason: any) => {\n        this.onAuthCallbacks.forEach(cb => {\n          try {\n            cb({ status: 'rejected', reason })\n          } catch {}\n        })\n      })\n\n    const token = await jwt.token\n    return { token, expiration }\n  }\n\n  private getProofStringKey(): string {\n    return `${this.account.address} - ${this.settings.metadata.name}`\n  }\n\n  private async isProofStringValid(proofString: string): Promise<boolean> {\n    try {\n      const ethAuth = new ETHAuth()\n      const chainId = BigInt(this.settings.sequenceApiChainId)\n      const found = findNetworkConfig(this.account.networks, chainId)\n      if (!found) {\n        throw Error('No network found')\n      }\n      ethAuth.chainId = Number(chainId)\n\n      const network = new ethers.Network(found.name, chainId)\n\n      // TODO: Modify ETHAuth so it can take a provider instead of a url\n      // -----\n      // Can't pass jwt here since this is used for getting the jwt\n      ethAuth.provider = new ethers.JsonRpcProvider(getFetchRequest(found.rpcUrl, this.projectAccessKey), network, {\n        staticNetwork: network\n      })\n\n      await ethAuth.decodeProof(proofString)\n\n      return true\n    } catch {\n      return false\n    }\n  }\n\n  async getAPIClient(tryAuth: boolean = true): Promise<SequenceAPIClient> {\n    if (!this.apiClient) {\n      const url = this.settings.sequenceApiUrl\n      if (!url) throw Error('No sequence api url')\n\n      const jwtAuth = (await this.getJWT(tryAuth)).token\n      this.apiClient = new SequenceAPIClient(url, undefined, jwtAuth)\n    }\n\n    return this.apiClient\n  }\n\n  async getMetadataClient(tryAuth: boolean = true): Promise<SequenceMetadata> {\n    if (!this.metadataClient) {\n      const jwtAuth = (await this.getJWT(tryAuth)).token\n      this.metadataClient = new SequenceMetadata(this.settings.sequenceMetadataUrl, undefined, jwtAuth)\n    }\n\n    return this.metadataClient\n  }\n\n  async getIndexerClient(chainId: ChainIdLike, tryAuth: boolean = true): Promise<Indexer> {\n    const network = findNetworkConfig(this.account.networks, chainId)\n    if (!network) {\n      throw Error(`No network for chain ${chainId}`)\n    }\n\n    if (!this.indexerClients.has(network.chainId)) {\n      if (network.indexer) {\n        this.indexerClients.set(network.chainId, network.indexer)\n      } else if (network.indexerUrl) {\n        const jwtAuth = (await this.getJWT(tryAuth)).token\n        this.indexerClients.set(network.chainId, new SequenceIndexer(network.indexerUrl, undefined, jwtAuth))\n      } else {\n        throw Error(`No indexer url for chain ${chainId}`)\n      }\n    }\n\n    return this.indexerClients.get(network.chainId)!\n  }\n\n  private getProofString(key: string): ProofStringPromise {\n    // check if we already have or are waiting for a proof string\n    if (this.proofStrings.has(key)) {\n      const proofString = this.proofStrings.get(key)!\n\n      if (this.now() < proofString.expiration) {\n        return proofString\n      }\n\n      // proof string expired, delete it and make a new one\n      this.proofStrings.delete(key)\n    }\n\n    const proof = new Proof({\n      address: this.account.address\n    })\n\n    proof.claims.app = this.settings.metadata.name\n    if (typeof window === 'object') {\n      proof.claims.ogn = window.location.origin\n    }\n    proof.setExpiryIn(this.expiration)\n\n    const ethAuth = new ETHAuth()\n    const chainId = BigInt(this.settings.sequenceApiChainId)\n    const found = findNetworkConfig(this.account.networks, chainId)\n    if (!found) {\n      throw Error('No network found')\n    }\n    ethAuth.chainId = Number(chainId)\n\n    const network = new ethers.Network(found.name, chainId)\n\n    // TODO: Modify ETHAuth so it can take a provider instead of a url\n    // -----\n    // Can't pass jwt here since this is used for getting the jwt\n    ethAuth.provider = new ethers.JsonRpcProvider(getFetchRequest(found.rpcUrl, this.projectAccessKey), network, {\n      staticNetwork: network\n    })\n\n    const expiration = this.now() + this.expiration - EXPIRATION_JWT_MARGIN\n\n    const proofString = {\n      proofString: Promise.resolve(\n        // NOTICE: TODO: Here we ask the account to sign the message\n        // using whatever configuration we have ON-CHAIN, this means\n        // that the account will still use the v1 wallet, even if the migration\n        // was signed.\n        //\n        // This works for Sequence webapp v1 -> v2 because all v1 configurations share the same formula\n        // (torus + guard), but if we ever decide to allow cross-device login, then it will not work, because\n        // those other signers may not be part of the configuration.\n        //\n        this.account.signDigest(proof.messageDigest(), this.settings.sequenceApiChainId, true, 'eip6492')\n      )\n        .then(s => {\n          proof.signature = s\n          return ethAuth.encodeProof(proof, true)\n        })\n        .catch(reason => {\n          this.proofStrings.delete(key)\n          throw reason\n        }),\n      expiration\n    }\n\n    this.proofStrings.set(key, proofString)\n    return proofString\n  }\n}\n","import { ethers } from 'ethers'\nimport { ETHAuth, Proof } from '@0xsequence/ethauth'\nimport { ChainIdLike, toChainIdNumber } from '@0xsequence/network'\nimport { TypedData } from '@0xsequence/utils'\nimport { Signer } from '@0xsequence/wallet'\nimport { Account } from '@0xsequence/account'\nimport { DEFAULT_SESSION_EXPIRATION } from './services'\n\nexport interface AuthorizationOptions {\n  // app name string, ie 'Skyweaver'\n  app?: string\n\n  // origin hostname of encoded in the message, ie. 'play.skyweaver.net'\n  origin?: string\n\n  // expiry in seconds encoded in the message\n  expiry?: number\n\n  // nonce for the authorization request\n  nonce?: number\n}\n\nexport interface ETHAuthProof {\n  // eip712 typed-data payload for ETHAuth domain as input\n  typedData: TypedData\n\n  // signature encoded in an ETHAuth proof string\n  proofString: string\n}\n\n// signAuthorization will perform an EIP712 typed-data message signing of ETHAuth domain via the provided\n// Signer and authorization options.\nexport const signAuthorization = async (\n  signer: Signer | Account,\n  chainId: ChainIdLike,\n  options: AuthorizationOptions\n): Promise<ETHAuthProof> => {\n  const address = ethers.getAddress(await signer.getAddress())\n  if (!address || address === '' || address === '0x') {\n    throw ErrAccountIsRequired\n  }\n\n  const proof = new Proof()\n  proof.address = address\n\n  if (!options || !options.app || options.app === '') {\n    throw new AuthError('authorization options requires app to be set')\n  }\n  proof.claims.app = options.app\n  proof.claims.ogn = options.origin\n  proof.claims.n = options.nonce\n\n  proof.setExpiryIn(options.expiry ? Math.max(options.expiry, 200) : DEFAULT_SESSION_EXPIRATION)\n\n  const typedData = proof.messageTypedData()\n\n  const chainIdNumber = toChainIdNumber(chainId)\n\n  proof.signature = await (signer instanceof Account\n    ? // Account can sign EIP-6492 signatures, so it doesn't require deploying the wallet\n      signer.signTypedData(typedData.domain, typedData.types, typedData.message, chainIdNumber, 'eip6492')\n    : signer.signTypedData(typedData.domain, typedData.types, typedData.message, chainIdNumber))\n\n  const ethAuth = new ETHAuth()\n  const proofString = await ethAuth.encodeProof(proof, true)\n\n  return {\n    typedData,\n    proofString\n  }\n}\n\n// TODO: review......\nexport class AuthError extends Error {\n  constructor(message?: string) {\n    super(message)\n    this.name = 'AuthError'\n  }\n}\n\nexport const ErrAccountIsRequired = new AuthError('auth error: account address is empty')\n","import { commons } from '@0xsequence/core'\nimport { ethers } from 'ethers'\n\nexport type PresignedConfig = {\n  wallet: string\n  nextConfig: commons.config.Config\n  signature: string\n}\n\nexport type PresignedConfigLink = Omit<PresignedConfig, 'nextConfig'> & { nextImageHash: string }\n\nexport type ConfigDataDump = {\n  configurations: commons.config.Config[]\n  wallets: {\n    imageHash: string\n    context: commons.context.WalletContext\n  }[]\n  presignedTransactions: PresignedConfigLink[]\n}\n\nexport abstract class ConfigTracker {\n  loadPresignedConfiguration: (args: {\n    wallet: string\n    fromImageHash: string\n    longestPath?: boolean\n  }) => Promise<PresignedConfigLink[]>\n\n  savePresignedConfiguration: (args: PresignedConfig) => Promise<void>\n\n  saveWitnesses: (args: { wallet: string; digest: string; chainId: ethers.BigNumberish; signatures: string[] }) => Promise<void>\n\n  configOfImageHash: (args: { imageHash: string; noCache?: boolean }) => Promise<commons.config.Config | undefined>\n\n  saveWalletConfig: (args: { config: commons.config.Config }) => Promise<void>\n\n  imageHashOfCounterfactualWallet: (args: { wallet: string; noCache?: boolean }) => Promise<\n    | {\n        imageHash: string\n        context: commons.context.WalletContext\n      }\n    | undefined\n  >\n\n  saveCounterfactualWallet: (args: { config: commons.config.Config; context: commons.context.WalletContext[] }) => Promise<void>\n\n  walletsOfSigner: (args: { signer: string; noCache?: boolean }) => Promise<\n    {\n      wallet: string\n      proof: {\n        digest: string\n        chainId: bigint\n        signature: string\n      }\n    }[]\n  >\n}\n","import { commons } from '@0xsequence/core'\nimport { migrator } from '@0xsequence/migration'\nimport { ConfigTracker, PresignedConfig, PresignedConfigLink } from '../tracker'\nimport { ethers } from 'ethers'\nimport { bigintReplacer } from '@0xsequence/utils'\n\nexport class DebugConfigTracker implements ConfigTracker, migrator.PresignedMigrationTracker {\n  constructor(private readonly tracker: ConfigTracker & migrator.PresignedMigrationTracker) {}\n\n  async loadPresignedConfiguration(args: {\n    wallet: string\n    fromImageHash: string\n    longestPath?: boolean\n  }): Promise<PresignedConfigLink[]> {\n    console.debug('? loadPresignedConfiguration')\n    debug(args, '? ')\n    return debug(await this.tracker.loadPresignedConfiguration(args), '! ')\n  }\n\n  savePresignedConfiguration(args: PresignedConfig): Promise<void> {\n    console.debug('? savePresignedConfiguration')\n    debug(args, '? ')\n    return this.tracker.savePresignedConfiguration(args)\n  }\n\n  saveWitnesses(args: { wallet: string; digest: string; chainId: ethers.BigNumberish; signatures: string[] }): Promise<void> {\n    console.debug('? saveWitnesses')\n    debug(args, '? ')\n    return this.tracker.saveWitnesses(args)\n  }\n\n  async configOfImageHash(args: { imageHash: string }): Promise<commons.config.Config | undefined> {\n    console.debug('? configOfImageHash')\n    debug(args, '? ')\n    return debug(await this.tracker.configOfImageHash(args), '! ')\n  }\n\n  saveWalletConfig(args: { config: commons.config.Config }): Promise<void> {\n    console.debug('? saveWalletConfig')\n    debug(args, '? ')\n    return this.tracker.saveWalletConfig(args)\n  }\n\n  async imageHashOfCounterfactualWallet(args: {\n    wallet: string\n  }): Promise<{ imageHash: string; context: commons.context.WalletContext } | undefined> {\n    console.debug('? imageHashOfCounterfactualWallet')\n    debug(args, '? ')\n    return debug(await this.tracker.imageHashOfCounterfactualWallet(args), '! ')\n  }\n\n  saveCounterfactualWallet(args: { config: commons.config.Config; context: commons.context.WalletContext[] }): Promise<void> {\n    console.debug('? saveCounterfactualWallet')\n    debug(args, '? ')\n    return this.tracker.saveCounterfactualWallet(args)\n  }\n\n  async walletsOfSigner(args: {\n    signer: string\n  }): Promise<{ wallet: string; proof: { digest: string; chainId: bigint; signature: string } }[]> {\n    console.debug('? walletsOfSigner')\n    debug(args, '? ')\n    return debug(await this.tracker.walletsOfSigner(args), '! ')\n  }\n\n  async getMigration(\n    address: string,\n    fromImageHash: string,\n    fromVersion: number,\n    chainId: ethers.BigNumberish\n  ): Promise<migrator.SignedMigration | undefined> {\n    console.debug('? getMigration')\n    debug({ address, fromImageHash, fromVersion, chainId }, '? ')\n    return debug(await this.tracker.getMigration(address, fromImageHash, fromVersion, chainId), '! ')\n  }\n\n  saveMigration(address: string, signed: migrator.SignedMigration, contexts: commons.context.VersionedContext): Promise<void> {\n    console.debug('? saveMigration')\n    debug({ address, signed, contexts }, '? ')\n    return this.tracker.saveMigration(address, signed, contexts)\n  }\n}\n\nfunction debug<T>(value: T, prefix: string = ''): T {\n  switch (value) {\n    case undefined:\n      console.debug(prefix + 'undefined')\n      break\n    default:\n      JSON.stringify(value, bigintReplacer, 2)\n        .split('\\n')\n        .map(line => prefix + line)\n        .forEach(line => console.debug(line))\n      break\n  }\n  return value\n}\n","import { ethers } from 'ethers'\nimport { runByEIP5719, URISolver } from '.'\n\nexport class CachedEIP5719 {\n  constructor(\n    public provider: ethers.Provider,\n    public solver?: URISolver,\n    public window: number = 1000\n  ) {}\n\n  private pending: Map<\n    string,\n    {\n      timestamp: number\n      promise: Promise<ethers.BytesLike>\n    }\n  > = new Map()\n\n  async runByEIP5719(address: string, digest: ethers.BytesLike, signature: ethers.BytesLike): Promise<ethers.BytesLike> {\n    const key = `${address}-${digest}-${signature}`\n    const now = Date.now()\n\n    if (this.pending.has(key) && now - this.pending.get(key)!.timestamp < this.window) {\n      return this.pending.get(key)!.promise\n    }\n\n    const promise = runByEIP5719(address, this.provider, digest, signature, this.solver)\n    this.pending.set(key, { timestamp: now, promise })\n    return promise\n  }\n}\n","import { ethers } from 'ethers'\nimport { walletContracts } from '@0xsequence/abi'\nimport { isIPFS, useGateway } from './ipfs'\nimport { commons } from '@0xsequence/core'\n\nexport * from './cached'\n\nexport function eip5719Contract(address: string, provider: ethers.Provider): ethers.Contract {\n  // TODO: for some reason walletContracts is not being loaded from local\n  // remove this code once fixed\n  const abi = [\n    {\n      inputs: [\n        {\n          internalType: 'bytes32',\n          type: 'bytes32'\n        }\n      ],\n      name: 'getAlternativeSignature',\n      outputs: [\n        {\n          internalType: 'string',\n          type: 'string'\n        }\n      ],\n      stateMutability: 'view',\n      type: 'function'\n    }\n  ]\n\n  return new ethers.Contract(address, abi, provider)\n}\n\nexport function eip1271Contract(address: string, provider: ethers.Provider): ethers.Contract {\n  return new ethers.Contract(address, walletContracts.erc1271.abi, provider)\n}\n\nexport async function isValidSignature(\n  address: string,\n  provider: ethers.Provider,\n  digest: ethers.BytesLike,\n  signature: ethers.BytesLike\n): Promise<boolean> {\n  // First we try to validate the signature using Ethers\n  try {\n    const addr = ethers.recoverAddress(digest, ethers.hexlify(signature))\n    if (addr.toLowerCase() === address.toLowerCase()) return true\n  } catch {}\n\n  // Then we try to validate the signature using EIP1271\n  try {\n    const contract = eip1271Contract(address, provider)\n    const value = await contract.isValidSignature(digest, signature)\n    if (value === walletContracts.erc1271.returns) return true\n  } catch {}\n\n  // If all else fails, we return false\n  return false\n}\n\nexport interface URISolver {\n  resolve: (uri: string) => Promise<string>\n}\n\nasync function tryAwait<T>(promise: Promise<T>): Promise<T | undefined> {\n  try {\n    return await promise\n  } catch {\n    return undefined\n  }\n}\n\nexport async function runByEIP5719(\n  address: string,\n  provider: ethers.Provider,\n  digest: ethers.BytesLike,\n  signature: ethers.BytesLike,\n  solver?: URISolver,\n  tries: number = 0\n): Promise<ethers.BytesLike> {\n  if (tries > 10) throw new Error('EIP5719 - Too many tries')\n\n  if (commons.signer.canRecover(signature)) {\n    const recoveredAddr = commons.signer.recoverSigner(digest, signature)\n    if (recoveredAddr && recoveredAddr.toLowerCase() === address.toLowerCase()) return signature\n  }\n\n  try {\n    if (await commons.signer.isValidSignature(address, digest, signature, provider)) {\n      return signature\n    }\n  } catch {}\n\n  const altUri = await tryAwait(eip5719Contract(address, provider).getAlternativeSignature(digest) as Promise<string>)\n  if (!altUri || altUri === '') throw new Error('EIP5719 - Invalid signature and no alternative signature')\n\n  const altSignature = ethers.hexlify(await (solver || new URISolverIPFS()).resolve(altUri))\n  if (!altSignature || altSignature === '') throw new Error('EIP5719 - Empty alternative signature')\n  if (altSignature === ethers.hexlify(signature)) {\n    throw new Error('EIP5719 - Alternative signature is invalid or the same')\n  }\n  return runByEIP5719(address, provider, digest, altSignature, solver, tries + 1)\n}\n\nexport class URISolverIPFS implements URISolver {\n  constructor(public gateway: string = 'https://cloudflare-ipfs.com/ipfs/') {}\n\n  uri = (uri: string): string => {\n    if (isIPFS(uri)) return useGateway(uri, this.gateway)\n    return uri\n  }\n\n  resolve = async (uri: string): Promise<string> => {\n    const url = this.uri(uri)\n    const res = await fetch(url)\n    if (!res.ok) throw new Error(`URISolverIPFS - Failed to fetch ${url}`)\n    return await res.text()\n  }\n}\n","export function useGateway(uri: string, gateway: string) {\n  const clean = uri.replace('ipfs://ipfs/', '').replace('ipfs://', '')\n  if (uri.startsWith('ipfs://')) return `${gateway}${clean}`\n  return uri\n}\n\nexport function isIPFS(uri: string): boolean {\n  return uri.startsWith('ipfs://')\n}\n","import { commons, v1, v2 } from '@0xsequence/core'\nimport { ethers } from 'ethers'\nimport { PlainNested, PlainNode, PlainV2Config, TrackerStore } from '.'\n\nexport class MemoryTrackerStore implements TrackerStore {\n  private configs: { [imageHash: string]: v1.config.WalletConfig | v2.config.WalletConfig | PlainV2Config } = {}\n  private v2Nodes: { [nodeHash: string]: PlainNode | PlainNested | v2.config.Topology } = {}\n  private counterfactualWallets: { [wallet: string]: { imageHash: string; context: commons.context.WalletContext } } = {}\n  private payloads: { [subdigest: string]: commons.signature.SignedPayload } = {}\n  private signatures: { [signer: string]: { [subdigest: string]: ethers.BytesLike } } = {}\n  private migrations: {\n    [wallet: string]: { [fromVersion: number]: { [toVersion: number]: { subdigest: string; toImageHash: string }[] } }\n  } = {}\n\n  loadConfig = (imageHash: string): Promise<v1.config.WalletConfig | v2.config.WalletConfig | PlainV2Config | undefined> => {\n    return Promise.resolve(this.configs[imageHash])\n  }\n\n  saveConfig = (imageHash: string, config: v1.config.WalletConfig | v2.config.WalletConfig | PlainV2Config): Promise<void> => {\n    this.configs[imageHash] = config\n    return Promise.resolve()\n  }\n\n  loadV2Node = (nodeHash: string): Promise<v2.config.Topology | PlainNode | PlainNested | undefined> => {\n    return Promise.resolve(this.v2Nodes[nodeHash])\n  }\n\n  saveV2Node = (nodeHash: string, node: v2.config.Topology | PlainNode | PlainNested): Promise<void> => {\n    this.v2Nodes[nodeHash] = node\n    return Promise.resolve()\n  }\n\n  loadCounterfactualWallet = (\n    wallet: string\n  ): Promise<{ imageHash: string; context: commons.context.WalletContext } | undefined> => {\n    return Promise.resolve(this.counterfactualWallets[wallet])\n  }\n\n  saveCounterfactualWallet = (wallet: string, imageHash: string, context: commons.context.WalletContext): Promise<void> => {\n    this.counterfactualWallets[wallet] = { imageHash, context }\n    return Promise.resolve()\n  }\n\n  loadPayloadOfSubdigest = (subdigest: string): Promise<commons.signature.SignedPayload | undefined> => {\n    return Promise.resolve(this.payloads[subdigest])\n  }\n\n  savePayloadOfSubdigest = (subdigest: string, payload: commons.signature.SignedPayload): Promise<void> => {\n    this.payloads[subdigest] = payload\n    return Promise.resolve()\n  }\n\n  loadSubdigestsOfSigner = (signer: string): Promise<string[]> => {\n    return Promise.resolve(Object.keys(this.signatures[signer] || {}))\n  }\n\n  loadSignatureOfSubdigest = (signer: string, subdigest: string): Promise<ethers.BytesLike | undefined> => {\n    return Promise.resolve(this.signatures[signer]?.[subdigest])\n  }\n\n  saveSignatureOfSubdigest = (signer: string, subdigest: string, payload: ethers.BytesLike): Promise<void> => {\n    if (!this.signatures[signer]) this.signatures[signer] = {}\n    this.signatures[signer][subdigest] = payload\n    return Promise.resolve()\n  }\n\n  loadMigrationsSubdigest = (\n    wallet: string,\n    fromVersion: number,\n    toVersion: number\n  ): Promise<{ subdigest: string; toImageHash: string }[]> => {\n    return Promise.resolve(this.migrations[wallet]?.[fromVersion]?.[toVersion] || [])\n  }\n\n  saveMigrationsSubdigest = (\n    wallet: string,\n    fromVersion: number,\n    toVersion: number,\n    subdigest: string,\n    toImageHash: string\n  ): Promise<void> => {\n    if (!this.migrations[wallet]) this.migrations[wallet] = {}\n    if (!this.migrations[wallet][fromVersion]) this.migrations[wallet][fromVersion] = {}\n    if (!this.migrations[wallet][fromVersion][toVersion]) this.migrations[wallet][fromVersion][toVersion] = []\n    this.migrations[wallet][fromVersion][toVersion].push({ subdigest, toImageHash })\n    return Promise.resolve()\n  }\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","import { commons, v1, v2 } from '@0xsequence/core'\nimport { ethers } from 'ethers'\nimport { PlainNested, PlainNode, PlainV2Config, TrackerStore } from '.'\n\nimport { DBSchema, IDBPDatabase, openDB } from 'idb'\n\nexport interface LocalTrackerDBSchema extends DBSchema {\n  configs: {\n    key: string\n    value: v1.config.WalletConfig | v2.config.WalletConfig | PlainV2Config\n  }\n  v2Nodes: {\n    key: string\n    value: v2.config.Topology | PlainNode | PlainNested\n  }\n  counterfactualWallets: {\n    key: string\n    value: {\n      imageHash: string\n      context: commons.context.WalletContext\n    }\n  }\n  payloads: {\n    key: string\n    value: commons.signature.SignedPayload\n  }\n  signatures: {\n    key: string // `${signer}-${subdigest}`\n    value: {\n      signature: ethers.BytesLike\n      signer: string\n    }\n    indexes: {\n      signer: string\n    }\n  }\n  migrations: {\n    key: string\n    value: {\n      wallet: string\n      fromVersion: number\n      toVersion: number\n      subdigest: string\n      toImageHash: string\n    }\n    indexes: {\n      jump: string // '${wallet}-${fromVersion}-${toVersion}\n    }\n  }\n}\n\nexport function recreateBigNumbers<T extends object | undefined>(object: T): T | undefined {\n  if (object === undefined) return undefined\n\n  const result = {} as any\n\n  for (const key of Object.keys(object)) {\n    const val = (object as any)[key as string]\n\n    if (val._isBigNumber === true && val._hex !== undefined && typeof val._hex === 'string' && val._hex.length !== '') {\n      // Entry is a big number\n      result[key] = BigInt(val._hex)\n    } else if (Array.isArray(val)) {\n      // Entry is an array, recurse\n      result[key] = val.map(v => recreateBigNumbers(v))\n    } else if (typeof val === 'object' && val !== null) {\n      // Entry is another object, recurse\n      result[key] = recreateBigNumbers(val)\n    } else {\n      // Entry is a primitive, just copy\n      result[key] = val\n    }\n  }\n\n  return result\n}\n\nexport class IndexedDBStore implements TrackerStore {\n  private _lazyDb: IDBPDatabase<LocalTrackerDBSchema> | undefined\n\n  constructor(public dbName: string) {}\n\n  async getDb() {\n    if (this._lazyDb) return this._lazyDb\n\n    const dbName = this.dbName\n    this._lazyDb = await openDB<LocalTrackerDBSchema>(dbName, 1, {\n      upgrade(db, oldVersion, newVersion, transaction) {\n        console.log(`upgrading ${dbName} from ${oldVersion} to ${newVersion} - ${transaction}`)\n        if (oldVersion === 0) {\n          db.createObjectStore('configs')\n          db.createObjectStore('v2Nodes')\n          db.createObjectStore('counterfactualWallets')\n          db.createObjectStore('payloads')\n\n          const signatures = db.createObjectStore('signatures')\n          signatures.createIndex('signer', 'signer', { unique: false })\n\n          const migrations = db.createObjectStore('migrations')\n          migrations.createIndex('jump', ['wallet', 'fromVersion', 'toVersion'])\n        }\n      }\n    })\n    return this._lazyDb\n  }\n\n  loadConfig = async (\n    imageHash: string\n  ): Promise<v1.config.WalletConfig | v2.config.WalletConfig | PlainV2Config | undefined> => {\n    const db = await this.getDb()\n    return db.get('configs', imageHash).then(c => recreateBigNumbers(c))\n  }\n\n  saveConfig = async (\n    imageHash: string,\n    config: v1.config.WalletConfig | v2.config.WalletConfig | PlainV2Config\n  ): Promise<void> => {\n    const db = await this.getDb()\n    await db.put('configs', config, imageHash)\n  }\n\n  loadV2Node = async (nodeHash: string): Promise<v2.config.Topology | PlainNode | PlainNested | undefined> => {\n    const db = await this.getDb()\n    return db.get('v2Nodes', nodeHash).then(c => recreateBigNumbers(c))\n  }\n\n  saveV2Node = async (nodeHash: string, node: v2.config.Topology | PlainNode | PlainNested): Promise<void> => {\n    const db = await this.getDb()\n    await db.put('v2Nodes', node, nodeHash)\n  }\n\n  loadCounterfactualWallet = async (\n    wallet: string\n  ): Promise<{ imageHash: string; context: commons.context.WalletContext } | undefined> => {\n    const db = await this.getDb()\n    return db.get('counterfactualWallets', wallet)\n  }\n\n  saveCounterfactualWallet = async (wallet: string, imageHash: string, context: commons.context.WalletContext): Promise<void> => {\n    const db = await this.getDb()\n    await db.put('counterfactualWallets', { imageHash, context }, wallet)\n  }\n\n  loadPayloadOfSubdigest = async (subdigest: string): Promise<commons.signature.SignedPayload | undefined> => {\n    const db = await this.getDb()\n    return db.get('payloads', subdigest).then(c => recreateBigNumbers(c))\n  }\n\n  savePayloadOfSubdigest = async (subdigest: string, payload: commons.signature.SignedPayload): Promise<void> => {\n    const db = await this.getDb()\n    await db.put('payloads', payload, subdigest)\n  }\n\n  loadSubdigestsOfSigner = async (signer: string): Promise<string[]> => {\n    const db = await this.getDb()\n    const index = await db.getAllKeysFromIndex('signatures', 'signer', IDBKeyRange.only(signer))\n    return index.map(key => key.split('-')[0])\n  }\n\n  loadSignatureOfSubdigest = async (signer: string, subdigest: string): Promise<ethers.BytesLike | undefined> => {\n    const db = await this.getDb()\n    const signature = await db.get('signatures', [subdigest, signer].join('-'))\n    return signature?.signature\n  }\n\n  saveSignatureOfSubdigest = async (signer: string, subdigest: string, payload: ethers.BytesLike): Promise<void> => {\n    const db = await this.getDb()\n    await db.put('signatures', { signature: payload, signer }, [subdigest, signer].join('-'))\n  }\n\n  loadMigrationsSubdigest = async (\n    wallet: string,\n    fromVersion: number,\n    toVersion: number\n  ): Promise<{ subdigest: string; toImageHash: string }[]> => {\n    const db = await this.getDb()\n    const index = await db.getAllFromIndex('migrations', 'jump', IDBKeyRange.only([wallet, fromVersion, toVersion]))\n    return index.map(key => ({ subdigest: key.subdigest, toImageHash: key.toImageHash }))\n  }\n\n  saveMigrationsSubdigest = async (\n    wallet: string,\n    fromVersion: number,\n    toVersion: number,\n    subdigest: string,\n    toImageHash: string\n  ): Promise<void> => {\n    const db = await this.getDb()\n    await db.put('migrations', { wallet, fromVersion, toVersion, subdigest, toImageHash }, subdigest)\n  }\n}\n","import { commons, v1, v2 } from '@0xsequence/core'\nimport { ethers } from 'ethers'\n\nexport type PlainNode = {\n  left: string\n  right: string\n}\n\nexport type PlainNested = {\n  weight: string\n  threshold: string\n  tree: string\n}\n\nexport type PlainV2Config = {\n  version: 2\n  threshold: string\n  checkpoint: string\n  tree: string\n}\n\nexport function isPlainNode(node: any): node is PlainNode {\n  return node.left !== undefined && node.right !== undefined\n}\n\nexport function isPlainNested(node: any): node is PlainNested {\n  return node.weight !== undefined && node.threshold !== undefined && node.tree !== undefined\n}\n\nexport function isPlainV2Config(config: any): config is PlainV2Config {\n  return (\n    config.version === 2 &&\n    config.threshold !== undefined &&\n    config.checkpoint !== undefined &&\n    config.tree !== undefined &&\n    typeof config.tree === 'string'\n  )\n}\n\nexport interface TrackerStore {\n  // top level configurations store\n  loadConfig: (imageHash: string) => Promise<v1.config.WalletConfig | PlainV2Config | v2.config.WalletConfig | undefined>\n  saveConfig: (imageHash: string, config: v1.config.WalletConfig | PlainV2Config | v2.config.WalletConfig) => Promise<void>\n\n  // v2 configurations store\n  loadV2Node: (nodeHash: string) => Promise<PlainNode | PlainNested | v2.config.Topology | undefined>\n  saveV2Node: (nodeHash: string, node: PlainNode | PlainNested | v2.config.Topology) => Promise<void>\n\n  // counterfactual wallets\n  loadCounterfactualWallet: (wallet: string) => Promise<{ imageHash: string; context: commons.context.WalletContext } | undefined>\n  saveCounterfactualWallet: (wallet: string, imageHash: string, context: commons.context.WalletContext) => Promise<void>\n\n  // payloads\n  loadPayloadOfSubdigest: (subdigest: string) => Promise<commons.signature.SignedPayload | undefined>\n  savePayloadOfSubdigest: (subdigest: string, payload: commons.signature.SignedPayload) => Promise<void>\n\n  // signatures\n  loadSubdigestsOfSigner: (signer: string) => Promise<string[]>\n  loadSignatureOfSubdigest: (signer: string, subdigest: string) => Promise<ethers.BytesLike | undefined>\n  saveSignatureOfSubdigest: (signer: string, subdigest: string, payload: ethers.BytesLike) => Promise<void>\n\n  // migrations\n  loadMigrationsSubdigest: (\n    wallet: string,\n    fromVersion: number,\n    toVersion: number\n  ) => Promise<{ subdigest: string; toImageHash: string }[]>\n  saveMigrationsSubdigest: (\n    wallet: string,\n    fromVersion: number,\n    toVersion: number,\n    subdigest: string,\n    toImageHash: string\n  ) => Promise<void>\n}\n\nexport * from './memoryStore'\nexport * from './indexedDBStore'\n","import { commons, universal, v1, v2 } from '@0xsequence/core'\nimport { migration, migrator } from '@0xsequence/migration'\nimport { ethers } from 'ethers'\nimport { CachedEIP5719 } from '@0xsequence/replacer'\nimport { ConfigTracker, PresignedConfig, PresignedConfigLink } from '../tracker'\nimport { isPlainNested, isPlainNode, isPlainV2Config, MemoryTrackerStore, PlainNested, PlainNode, TrackerStore } from './stores'\n\nexport class LocalConfigTracker implements ConfigTracker, migrator.PresignedMigrationTracker {\n  private cachedEIP5719: CachedEIP5719\n\n  constructor(\n    // TODO: The provider is only used to determine that EIP1271 signatures have *some* validity\n    // but when reconstructing a presigned transaction we should do the replacement once per chain.\n    // For now, it's recommended to use Mainnet as the provider.\n    public provider: ethers.Provider,\n    private store: TrackerStore = new MemoryTrackerStore(),\n    public useEIP5719: boolean = false\n  ) {\n    this.cachedEIP5719 = new CachedEIP5719(provider)\n  }\n\n  private loadTopology = async (hash: string): Promise<v2.config.Topology> => {\n    const node = await this.store.loadV2Node(hash)\n    if (!node) return { nodeHash: hash }\n\n    if (isPlainNode(node)) {\n      const [left, right] = await Promise.all([this.loadTopology(node.left), this.loadTopology(node.right)])\n      return { left, right }\n    }\n\n    if (isPlainNested(node)) {\n      return {\n        weight: BigInt(node.weight),\n        threshold: BigInt(node.threshold),\n        tree: await this.loadTopology(node.tree)\n      }\n    }\n\n    return node\n  }\n\n  private saveTopology = async (node: v2.config.Topology): Promise<void> => {\n    if (v2.config.isNodeLeaf(node)) {\n      return // Nothing to do, this is a dead-end\n    }\n\n    const hash = v2.config.hashNode(node)\n\n    if (v2.config.isNode(node)) {\n      const saveLeft = this.saveTopology(node.left)\n      const saveRight = this.saveTopology(node.right)\n      const saveThis = this.store.saveV2Node(hash, {\n        left: v2.config.hashNode(node.left),\n        right: v2.config.hashNode(node.right)\n      } as PlainNode)\n\n      await Promise.all([saveLeft, saveRight, saveThis])\n\n      return\n    }\n\n    if (v2.config.isNestedLeaf(node)) {\n      const saveTree = this.saveTopology(node.tree)\n      const saveThis = this.store.saveV2Node(hash, {\n        weight: BigInt(node.weight).toString(),\n        threshold: BigInt(node.threshold).toString(),\n        tree: v2.config.hashNode(node.tree)\n      } as PlainNested)\n\n      await Promise.all([saveTree, saveThis])\n\n      return\n    }\n\n    // If it's a normal leaf, then we just store it\n    if (v2.config.isSignerLeaf(node)) {\n      return this.store.saveV2Node(hash, {\n        address: node.address,\n        weight: node.weight\n      })\n    }\n\n    if (v2.config.isSubdigestLeaf(node)) {\n      return this.store.saveV2Node(hash, {\n        subdigest: node.subdigest\n      })\n    }\n\n    throw new Error(`Unknown topology type: ${node}`)\n  }\n\n  saveWalletConfig = async (args: { config: commons.config.Config }): Promise<void> => {\n    const { config } = args\n    if (v1.config.ConfigCoder.isWalletConfig(config)) {\n      // We can store the configuration as-is\n      const imageHash = v1.config.ConfigCoder.imageHashOf(config)\n      return this.store.saveConfig(imageHash, config)\n    }\n\n    if (v2.config.ConfigCoder.isWalletConfig(config)) {\n      // We split the configuration in a list of nodes, and store them individually\n      // then we can reconstruct it. This also means we can combine multiple configurations\n      // if they share information\n      const imageHash = v2.config.ConfigCoder.imageHashOf(config)\n\n      // This is an optimization, it allows us to avoid splitting the tree if it's already complete\n      if (v2.config.isComplete(config.tree)) {\n        return this.store.saveConfig(imageHash, config)\n      }\n\n      // TODO: Re-enable storing partial v2 configs once\n      // we have more performant code to reconstructing them\n      // in the meantime, rely on the remote tracker\n\n      // const storeTree = this.saveTopology(config.tree)\n      // const storeConfig = this.store.saveConfig(imageHash, {\n      //   version: 2,\n      //   threshold: BigInt(config.threshold).toString(),\n      //   checkpoint: BigInt(config.checkpoint).toString(),\n      //   tree: v2.config.hashNode(config.tree)\n      // })\n\n      // await Promise.all([storeTree, storeConfig])\n    }\n\n    return\n  }\n\n  private configOfImageHashCache = {} as { [key: string]: commons.config.Config }\n\n  configOfImageHash = async (args: { imageHash: string }): Promise<commons.config.Config | undefined> => {\n    const { imageHash } = args\n\n    if (this.configOfImageHashCache[args.imageHash]) {\n      return this.configOfImageHashCache[args.imageHash]\n    }\n\n    const config = await this.store.loadConfig(imageHash)\n    if (!config) {\n      return undefined\n    }\n\n    if (config.version === 1 || (config.version === 2 && !isPlainV2Config(config))) {\n      this.configOfImageHashCache[args.imageHash] = config\n      return config\n    }\n\n    if (isPlainV2Config(config)) {\n      const fullConfig = {\n        version: 2,\n        threshold: BigInt(config.threshold),\n        checkpoint: BigInt(config.checkpoint),\n        tree: await this.loadTopology(config.tree)\n      } as v2.config.WalletConfig\n      this.configOfImageHashCache[args.imageHash] = fullConfig\n      return fullConfig\n    }\n\n    throw new Error(`Unknown config type: ${config}`)\n  }\n\n  saveCounterfactualWallet = async (args: {\n    config: commons.config.Config\n    context: commons.context.WalletContext[]\n  }): Promise<void> => {\n    const { config, context } = args\n    const imageHash = universal.genericCoderFor(config.version).config.imageHashOf(config)\n    await Promise.all([\n      this.saveWalletConfig({ config }),\n      ...context.map(ctx => {\n        const address = commons.context.addressOf(ctx, imageHash)\n        return this.store.saveCounterfactualWallet(address, imageHash, ctx)\n      })\n    ])\n  }\n\n  imageHashOfCounterfactualWallet = async (args: {\n    wallet: string\n  }): Promise<\n    | {\n        imageHash: string\n        context: commons.context.WalletContext\n      }\n    | undefined\n  > => {\n    const { wallet } = args\n    const result = await this.store.loadCounterfactualWallet(wallet)\n\n    if (!result) return undefined\n\n    return {\n      imageHash: result.imageHash,\n      context: result.context\n    }\n  }\n\n  savePayload = async (args: { payload: commons.signature.SignedPayload }): Promise<void> => {\n    const { payload } = args\n\n    const subdigest = commons.signature.subdigestOf(payload)\n    await this.store.savePayloadOfSubdigest(subdigest, payload)\n  }\n\n  private payloadOfSubdigestCache = {} as { [key: string]: commons.signature.SignedPayload }\n\n  payloadOfSubdigest = async (args: { subdigest: string }): Promise<commons.signature.SignedPayload | undefined> => {\n    if (this.payloadOfSubdigestCache[args.subdigest]) {\n      return this.payloadOfSubdigestCache[args.subdigest]\n    }\n\n    const { subdigest } = args\n    const res = await this.store.loadPayloadOfSubdigest(subdigest)\n\n    if (res) {\n      this.payloadOfSubdigestCache[subdigest] = res\n    }\n\n    return res\n  }\n\n  savePresignedConfiguration = async (args: PresignedConfig): Promise<void> => {\n    // Presigned configurations only work with v2 (for now)\n    // so we can assume that the signature is for a v2 configuration\n    const decoded = v2.signature.SignatureCoder.decode(args.signature)\n    const nextImageHash = universal.genericCoderFor(args.nextConfig.version).config.imageHashOf(args.nextConfig)\n    const message = v2.chained.messageSetImageHash(nextImageHash)\n    const digest = ethers.keccak256(message)\n    const payload = {\n      message,\n      address: args.wallet,\n      chainId: 0,\n      digest\n    }\n\n    const savePayload = this.savePayload({ payload })\n    const saveNextConfig = this.saveWalletConfig({ config: args.nextConfig })\n\n    const recovered = await v2.signature.SignatureCoder.recover(decoded, payload, this.provider)\n\n    // Save the recovered configuration and all signature parts\n    const signatures = v2.signature.signaturesOf(recovered.config.tree)\n    await Promise.all([\n      savePayload,\n      saveNextConfig,\n      this.saveWalletConfig({ config: recovered.config }),\n      ...signatures.map(sig => this.store.saveSignatureOfSubdigest(sig.address, recovered.subdigest, sig.signature))\n    ])\n  }\n\n  loadPresignedConfiguration = async (args: {\n    wallet: string\n    fromImageHash: string\n    longestPath?: boolean\n  }): Promise<PresignedConfigLink[]> => {\n    const { wallet, fromImageHash, longestPath } = args\n\n    const fromConfig = await this.configOfImageHash({ imageHash: fromImageHash })\n    if (!fromConfig || !v2.config.ConfigCoder.isWalletConfig(fromConfig)) {\n      return []\n    }\n\n    // Get all subdigests for the config members\n    const signers = v2.config.signersOf(fromConfig.tree).map(s => s.address)\n    const subdigestsOfSigner = await Promise.all(signers.map(s => this.store.loadSubdigestsOfSigner(s)))\n    const subdigests = [...new Set(subdigestsOfSigner.flat())]\n\n    // Get all unique payloads\n    const payloads = await Promise.all(\n      [...new Set(subdigests)].map(async s => ({ ...(await this.payloadOfSubdigest({ subdigest: s })), subdigest: s }))\n    )\n\n    // Get all possible next imageHashes based on the payloads\n    const nextImageHashes = payloads\n      .filter(p => p?.message && p?.address && p.address === wallet)\n      .map(p => ({ payload: p, nextImageHash: v2.chained.decodeMessageSetImageHash(p!.message!) }))\n      .filter(p => p?.nextImageHash) as {\n      payload: commons.signature.SignedPayload & { subdigest: string }\n      nextImageHash: string\n    }[]\n\n    // Build a signature for each next imageHash\n    // and filter out the ones that don't have enough weight\n    let bestCandidate:\n      | {\n          nextImageHash: string\n          checkpoint: bigint\n          signature: string\n        }\n      | undefined\n\n    const nextConfigsAndCheckpoints = await Promise.all(\n      nextImageHashes.map(async ({ nextImageHash, payload }) => {\n        const nextConfig = await this.configOfImageHash({ imageHash: nextImageHash })\n        if (!nextConfig || !v2.config.isWalletConfig(nextConfig)) return undefined\n        const nextCheckpoint = BigInt(nextConfig.checkpoint)\n        return { nextConfig, nextCheckpoint, nextImageHash, payload }\n      })\n    )\n\n    const sortedNextConfigsAndCheckpoints = nextConfigsAndCheckpoints\n      .filter(c => c !== undefined)\n      .filter(c => c!.nextCheckpoint > BigInt(fromConfig.checkpoint))\n      .sort((a, b) =>\n        // If we are looking for the longest path, sort by ascending checkpoint\n        // because we want to find the smalles jump, and we should start with the\n        // closest one. If we are not looking for the longest path, sort by\n        // descending checkpoint, because we want to find the largest jump.\n        //\n        // We don't have a guarantee that all \"next configs\" will be valid\n        // so worst case scenario we will need to try all of them.\n        // But we can try to optimize for the most common case.\n        a!.nextCheckpoint > b!.nextCheckpoint ? (longestPath ? 1 : -1) : longestPath ? -1 : 1\n      )\n\n    for (const entry of sortedNextConfigsAndCheckpoints) {\n      const { nextConfig, nextCheckpoint, nextImageHash, payload } = entry!\n\n      if (bestCandidate) {\n        const bestCheckpoint = bestCandidate.checkpoint\n        if (longestPath) {\n          // Only consider candidates earlier than our current best\n          if (nextCheckpoint >= bestCheckpoint) continue\n        } else {\n          // Only consider candidates later than our current best\n          if (nextCheckpoint <= bestCheckpoint) continue\n        }\n      }\n\n      // Get all signatures (for all signers) for this subdigest\n      const signatures = new Map(\n        (\n          await Promise.all(\n            signers.map(async signer => {\n              const signature = await this.store.loadSignatureOfSubdigest(signer, payload.subdigest)\n              if (!signature) {\n                return [signer, undefined]\n              }\n\n              const replacedSignature = ethers.hexlify(\n                this.useEIP5719 ? await this.cachedEIP5719.runByEIP5719(signer, payload.subdigest, signature) : signature\n              )\n\n              const isDynamic = commons.signer.tryRecoverSigner(payload.subdigest, replacedSignature) !== signer\n\n              return [signer, { isDynamic, signature: replacedSignature }]\n            })\n          )\n        ).filter((signature): signature is [string, commons.signature.SignaturePart] => Boolean(signature[1]))\n      )\n\n      // Skip if we don't have ANY signatures (it can never reach the threshold)\n      if (signatures.size === 0) continue\n\n      // Encode the full signature (to see if it has enough weight)\n      const encoded = v2.signature.SignatureCoder.encodeSigners(fromConfig, signatures, [], 0)\n      if (encoded.weight < BigInt(fromConfig.threshold)) continue\n\n      // Save the new best candidate\n      bestCandidate = {\n        nextImageHash,\n        checkpoint: BigInt(nextConfig.checkpoint),\n        signature: encoded.encoded\n      }\n    }\n\n    if (!bestCandidate) {\n      return []\n    }\n\n    // Get the next step\n    const nextStep = await this.loadPresignedConfiguration({\n      wallet,\n      fromImageHash: bestCandidate.nextImageHash,\n      longestPath\n    })\n\n    return [\n      {\n        wallet,\n        nextImageHash: bestCandidate.nextImageHash,\n        signature: bestCandidate.signature\n      },\n      ...nextStep\n    ]\n  }\n\n  saveWitnesses = async (args: {\n    wallet: string\n    digest: string\n    chainId: ethers.BigNumberish\n    signatures: string[]\n  }): Promise<void> => {\n    const payload = {\n      digest: args.digest,\n      address: args.wallet,\n      chainId: args.chainId\n    }\n\n    const subdigest = commons.signature.subdigestOf(payload)\n\n    await Promise.all([\n      this.savePayload({ payload }),\n      ...args.signatures\n        .filter(signature => {\n          // We don't support saving witnesses for non-recoverable signatures\n          // we could change this eventually, but the issue is that the witness may become invalid\n          return commons.signer.canRecover(signature)\n        })\n        .map(signature => {\n          const signer = commons.signer.recoverSigner(subdigest, signature)\n          return this.store.saveSignatureOfSubdigest(signer, subdigest, signature)\n        })\n    ])\n  }\n\n  walletsOfSigner = async (args: {\n    signer: string\n  }): Promise<\n    {\n      wallet: string\n      proof: {\n        digest: string\n        chainId: bigint\n        signature: string\n      }\n    }[]\n  > => {\n    const subdigests = await this.store.loadSubdigestsOfSigner(args.signer)\n    const payloads = await Promise.all(subdigests.map(s => this.payloadOfSubdigest({ subdigest: s }))).then(\n      p => p.filter(p => p !== undefined) as commons.signature.SignedPayload[]\n    )\n\n    // filter unique wallets, and provide a proof for each wallet\n    const result: {\n      wallet: string\n      proof: {\n        digest: string\n        chainId: bigint\n        signature: string\n      }\n    }[] = []\n\n    for (const payload of payloads) {\n      const wallet = payload.address\n      if (result.find(r => r.wallet === wallet)) continue\n\n      const subdigest = commons.signature.subdigestOf(payload)\n      const signature = await this.store.loadSignatureOfSubdigest(args.signer, subdigest)\n      if (!signature) continue\n\n      result.push({\n        wallet,\n        proof: {\n          digest: payload.digest,\n          chainId: BigInt(payload.chainId),\n          signature: ethers.hexlify(signature)\n        }\n      })\n    }\n\n    return result\n  }\n\n  async saveMigration(\n    address: string,\n    signed: migrator.SignedMigration,\n    contexts: commons.context.VersionedContext\n  ): Promise<void> {\n    const fromVersion = signed.fromVersion\n    if (fromVersion !== 1) throw new Error('Migration not supported')\n    if (!v2.config.isWalletConfig(signed.toConfig)) throw new Error('Invalid to config')\n\n    // Validate migration transaction\n    const { newImageHash, address: decodedAddress } = migration.v1v2.decodeTransaction(signed.tx, contexts)\n    if (decodedAddress !== address) throw new Error('Invalid migration transaction - address')\n    if (v2.config.ConfigCoder.imageHashOf(signed.toConfig) != newImageHash)\n      throw new Error('Invalid migration transaction - config')\n\n    // Split signature and save each part\n    const message = commons.transaction.packMetaTransactionsData(signed.tx.nonce, signed.tx.transactions)\n    const digest = ethers.keccak256(message)\n    const payload = { chainId: signed.tx.chainId, message, address, digest }\n    const subdigest = commons.signature.subdigestOf(payload)\n\n    const savePayload = this.savePayload({ payload })\n    const saveToConfig = this.saveWalletConfig({ config: signed.toConfig })\n\n    const decoded = v1.signature.SignatureCoder.decode(signed.tx.signature)\n    const recovered = await v1.signature.SignatureCoder.recover(decoded, payload, this.provider)\n\n    // Save the recovered config, the migrate transaction, and all signature parts\n    const signatures = v1.signature.SignatureCoder.signaturesOf(recovered.config)\n\n    await Promise.all([\n      savePayload,\n      saveToConfig,\n      this.saveWalletConfig({ config: recovered.config }),\n      this.store.saveMigrationsSubdigest(address, fromVersion, fromVersion + 1, subdigest, newImageHash),\n      ...signatures.map(sig => this.store.saveSignatureOfSubdigest(sig.address, recovered.subdigest, sig.signature))\n    ])\n  }\n\n  async getMigration(\n    address: string,\n    fromImageHash: string,\n    fromVersion: number,\n    chainId: ethers.BigNumberish\n  ): Promise<migrator.SignedMigration | undefined> {\n    // Get the current config and all possible migration payloads\n    const [currentConfig, txs] = await Promise.all([\n      this.configOfImageHash({ imageHash: fromImageHash }),\n      this.store.loadMigrationsSubdigest(address, fromVersion, fromVersion + 1)\n    ])\n\n    const coder = universal.coderFor(fromVersion)\n    if (!currentConfig) {\n      // We may not be able to find the config, because the migration is still not copied locally\n      // in that case we consider as we don't have any migration\n      return undefined\n    }\n\n    if (!coder.config.isWalletConfig(currentConfig)) {\n      // throw new Error(\"Invalid from config - version\")\n      // better to not fail here, some other tracker may be able to handle this migration\n      return undefined\n    }\n\n    // We need to process every migration candidate individually\n    // and see which one has enough signers to be valid (for the current config)\n    const candidates = await Promise.all(\n      txs.map(async tx => {\n        const { subdigest, toImageHash } = tx\n        const payload = await this.payloadOfSubdigest({ subdigest })\n        if (!payload || !payload.message) return undefined\n        if (BigInt(chainId) !== BigInt(payload.chainId)) return undefined\n\n        const signers = coder.config.signersOf(currentConfig as any).map(s => s.address)\n\n        // Get all signatures (for all signers) for this subdigest\n        const signatures = new Map(\n          (\n            await Promise.all(\n              signers.map(async signer => {\n                const signature = await this.store.loadSignatureOfSubdigest(signer, subdigest)\n                if (!signature) {\n                  return [signer, undefined]\n                }\n\n                const replacedSignature = ethers.hexlify(\n                  this.useEIP5719 ? await this.cachedEIP5719.runByEIP5719(signer, subdigest, signature) : signature\n                )\n\n                const isDynamic = commons.signer.tryRecoverSigner(subdigest, replacedSignature) !== signer\n\n                return [signer, { isDynamic, signature: replacedSignature }]\n              })\n            )\n          ).filter((signature): signature is [string, commons.signature.SignaturePart] => Boolean(signature[1]))\n        )\n\n        // Encode signature parts into a single signature\n        const encoded = coder.signature.encodeSigners(currentConfig as any, signatures, [], chainId)\n        if (!encoded || encoded.weight < BigInt(currentConfig.threshold)) return undefined\n\n        // Unpack payload (it should have transactions)\n        const [nonce, transactions] = commons.transaction.unpackMetaTransactionsData(payload.message)\n\n        return {\n          tx: {\n            entrypoint: address,\n            transactions: commons.transaction.fromTxAbiEncode(transactions),\n            chainId: chainId,\n            nonce: nonce,\n            signature: encoded.encoded,\n            intent: {\n              id: subdigest,\n              wallet: address\n            }\n          },\n          toConfig: await this.configOfImageHash({ imageHash: toImageHash }),\n          fromVersion,\n          toVersion: fromVersion + 1\n        } as migrator.SignedMigration\n      })\n    ).then(c => c.filter(c => c !== undefined))\n\n    // Return the first valid candidate\n    return candidates[0]\n  }\n\n  updateProvider(provider: ethers.Provider) {\n    this.provider = provider\n  }\n}\n","/* eslint-disable */\n// sessions v0.0.1 d81ea64cbe41c1ab8b0107bce2f118817b34ebc0\n// --\n// Code generated by webrpc-gen@v0.18.6 with typescript generator. DO NOT EDIT.\n//\n// webrpc-gen -schema=sessions.ridl -target=typescript -client -out=./sessions.gen.ts\n\n// WebRPC description and code-gen version\nexport const WebRPCVersion = 'v1'\n\n// Schema version of your RIDL schema\nexport const WebRPCSchemaVersion = 'v0.0.1'\n\n// Schema hash generated from your RIDL schema\nexport const WebRPCSchemaHash = 'd81ea64cbe41c1ab8b0107bce2f118817b34ebc0'\n\n//\n// Types\n//\n\nexport enum SignatureType {\n  EIP712 = 'EIP712',\n  EthSign = 'EthSign',\n  EIP1271 = 'EIP1271'\n}\n\nexport interface RuntimeStatus {\n  healthy: boolean\n  started: string\n  uptime: number\n  version: string\n  branch: string\n  commit: string\n  wallets: { [key: string]: number }\n  configs: { [key: string]: number }\n  configTrees: number\n  migrations: { [key: string]: number }\n  signatures: number\n  digests: number\n  recorder: RecorderStatus\n}\n\nexport interface RecorderStatus {\n  requests: number\n  buffer: number\n  lastFlush?: string\n  secondsSinceLastFlush?: number\n  endpoints: { [key: string]: number }\n}\n\nexport interface Context {\n  version: number\n  factory: string\n  mainModule: string\n  mainModuleUpgradable: string\n  guestModule: string\n  walletCreationCode: string\n}\n\nexport interface Signature {\n  digest: string\n  toImageHash?: string\n  chainID: string\n  type: SignatureType\n  signature: string\n}\n\nexport interface ConfigUpdate {\n  toImageHash: string\n  signature: string\n}\n\nexport interface Transaction {\n  to: string\n  value?: string\n  data?: string\n  gasLimit?: string\n  delegateCall?: boolean\n  revertOnError?: boolean\n}\n\nexport interface TransactionBundle {\n  executor: string\n  transactions: Array<Transaction>\n  nonce: string\n  signature: string\n}\n\nexport interface Sessions {\n  ping(headers?: object, signal?: AbortSignal): Promise<PingReturn>\n  config(args: ConfigArgs, headers?: object, signal?: AbortSignal): Promise<ConfigReturn>\n  wallets(args: WalletsArgs, headers?: object, signal?: AbortSignal): Promise<WalletsReturn>\n  deployHash(args: DeployHashArgs, headers?: object, signal?: AbortSignal): Promise<DeployHashReturn>\n  configUpdates(args: ConfigUpdatesArgs, headers?: object, signal?: AbortSignal): Promise<ConfigUpdatesReturn>\n  migrations(args: MigrationsArgs, headers?: object, signal?: AbortSignal): Promise<MigrationsReturn>\n  saveConfig(args: SaveConfigArgs, headers?: object, signal?: AbortSignal): Promise<SaveConfigReturn>\n  saveWallet(args: SaveWalletArgs, headers?: object, signal?: AbortSignal): Promise<SaveWalletReturn>\n  saveSignature(args: SaveSignatureArgs, headers?: object, signal?: AbortSignal): Promise<SaveSignatureReturn>\n  saveSignerSignatures(\n    args: SaveSignerSignaturesArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<SaveSignerSignaturesReturn>\n  saveMigration(args: SaveMigrationArgs, headers?: object, signal?: AbortSignal): Promise<SaveMigrationReturn>\n}\n\nexport interface PingArgs {}\n\nexport interface PingReturn {}\nexport interface ConfigArgs {\n  imageHash: string\n}\n\nexport interface ConfigReturn {\n  version: number\n  config: any\n}\nexport interface WalletsArgs {\n  signer: string\n}\n\nexport interface WalletsReturn {\n  wallets: { [key: string]: Signature }\n}\nexport interface DeployHashArgs {\n  wallet: string\n}\n\nexport interface DeployHashReturn {\n  deployHash: string\n  context: Context\n}\nexport interface ConfigUpdatesArgs {\n  wallet: string\n  fromImageHash: string\n  allUpdates?: boolean\n}\n\nexport interface ConfigUpdatesReturn {\n  updates: Array<ConfigUpdate>\n}\nexport interface MigrationsArgs {\n  wallet: string\n  fromVersion: number\n  fromImageHash: string\n  chainID?: string\n}\n\nexport interface MigrationsReturn {\n  migrations: { [key: string]: { [key: number]: { [key: string]: TransactionBundle } } }\n}\nexport interface SaveConfigArgs {\n  version: number\n  config: any\n}\n\nexport interface SaveConfigReturn {}\nexport interface SaveWalletArgs {\n  version: number\n  deployConfig: any\n}\n\nexport interface SaveWalletReturn {}\nexport interface SaveSignatureArgs {\n  wallet: string\n  digest: string\n  chainID: string\n  signature: string\n  toConfig?: any\n}\n\nexport interface SaveSignatureReturn {}\nexport interface SaveSignerSignaturesArgs {\n  wallet: string\n  digest: string\n  chainID: string\n  signatures: Array<string>\n  toConfig?: any\n}\n\nexport interface SaveSignerSignaturesReturn {}\nexport interface SaveMigrationArgs {\n  wallet: string\n  fromVersion: number\n  toVersion: number\n  toConfig: any\n  executor: string\n  transactions: Array<Transaction>\n  nonce: string\n  signature: string\n  chainID?: string\n}\n\nexport interface SaveMigrationReturn {}\n\n//\n// Client\n//\nexport class Sessions implements Sessions {\n  protected hostname: string\n  protected fetch: Fetch\n  protected path = '/rpc/Sessions/'\n\n  constructor(hostname: string, fetch: Fetch) {\n    this.hostname = hostname\n    this.fetch = (input: RequestInfo, init?: RequestInit) => fetch(input, init)\n  }\n\n  private url(name: string): string {\n    return this.hostname + this.path + name\n  }\n\n  ping = (headers?: object, signal?: AbortSignal): Promise<PingReturn> => {\n    return this.fetch(this.url('Ping'), createHTTPRequest({}, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {}\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  config = (args: ConfigArgs, headers?: object, signal?: AbortSignal): Promise<ConfigReturn> => {\n    return this.fetch(this.url('Config'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            version: <number>_data.version,\n            config: <any>_data.config\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  wallets = (args: WalletsArgs, headers?: object, signal?: AbortSignal): Promise<WalletsReturn> => {\n    return this.fetch(this.url('Wallets'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            wallets: <{ [key: string]: Signature }>_data.wallets\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  deployHash = (args: DeployHashArgs, headers?: object, signal?: AbortSignal): Promise<DeployHashReturn> => {\n    return this.fetch(this.url('DeployHash'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            deployHash: <string>_data.deployHash,\n            context: <Context>_data.context\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  configUpdates = (args: ConfigUpdatesArgs, headers?: object, signal?: AbortSignal): Promise<ConfigUpdatesReturn> => {\n    return this.fetch(this.url('ConfigUpdates'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            updates: <Array<ConfigUpdate>>_data.updates\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  migrations = (args: MigrationsArgs, headers?: object, signal?: AbortSignal): Promise<MigrationsReturn> => {\n    return this.fetch(this.url('Migrations'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            migrations: <{ [key: string]: { [key: number]: { [key: string]: TransactionBundle } } }>_data.migrations\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  saveConfig = (args: SaveConfigArgs, headers?: object, signal?: AbortSignal): Promise<SaveConfigReturn> => {\n    return this.fetch(this.url('SaveConfig'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {}\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  saveWallet = (args: SaveWalletArgs, headers?: object, signal?: AbortSignal): Promise<SaveWalletReturn> => {\n    return this.fetch(this.url('SaveWallet'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {}\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  saveSignature = (args: SaveSignatureArgs, headers?: object, signal?: AbortSignal): Promise<SaveSignatureReturn> => {\n    return this.fetch(this.url('SaveSignature'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {}\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  saveSignerSignatures = (\n    args: SaveSignerSignaturesArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<SaveSignerSignaturesReturn> => {\n    return this.fetch(this.url('SaveSignerSignatures'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {}\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  saveMigration = (args: SaveMigrationArgs, headers?: object, signal?: AbortSignal): Promise<SaveMigrationReturn> => {\n    return this.fetch(this.url('SaveMigration'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {}\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n}\n\nconst createHTTPRequest = (body: object = {}, headers: object = {}, signal: AbortSignal | null = null): object => {\n  return {\n    method: 'POST',\n    headers: { ...headers, 'Content-Type': 'application/json' },\n    body: JSON.stringify(body || {}),\n    signal\n  }\n}\n\nconst buildResponse = (res: Response): Promise<any> => {\n  return res.text().then(text => {\n    let data\n    try {\n      data = JSON.parse(text)\n    } catch (error) {\n      let message = ''\n      if (error instanceof Error) {\n        message = error.message\n      }\n      throw WebrpcBadResponseError.new({\n        status: res.status,\n        cause: `JSON.parse(): ${message}: response text: ${text}`\n      })\n    }\n    if (!res.ok) {\n      const code: number = typeof data.code === 'number' ? data.code : 0\n      throw (webrpcErrorByCode[code] || WebrpcError).new(data)\n    }\n    return data\n  })\n}\n\n//\n// Errors\n//\n\nexport class WebrpcError extends Error {\n  name: string\n  code: number\n  message: string\n  status: number\n  cause?: string\n\n  /** @deprecated Use message instead of msg. Deprecated in webrpc v0.11.0. */\n  msg: string\n\n  constructor(name: string, code: number, message: string, status: number, cause?: string) {\n    super(message)\n    this.name = name || 'WebrpcError'\n    this.code = typeof code === 'number' ? code : 0\n    this.message = message || `endpoint error ${this.code}`\n    this.msg = this.message\n    this.status = typeof status === 'number' ? status : 0\n    this.cause = cause\n    Object.setPrototypeOf(this, WebrpcError.prototype)\n  }\n\n  static new(payload: any): WebrpcError {\n    return new this(payload.error, payload.code, payload.message || payload.msg, payload.status, payload.cause)\n  }\n}\n\n// Webrpc errors\n\nexport class WebrpcEndpointError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcEndpoint',\n    code: number = 0,\n    message: string = 'endpoint error',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcEndpointError.prototype)\n  }\n}\n\nexport class WebrpcRequestFailedError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcRequestFailed',\n    code: number = -1,\n    message: string = 'request failed',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcRequestFailedError.prototype)\n  }\n}\n\nexport class WebrpcBadRouteError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcBadRoute',\n    code: number = -2,\n    message: string = 'bad route',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcBadRouteError.prototype)\n  }\n}\n\nexport class WebrpcBadMethodError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcBadMethod',\n    code: number = -3,\n    message: string = 'bad method',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcBadMethodError.prototype)\n  }\n}\n\nexport class WebrpcBadRequestError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcBadRequest',\n    code: number = -4,\n    message: string = 'bad request',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcBadRequestError.prototype)\n  }\n}\n\nexport class WebrpcBadResponseError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcBadResponse',\n    code: number = -5,\n    message: string = 'bad response',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcBadResponseError.prototype)\n  }\n}\n\nexport class WebrpcServerPanicError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcServerPanic',\n    code: number = -6,\n    message: string = 'server panic',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcServerPanicError.prototype)\n  }\n}\n\nexport class WebrpcInternalErrorError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcInternalError',\n    code: number = -7,\n    message: string = 'internal error',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcInternalErrorError.prototype)\n  }\n}\n\nexport class WebrpcClientDisconnectedError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcClientDisconnected',\n    code: number = -8,\n    message: string = 'client disconnected',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcClientDisconnectedError.prototype)\n  }\n}\n\nexport class WebrpcStreamLostError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcStreamLost',\n    code: number = -9,\n    message: string = 'stream lost',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcStreamLostError.prototype)\n  }\n}\n\nexport class WebrpcStreamFinishedError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcStreamFinished',\n    code: number = -10,\n    message: string = 'stream finished',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcStreamFinishedError.prototype)\n  }\n}\n\n// Schema errors\n\nexport class InvalidArgumentError extends WebrpcError {\n  constructor(\n    name: string = 'InvalidArgument',\n    code: number = 1,\n    message: string = 'invalid argument',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, InvalidArgumentError.prototype)\n  }\n}\n\nexport class NotFoundError extends WebrpcError {\n  constructor(name: string = 'NotFound', code: number = 2, message: string = 'not found', status: number = 0, cause?: string) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, NotFoundError.prototype)\n  }\n}\n\nexport enum errors {\n  WebrpcEndpoint = 'WebrpcEndpoint',\n  WebrpcRequestFailed = 'WebrpcRequestFailed',\n  WebrpcBadRoute = 'WebrpcBadRoute',\n  WebrpcBadMethod = 'WebrpcBadMethod',\n  WebrpcBadRequest = 'WebrpcBadRequest',\n  WebrpcBadResponse = 'WebrpcBadResponse',\n  WebrpcServerPanic = 'WebrpcServerPanic',\n  WebrpcInternalError = 'WebrpcInternalError',\n  WebrpcClientDisconnected = 'WebrpcClientDisconnected',\n  WebrpcStreamLost = 'WebrpcStreamLost',\n  WebrpcStreamFinished = 'WebrpcStreamFinished',\n  InvalidArgument = 'InvalidArgument',\n  NotFound = 'NotFound'\n}\n\nconst webrpcErrorByCode: { [code: number]: any } = {\n  [0]: WebrpcEndpointError,\n  [-1]: WebrpcRequestFailedError,\n  [-2]: WebrpcBadRouteError,\n  [-3]: WebrpcBadMethodError,\n  [-4]: WebrpcBadRequestError,\n  [-5]: WebrpcBadResponseError,\n  [-6]: WebrpcServerPanicError,\n  [-7]: WebrpcInternalErrorError,\n  [-8]: WebrpcClientDisconnectedError,\n  [-9]: WebrpcStreamLostError,\n  [-10]: WebrpcStreamFinishedError,\n  [1]: InvalidArgumentError,\n  [2]: NotFoundError\n}\n\nexport type Fetch = (input: RequestInfo, init?: RequestInit) => Promise<Response>\n","import { commons, universal, v1, v2 } from '@0xsequence/core'\nimport { migrator } from '@0xsequence/migration'\nimport { ethers } from 'ethers'\nimport { ConfigTracker, PresignedConfig, PresignedConfigLink } from '../../tracker'\nimport { Sessions, SignatureType, Transaction } from './sessions.gen'\n\nexport class RemoteConfigTracker implements ConfigTracker, migrator.PresignedMigrationTracker {\n  private readonly sessions: Sessions\n\n  constructor(\n    hostname: string,\n    public readonly onlyRecoverable: boolean = true\n  ) {\n    this.sessions = new Sessions(hostname, fetch)\n  }\n\n  async loadPresignedConfiguration(args: {\n    wallet: string\n    fromImageHash: string\n    longestPath?: boolean\n  }): Promise<PresignedConfigLink[]> {\n    try {\n      const { updates } = await this.sessions.configUpdates({\n        wallet: args.wallet,\n        fromImageHash: args.fromImageHash,\n        allUpdates: args.longestPath\n      })\n\n      return updates.map(({ toImageHash, signature }) => ({ wallet: args.wallet, nextImageHash: toImageHash, signature }))\n    } catch (error) {\n      if (is404NotFound(error)) {\n        return []\n      } else {\n        throw error\n      }\n    }\n  }\n\n  async savePresignedConfiguration(args: PresignedConfig): Promise<void> {\n    const config = args.nextConfig\n    const imageHash = universal.genericCoderFor(config.version).config.imageHashOf(config)\n    const message = v2.signature.setImageHashStruct(imageHash)\n    const digest = ethers.keccak256(message)\n\n    await this.sessions.saveSignature({\n      wallet: args.wallet,\n      digest,\n      chainID: '0',\n      signature: args.signature,\n      toConfig: encodeConfig(config)\n    })\n  }\n\n  async saveWitnesses(args: {\n    wallet: string\n    digest: string\n    chainId: ethers.BigNumberish\n    signatures: string[]\n  }): Promise<void> {\n    let filteredSignatures = args.signatures\n    if (this.onlyRecoverable) {\n      filteredSignatures = filteredSignatures.filter(signature => {\n        return commons.signer.canRecover(signature)\n      })\n    }\n\n    await this.sessions.saveSignerSignatures({\n      wallet: args.wallet,\n      digest: args.digest,\n      chainID: numberString(args.chainId),\n      signatures: filteredSignatures\n    })\n  }\n\n  async configOfImageHash(args: { imageHash: string }): Promise<commons.config.Config | undefined> {\n    try {\n      const { version, config } = await this.sessions.config(args)\n      return decodeConfig(version, config)\n    } catch (error) {\n      if (is404NotFound(error)) {\n        return\n      } else {\n        throw error\n      }\n    }\n  }\n\n  async saveWalletConfig(args: { config: commons.config.Config }): Promise<void> {\n    const config = encodeConfig(args.config)\n    await this.sessions.saveConfig({ version: args.config.version, config })\n  }\n\n  async imageHashOfCounterfactualWallet(args: {\n    wallet: string\n  }): Promise<{ imageHash: string; context: commons.context.WalletContext } | undefined> {\n    try {\n      const { deployHash, context } = await this.sessions.deployHash(args)\n      return { imageHash: deployHash, context }\n    } catch (error) {\n      if (is404NotFound(error)) {\n        return\n      } else {\n        throw error\n      }\n    }\n  }\n\n  async saveCounterfactualWallet(args: {\n    config: commons.config.Config\n    context: commons.context.WalletContext[]\n  }): Promise<void> {\n    const deployConfig = encodeConfig(args.config)\n    await this.sessions.saveWallet({ version: args.config.version, deployConfig })\n  }\n\n  async walletsOfSigner(args: {\n    signer: string\n  }): Promise<{ wallet: string; proof: { digest: string; chainId: bigint; signature: string } }[]> {\n    const { wallets } = await this.sessions.wallets(args)\n    return Object.entries(wallets).map(([wallet, { digest, chainID, type, signature }]) => {\n      switch (type) {\n        case SignatureType.EIP712:\n          signature += ethers.toBeHex(commons.signer.SigType.EIP712).slice(2)\n          break\n        case SignatureType.EthSign:\n          signature += ethers.toBeHex(commons.signer.SigType.ETH_SIGN).slice(2)\n          break\n        case SignatureType.EIP1271:\n          signature += ethers.toBeHex(commons.signer.SigType.WALLET_BYTES32).slice(2)\n          break\n      }\n\n      return {\n        wallet,\n        proof: {\n          digest,\n          signature,\n          chainId: BigInt(chainID)\n        }\n      }\n    })\n  }\n\n  async getMigration(\n    wallet: string,\n    fromImageHash: string,\n    fromVersion: number,\n    chainId: ethers.BigNumberish\n  ): Promise<migrator.SignedMigration | undefined> {\n    const chainIdString = numberString(chainId)\n    const { migrations } = await this.sessions.migrations({ wallet, fromVersion, fromImageHash, chainID: chainIdString })\n\n    const chooseMigration = async (chainId: string): Promise<migrator.SignedMigration | undefined> => {\n      const migrations_ = migrations[chainId]\n      if (migrations_) {\n        const toVersions = Object.keys(migrations_)\n          .map(Number)\n          .sort((a: number, b: number) => b - a)\n\n        for (const toVersion of toVersions) {\n          for (const [toHash, transactions] of Object.entries(migrations_[toVersion])) {\n            try {\n              const toConfig = await this.configOfImageHash({ imageHash: toHash })\n              if (toConfig) {\n                return {\n                  fromVersion,\n                  toVersion,\n                  toConfig,\n                  tx: {\n                    entrypoint: transactions.executor,\n                    transactions: transactions.transactions,\n                    nonce: transactions.nonce,\n                    signature: transactions.signature,\n                    chainId,\n                    intent: {\n                      id: commons.transaction.subdigestOfTransactions(\n                        wallet,\n                        chainId,\n                        transactions.nonce,\n                        transactions.transactions\n                      ),\n                      wallet\n                    }\n                  }\n                }\n              }\n            } catch (error) {\n              console.error(error)\n            }\n          }\n        }\n      }\n      return\n    }\n\n    const migration = await chooseMigration(chainIdString)\n    if (migration) {\n      return migration\n    }\n\n    for (const chainId in migrations) {\n      if (chainId !== chainIdString) {\n        const migration = await chooseMigration(chainId)\n        if (migration) {\n          return migration\n        }\n      }\n    }\n\n    return\n  }\n\n  async saveMigration(\n    wallet: string,\n    signed: migrator.SignedMigration,\n    _contexts: commons.context.VersionedContext\n  ): Promise<void> {\n    await this.sessions.saveMigration({\n      wallet,\n      fromVersion: signed.fromVersion,\n      toVersion: signed.toVersion,\n      toConfig: encodeConfig(signed.toConfig),\n      executor: signed.tx.entrypoint,\n      transactions: signed.tx.transactions.map(encodeTransaction),\n      nonce: numberString(signed.tx.nonce),\n      signature: signed.tx.signature,\n      chainID: numberString(signed.tx.chainId)\n    })\n  }\n}\n\ntype SessionsConfig = {\n  1: { threshold: number; signers: Array<{ weight: number; address: string }> }\n  2: { threshold: number; checkpoint: number; tree: V2SessionsConfigTree }\n}\n\ntype V2SessionsConfigTree =\n  | { left: V2SessionsConfigTree; right: V2SessionsConfigTree }\n  | { weight: number; address: string }\n  | { node: string }\n  | { weight: number; threshold: number; tree: V2SessionsConfigTree }\n  | { subdigest: string }\n\nfunction encodeConfig(config: commons.config.Config): SessionsConfig[1 | 2] {\n  switch (config.version) {\n    case 1:\n      if (v1.config.ConfigCoder.isWalletConfig(config)) {\n        return {\n          threshold: numberNumber(config.threshold),\n          signers: config.signers.map(({ weight, address }) => ({ weight: numberNumber(weight), address }))\n        }\n      } else {\n        throw new Error(`not a v${config.version} config: ${config}`)\n      }\n\n    case 2:\n      if (v2.config.ConfigCoder.isWalletConfig(config)) {\n        return {\n          threshold: numberNumber(config.threshold),\n          checkpoint: numberNumber(config.checkpoint),\n          tree: encodeV2ConfigTree(config.tree)\n        }\n      } else {\n        throw new Error(`not a v${config.version} config: ${config}`)\n      }\n\n    default:\n      throw new Error(`unknown version ${config.version}`)\n  }\n}\n\nfunction encodeV2ConfigTree(tree: v2.config.Topology): V2SessionsConfigTree {\n  if (v2.config.isNode(tree)) {\n    return {\n      left: encodeV2ConfigTree(tree.left),\n      right: encodeV2ConfigTree(tree.right)\n    }\n  } else if (v2.config.isSignerLeaf(tree)) {\n    return {\n      weight: numberNumber(tree.weight),\n      address: tree.address\n    }\n  } else if (v2.config.isNestedLeaf(tree)) {\n    return {\n      weight: numberNumber(tree.weight),\n      threshold: numberNumber(tree.threshold),\n      tree: encodeV2ConfigTree(tree.tree)\n    }\n  } else if (v2.config.isNodeLeaf(tree)) {\n    return { node: tree.nodeHash }\n  } else {\n    return { ...tree }\n  }\n}\n\nfunction decodeConfig(version: number, config: any): commons.config.Config {\n  switch (version) {\n    case 1:\n      return { ...config, version }\n\n    case 2:\n      return { ...config, version, tree: decodeV2ConfigTree(config.tree) }\n\n    default:\n      throw new Error(`unknown version ${version}`)\n  }\n}\n\nfunction decodeV2ConfigTree(tree: any): v2.config.Topology {\n  switch (typeof tree) {\n    case 'object':\n      const tree_ = { ...tree }\n\n      if (tree_.left !== undefined) {\n        tree_.left = decodeV2ConfigTree(tree_.left)\n      }\n\n      if (tree_.right !== undefined) {\n        tree_.right = decodeV2ConfigTree(tree_.right)\n      }\n\n      if (tree_.tree !== undefined) {\n        tree_.tree = decodeV2ConfigTree(tree_.tree)\n      }\n\n      if (tree_.node !== undefined) {\n        tree_.nodeHash = tree_.node\n        delete tree_.node\n      }\n\n      return tree_\n\n    default:\n      throw new Error(`v2 config tree ${tree} is not an object`)\n  }\n}\n\nfunction encodeTransaction(transaction: commons.transaction.Transaction): Transaction {\n  return {\n    to: transaction.to,\n    value: transaction.value !== undefined ? numberString(transaction.value) : undefined,\n    data: transaction.data !== undefined ? ethers.hexlify(transaction.data) : undefined,\n    gasLimit: transaction.gasLimit !== undefined ? numberString(transaction.gasLimit) : undefined,\n    delegateCall: transaction.delegateCall,\n    revertOnError: transaction.revertOnError\n  }\n}\n\nfunction numberNumber(n: ethers.BigNumberish): number {\n  return Number(n)\n}\n\nfunction numberString(n: ethers.BigNumberish): string {\n  return BigInt(n).toString()\n}\n\nfunction is404NotFound(error: any): boolean {\n  return typeof error === 'object' && error.status === 404\n}\n","import { ConfigTracker, PresignedConfig, PresignedConfigLink } from '../tracker'\nimport { migrator } from '@0xsequence/migration'\n\nimport { commons, universal } from '@0xsequence/core'\nimport { LocalConfigTracker } from './local'\nimport { ethers } from 'ethers'\n\nexport function raceUntil<T>(promises: Promise<T>[], fallback: T, evalRes: (val: T) => boolean): Promise<T> {\n  return new Promise(resolve => {\n    let count = 0\n\n    promises.forEach(p =>\n      p\n        .then((val: T) => {\n          if (evalRes(val)) {\n            resolve(val)\n          } else {\n            count++\n            if (count === promises.length) {\n              resolve(fallback)\n            }\n          }\n        })\n        .catch(() => {\n          // Ignore\n          count++\n          if (count === promises.length) {\n            resolve(fallback)\n          }\n        })\n    )\n  })\n}\n\nexport async function allSafe<T>(promises: Promise<T>[], fallback: T): Promise<T[]> {\n  return Promise.all(promises.map(promise => promise.catch(() => fallback)))\n}\n\nexport class MultipleTracker implements migrator.PresignedMigrationTracker, ConfigTracker {\n  constructor(private trackers: (migrator.PresignedMigrationTracker & ConfigTracker)[]) {}\n\n  async configOfImageHash(args: { imageHash: string }): Promise<commons.config.Config | undefined> {\n    const requests = this.trackers.map(async (t, i) => ({ res: await t.configOfImageHash(args), i }))\n\n    // We try to find a complete configuration, we race so that we don't wait for all trackers to respond\n    const result1 = await raceUntil(requests, undefined, val => {\n      if (val?.res === undefined) return false\n      return universal.genericCoderFor(val.res.version).config.isComplete(val.res)\n    })\n\n    if (result1?.res) {\n      // Skip saving the config to the tracker that returned the result\n      this.saveWalletConfig({ config: result1.res, skipTracker: result1.i })\n      return result1.res\n    }\n\n    // If we haven't found a complete configuration yet, it either means that the configuration is not complete\n    // (and thus we need to combine all results) or that the configuration is not found at all\n    // but we try to combine all results anyway\n    const tmptracker = new LocalConfigTracker(undefined as any) // TODO: Fix this, provider not needed anyway\n\n    const results = await allSafe(requests, undefined)\n\n    for (const r of results) {\n      if (r?.res) await tmptracker.saveWalletConfig({ config: r.res })\n    }\n\n    const result2 = await tmptracker.configOfImageHash(args)\n    if (result2) this.saveWalletConfig({ config: result2 })\n    return result2\n  }\n\n  async saveWalletConfig(args: { config: commons.config.Config; skipTracker?: number }): Promise<void> {\n    await Promise.all(\n      this.trackers.map((t, i) => {\n        if (i === args.skipTracker) return\n        return t.saveWalletConfig(args)\n      })\n    )\n  }\n\n  async imageHashOfCounterfactualWallet(args: {\n    wallet: string\n  }): Promise<{ imageHash: string; context: commons.context.WalletContext } | undefined> {\n    const imageHash = await raceUntil(\n      this.trackers.map(t => t.imageHashOfCounterfactualWallet(args)),\n      undefined,\n      result => Boolean(result)\n    )\n\n    if (imageHash) {\n      this.configOfImageHash({ imageHash: imageHash.imageHash }).then(config => {\n        if (config) {\n          this.saveCounterfactualWallet({ config, context: [imageHash.context] })\n        }\n      })\n    }\n\n    return imageHash\n  }\n\n  async saveCounterfactualWallet(args: {\n    config: commons.config.Config\n    context: commons.context.WalletContext[]\n    skipTracker?: number\n  }): Promise<void> {\n    await Promise.all(\n      this.trackers.map((t, i) => {\n        if (i === args.skipTracker) return\n        return t.saveCounterfactualWallet(args)\n      })\n    )\n  }\n\n  async walletsOfSigner(args: {\n    signer: string\n  }): Promise<{ wallet: string; proof: { digest: string; chainId: bigint; signature: string } }[]> {\n    // We can't race here, because there is no \"correct\" response\n    // we just return the union of all results, skipping duplicates\n    const results = await allSafe(\n      this.trackers.map(t => t.walletsOfSigner(args)),\n      []\n    ).then(r => r.flat())\n\n    const wallets: { [wallet: string]: { digest: string; chainId: bigint; signature: string } } = {}\n    for (const r of results) {\n      wallets[r.wallet] = r.proof\n    }\n\n    // TODO: This will send redundant information back to the trackers\n    // consider optimizing this for better performance during login\n\n    const result = Object.keys(wallets).map(w => ({ wallet: w, proof: wallets[w] }))\n\n    const witnesses = new Map<string, { wallet: string; digest: string; chainId: bigint; signatures: string[] }>()\n    result.forEach(({ wallet, proof: { digest, chainId, signature } }) => {\n      const key = `${wallet}-${digest}-${chainId}`\n      let signatures = witnesses.get(key)\n      if (!signatures) {\n        signatures = { wallet, digest, chainId, signatures: [] }\n        witnesses.set(key, signatures)\n      }\n      signatures.signatures.push(signature)\n    })\n    witnesses.forEach(witnesses => this.saveWitnesses(witnesses))\n\n    return result\n  }\n\n  async saveWitnesses(args: {\n    wallet: string\n    digest: string\n    chainId: ethers.BigNumberish\n    signatures: string[]\n  }): Promise<void> {\n    await Promise.all(this.trackers.map(t => t.saveWitnesses(args)))\n  }\n\n  async loadPresignedConfiguration(args: {\n    wallet: string\n    fromImageHash: string\n    longestPath?: boolean | undefined\n  }): Promise<PresignedConfigLink[]> {\n    // We can't race here, because any of the trackers could have a new \"link\" in the chain\n    const results = await allSafe(\n      this.trackers.map(t => t.loadPresignedConfiguration(args)),\n      []\n    )\n\n    // The \"best\" result is the one with the highest checkpoint\n    const checkpoints = await allSafe(\n      results.map(async r => {\n        const last = r[r.length - 1]\n\n        // TODO: This will fire a lot of requests, optimize it\n        const config = await this.configOfImageHash({ imageHash: last.nextImageHash })\n        if (!config) return undefined\n\n        return { checkpoint: universal.genericCoderFor(config.version).config.checkpointOf(config), result: r }\n      }),\n      undefined\n    )\n\n    const best = checkpoints.reduce((acc, val) => {\n      if (!val) return acc\n      if (!acc) return val\n      if (val.checkpoint > acc.checkpoint) return val\n      return acc\n    })\n\n    if (!best) return []\n\n    const configs = new Map<string, Promise<commons.config.Config | undefined>>()\n    const config = (imageHash: string): Promise<commons.config.Config | undefined> => {\n      if (!configs.has(imageHash)) {\n        configs.set(imageHash, this.configOfImageHash({ imageHash }))\n      }\n      return configs.get(imageHash)!\n    }\n    best.result.forEach(async res => {\n      const nextConfig = await config(res.nextImageHash)\n      if (nextConfig) {\n        this.savePresignedConfiguration({\n          wallet: args.wallet,\n          nextConfig,\n          signature: res.signature\n        })\n      }\n    })\n\n    return best.result\n  }\n\n  async savePresignedConfiguration(args: PresignedConfig): Promise<void> {\n    await Promise.all(this.trackers.map(t => t.savePresignedConfiguration(args)))\n  }\n\n  async getMigration(\n    address: string,\n    fromImageHash: string,\n    fromVersion: number,\n    chainId: ethers.BigNumberish\n  ): Promise<migrator.SignedMigration | undefined> {\n    // TODO: Backfeed migration results to other trackers\n    const results = await Promise.all(this.trackers.map(t => t.getMigration(address, fromImageHash, fromVersion, chainId)))\n    return results.find(r => !!r)\n  }\n\n  async saveMigration(\n    address: string,\n    signed: migrator.SignedMigration,\n    contexts: commons.context.VersionedContext\n  ): Promise<void> {\n    await Promise.all(this.trackers.map(t => t.saveMigration(address, signed, contexts)))\n  }\n}\n","import { ethers } from 'ethers'\n\nexport class PromiseCache {\n  private readonly cache: Map<string, Entry>\n\n  constructor() {\n    this.cache = new Map()\n  }\n\n  do<S extends Array<unknown>, T>(\n    key: string,\n    validMilliseconds: number | undefined,\n    task: (...args: S) => Promise<T>,\n    ...args: S\n  ): Promise<T> {\n    key = `${key}:${ethers.id(JSON.stringify(args, deterministically))}`\n\n    let entry = this.cache.get(key)\n\n    if (entry) {\n      if (entry.expiration) {\n        if (new Date() >= entry.expiration) {\n          entry = undefined\n          this.cache.delete(key)\n        }\n      }\n    }\n\n    if (!entry) {\n      const entry_: Entry = { promise: task(...args) }\n\n      if (validMilliseconds !== undefined) {\n        entry_.promise = entry_.promise.then(result => {\n          entry_.expiration = new Date(Date.now() + validMilliseconds)\n          return result\n        })\n      }\n\n      entry = entry_\n      this.cache.set(key, entry)\n    }\n\n    return entry.promise as Promise<T>\n  }\n}\n\ntype Entry = {\n  promise: Promise<unknown>\n  expiration?: Date\n}\n\nfunction deterministically(_key: string, value: any): any {\n  if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\n    return Object.fromEntries(Object.entries(value).sort())\n  } else if (typeof value === 'bigint') {\n    return value.toString()\n  }\n\n  return value\n}\n","import { commons } from '@0xsequence/core'\nimport { migrator } from '@0xsequence/migration'\n\nimport { ethers } from 'ethers'\nimport { ConfigTracker, PresignedConfig, PresignedConfigLink } from '../tracker'\nimport { PromiseCache } from './promise-cache'\nimport { LocalConfigTracker } from './local'\n\nexport function isDedupedTracker(tracker: any): tracker is DedupedTracker {\n  return tracker instanceof DedupedTracker\n}\n\n// This tracks wraps another tracker and dedupes calls to it, so in any calls\n// are sent in short succession, only the first call is forwarded to the\n// underlying tracker, and the rest are ignored.\nexport class DedupedTracker implements migrator.PresignedMigrationTracker, ConfigTracker {\n  private cache: PromiseCache = new PromiseCache()\n\n  constructor(\n    private readonly tracker: migrator.PresignedMigrationTracker & ConfigTracker,\n    public readonly window = 50,\n    public verbose = false\n  ) {}\n\n  invalidateCache() {\n    this.cache = new PromiseCache()\n  }\n\n  configOfImageHash(args: { imageHash: string }): Promise<commons.config.Config | undefined> {\n    return this.cache.do('configOfImageHash', this.window, args => this.tracker.configOfImageHash(args), args)\n  }\n\n  getMigration(\n    address: string,\n    fromImageHash: string,\n    fromVersion: number,\n    chainId: ethers.BigNumberish\n  ): Promise<migrator.SignedMigration | undefined> {\n    return this.cache.do(\n      'getMigration',\n      this.window,\n      (...args) => this.tracker.getMigration(...args),\n      address,\n      fromImageHash,\n      fromVersion,\n      chainId\n    )\n  }\n\n  saveMigration(address: string, signed: migrator.SignedMigration, contexts: commons.context.VersionedContext): Promise<void> {\n    return this.cache.do('saveMigration', undefined, (...args) => this.tracker.saveMigration(...args), address, signed, contexts)\n  }\n\n  loadPresignedConfiguration(args: {\n    wallet: string\n    fromImageHash: string\n    longestPath?: boolean | undefined\n  }): Promise<PresignedConfigLink[]> {\n    return this.cache.do('loadPresignedConfiguration', this.window, args => this.tracker.loadPresignedConfiguration(args), args)\n  }\n\n  savePresignedConfiguration(args: PresignedConfig): Promise<void> {\n    return this.cache.do('savePresignedConfiguration', undefined, args => this.tracker.savePresignedConfiguration(args), args)\n  }\n\n  saveWitnesses(args: { wallet: string; digest: string; chainId: ethers.BigNumberish; signatures: string[] }): Promise<void> {\n    return this.cache.do('saveWitnesses', undefined, args => this.tracker.saveWitnesses(args), args)\n  }\n\n  saveWalletConfig(args: { config: commons.config.Config }): Promise<void> {\n    return this.cache.do('saveWalletConfig', undefined, args => this.tracker.saveWalletConfig(args), args)\n  }\n\n  imageHashOfCounterfactualWallet(args: {\n    wallet: string\n  }): Promise<{ imageHash: string; context: commons.context.WalletContext } | undefined> {\n    return this.cache.do(\n      'imageHashOfCounterfactualWallet',\n      undefined,\n      args => this.tracker.imageHashOfCounterfactualWallet(args),\n      args\n    )\n  }\n\n  saveCounterfactualWallet(args: { config: commons.config.Config; context: commons.context.WalletContext[] }): Promise<void> {\n    return this.cache.do('saveCounterfactualWallet', undefined, args => this.tracker.saveCounterfactualWallet(args), args)\n  }\n\n  walletsOfSigner(args: {\n    signer: string\n  }): Promise<{ wallet: string; proof: { digest: string; chainId: bigint; signature: string } }[]> {\n    return this.cache.do('walletsOfSigner', this.window, args => this.tracker.walletsOfSigner(args), args)\n  }\n\n  updateProvider(provider: ethers.Provider) {\n    if (this.tracker instanceof LocalConfigTracker) {\n      this.tracker.updateProvider(provider)\n    }\n  }\n}\n","import { commons, universal } from '@0xsequence/core'\nimport { migrator } from '@0xsequence/migration'\nimport { ConfigTracker, PresignedConfig, PresignedConfigLink } from '../tracker'\nimport { ethers } from 'ethers'\n\nexport class CachedTracker implements migrator.PresignedMigrationTracker, ConfigTracker {\n  constructor(\n    private readonly tracker: migrator.PresignedMigrationTracker & ConfigTracker,\n    private readonly cache: migrator.PresignedMigrationTracker & ConfigTracker,\n    public readonly contexts: commons.context.VersionedContext\n  ) {}\n\n  async loadPresignedConfiguration(args: {\n    wallet: string\n    fromImageHash: string\n    longestPath?: boolean | undefined\n  }): Promise<PresignedConfigLink[]> {\n    // We need to check both, and return the one with the highest checkpoint\n    // eventually we could try to combine them, but for now we'll just return\n    // the one with the highest checkpoint\n    const results = [this.tracker.loadPresignedConfiguration(args), this.cache.loadPresignedConfiguration(args)]\n\n    let best: PresignedConfigLink[]\n\n    // If both results end with the same image hash, we can just return the longest/shortest one\n    const [result1, result2] = await Promise.all(results)\n    if (\n      result1.length > 0 &&\n      result2.length > 0 &&\n      result1[result1.length - 1].nextImageHash === result2[result2.length - 1].nextImageHash\n    ) {\n      best =\n        args.longestPath === true\n          ? result1.length > result2.length\n            ? result1\n            : result2\n          : result1.length < result2.length\n            ? result1\n            : result2\n    } else {\n      // Otherwise we need to check the checkpoints\n      // this requires us to fetch the config for each image hash\n      const checkpoints = await Promise.all(\n        results.map(async result => {\n          const r = await result\n          const last = r[r.length - 1]\n          if (!last) return undefined\n\n          // TODO: This will fire a lot of requests, optimize it\n          const config = await this.configOfImageHash({ imageHash: last.nextImageHash })\n          if (!config) return undefined\n\n          return { checkpoint: universal.genericCoderFor(config.version).config.checkpointOf(config), result: r }\n        })\n      )\n\n      best =\n        checkpoints.reduce((acc, val) => {\n          if (!val) return acc\n          if (!acc) return val\n          if (val.checkpoint > acc.checkpoint) return val\n          return acc\n        })?.result ?? []\n    }\n\n    if (!best) return []\n\n    return best\n  }\n\n  async savePresignedConfiguration(args: PresignedConfig): Promise<void> {\n    await Promise.all([this.tracker.savePresignedConfiguration(args), this.cache.savePresignedConfiguration(args)])\n  }\n\n  async configOfImageHash(args: { imageHash: string; noCache?: boolean }): Promise<commons.config.Config | undefined> {\n    // We first check the cache, if it's not there, we check the tracker\n    // and then we save it to the cache\n    if (args.noCache !== true) {\n      const config = await this.cache.configOfImageHash(args)\n      if (config) return config\n    }\n\n    const config2 = await this.tracker.configOfImageHash(args)\n    if (config2) {\n      await this.cache.saveWalletConfig({ config: config2 })\n    }\n\n    return config2\n  }\n\n  async saveWalletConfig(args: { config: commons.config.Config }): Promise<void> {\n    await Promise.all([this.tracker.saveWalletConfig(args), this.cache.saveWalletConfig(args)])\n  }\n\n  async imageHashOfCounterfactualWallet(args: {\n    wallet: string\n    noCache?: boolean\n  }): Promise<{ imageHash: string; context: commons.context.WalletContext } | undefined> {\n    // We first check the cache, if it's not there, we check the tracker\n    // and then we save it to the cache\n    if (args.noCache !== true) {\n      const result1 = await this.cache.imageHashOfCounterfactualWallet(args)\n      if (result1) return result1\n    }\n\n    const result2 = await this.tracker.imageHashOfCounterfactualWallet(args)\n    if (result2) {\n      // TODO: We shouldn't need to get the config to save the counterfactual wallet\n      const config = await this.configOfImageHash({ imageHash: result2.imageHash })\n      if (config) {\n        await this.cache.saveCounterfactualWallet({ config, context: [result2.context] })\n      }\n    }\n\n    return result2\n  }\n\n  async saveCounterfactualWallet(args: {\n    config: commons.config.Config\n    context: commons.context.WalletContext[]\n  }): Promise<void> {\n    await Promise.all([this.tracker.saveCounterfactualWallet(args), this.cache.saveCounterfactualWallet(args)])\n  }\n\n  async walletsOfSigner(args: {\n    signer: string\n    noCache?: boolean\n  }): Promise<{ wallet: string; proof: { digest: string; chainId: bigint; signature: string } }[]> {\n    if (args.noCache) {\n      return this.tracker.walletsOfSigner(args)\n    }\n\n    // In this case we need to both aggregate the results from the cache and the tracker\n    // and then dedupe the results\n    const results = await Promise.all([this.tracker.walletsOfSigner(args), this.cache.walletsOfSigner(args)])\n    const wallets = new Map<string, { wallet: string; proof: { digest: string; chainId: bigint; signature: string } }>()\n\n    for (const result of results) {\n      for (const wallet of result) {\n        wallets.set(wallet.wallet, wallet)\n      }\n    }\n\n    return Array.from(wallets.values())\n  }\n\n  async saveWitnesses(args: {\n    wallet: string\n    digest: string\n    chainId: ethers.BigNumberish\n    signatures: string[]\n  }): Promise<void> {\n    await Promise.all([this.tracker.saveWitnesses(args), this.cache.saveWitnesses(args)])\n  }\n\n  async getMigration(\n    address: string,\n    fromImageHash: string,\n    fromVersion: number,\n    chainId: ethers.BigNumberish\n  ): Promise<migrator.SignedMigration | undefined> {\n    // We first check the cache, if it's not there, we check the tracker\n    // NOTICE: we could eventually try to combine the two, but now we just have 1 migration\n    // so it's not worth it.\n    const migration1 = await this.cache.getMigration(address, fromImageHash, fromVersion, chainId)\n    if (migration1) return migration1\n\n    const migration2 = await this.tracker.getMigration(address, fromImageHash, fromVersion, chainId)\n    if (migration2) {\n      await this.cache.saveMigration(address, migration2, this.contexts)\n    }\n\n    return migration2\n  }\n\n  async saveMigration(\n    address: string,\n    signed: migrator.SignedMigration,\n    contexts: commons.context.VersionedContext\n  ): Promise<void> {\n    await Promise.all([\n      this.tracker.saveMigration(address, signed, contexts),\n      this.cache.saveMigration(address, signed, contexts)\n    ])\n  }\n}\n","import { ChainId, NetworkConfig, allNetworks, findNetworkConfig } from '@0xsequence/network'\nimport { jwtDecodeClaims } from '@0xsequence/utils'\nimport { Account } from '@0xsequence/account'\nimport { ethers } from 'ethers'\nimport { tracker, trackers } from '@0xsequence/sessions'\nimport { Orchestrator, SignatureOrchestrator, signers } from '@0xsequence/signhub'\nimport { migrator } from '@0xsequence/migration'\nimport { commons, universal, v1 } from '@0xsequence/core'\nimport { Services, ServicesSettings, SessionJWT, SessionMeta } from './services'\n\nexport interface SessionDumpV1 {\n  config: Omit<v1.config.WalletConfig, 'version'> & { address?: string }\n  jwt?: SessionJWT\n  metadata: SessionMeta\n}\n\nexport interface SessionDumpV2 {\n  version: 2\n  address: string\n  jwt?: SessionJWT\n  metadata?: SessionMeta\n}\n\nexport function isSessionDumpV1(obj: any): obj is SessionDumpV1 {\n  return obj.config && obj.metadata && obj.version === undefined\n}\n\nexport function isSessionDumpV2(obj: any): obj is SessionDumpV2 {\n  return obj.version === 2 && obj.address\n}\n\n// These chains are always validated for migrations\n// if they are not available, the login will fail\nexport const CRITICAL_CHAINS = [1, 137]\n\nexport type SessionSettings = {\n  services?: ServicesSettings\n  contexts: commons.context.VersionedContext\n  networks: NetworkConfig[]\n  tracker: tracker.ConfigTracker & migrator.PresignedMigrationTracker\n}\n\nexport const SessionSettingsDefault: SessionSettings = {\n  contexts: commons.context.defaultContexts,\n  networks: allNetworks,\n  tracker: new trackers.remote.RemoteConfigTracker('https://sessions.sequence.app')\n}\n\nexport class Session {\n  constructor(\n    public networks: NetworkConfig[],\n    public contexts: commons.context.VersionedContext,\n    public account: Account,\n    public services?: Services\n  ) {}\n\n  async dump(): Promise<SessionDumpV2> {\n    const base = {\n      version: 2 as const,\n      address: this.account.address\n    }\n\n    if (this.services) {\n      return {\n        ...base,\n        ...(await this.services.dump())\n      }\n    }\n\n    return base\n  }\n\n  static async singleSigner(args: {\n    settings?: Partial<SessionSettings>\n    signer: ethers.Signer | signers.SapientSigner | string\n    selectWallet?: (wallets: string[]) => Promise<string | undefined>\n    onAccountAddress?: (address: string) => void\n    onMigration?: (account: Account) => Promise<boolean>\n    editConfigOnMigration?: (config: commons.config.Config) => commons.config.Config\n    projectAccessKey: string\n  }): Promise<Session> {\n    let { signer } = args\n\n    if (typeof signer === 'string') {\n      signer = new ethers.Wallet(signer)\n    }\n\n    const orchestrator = new Orchestrator([signer])\n    const referenceSigner = await signer.getAddress()\n    const threshold = 1\n    const addSigners = [\n      {\n        weight: 1,\n        address: referenceSigner\n      }\n    ]\n\n    const selectWallet =\n      args.selectWallet ||\n      (async (wallets: string[]) => {\n        if (wallets.length === 0) return undefined\n\n        // Find a wallet that was originally created\n        // as a 1/1 of the reference signer\n        const tracker = args.settings?.tracker ?? SessionSettingsDefault.tracker\n\n        const configs = await Promise.all(\n          wallets.map(async wallet => {\n            const imageHash = await tracker.imageHashOfCounterfactualWallet({ wallet })\n\n            return {\n              wallet,\n              config: imageHash && (await tracker.configOfImageHash({ imageHash: imageHash.imageHash }))\n            }\n          })\n        )\n\n        for (const config of configs) {\n          if (!config.config) {\n            continue\n          }\n\n          const coder = universal.genericCoderFor(config.config.version)\n          const signers = coder.config.signersOf(config.config)\n\n          if (signers.length === 1 && signers[0].address === referenceSigner) {\n            return config.wallet\n          }\n        }\n\n        return undefined\n      })\n\n    return Session.open({\n      ...args,\n      orchestrator,\n      referenceSigner,\n      threshold,\n      addSigners,\n      selectWallet\n    })\n  }\n\n  static async open(args: {\n    settings?: Partial<SessionSettings>\n    orchestrator: SignatureOrchestrator\n    addSigners?: commons.config.SimpleSigner[]\n    referenceSigner: string\n    threshold?: ethers.BigNumberish\n    selectWallet: (wallets: string[]) => Promise<string | undefined>\n    onAccountAddress?: (address: string) => void\n    editConfigOnMigration?: (config: commons.config.Config) => commons.config.Config\n    onMigration?: (account: Account) => Promise<boolean>\n    projectAccessKey?: string\n  }): Promise<Session> {\n    const {\n      referenceSigner,\n      threshold,\n      addSigners,\n      selectWallet,\n      onAccountAddress,\n      settings,\n      editConfigOnMigration,\n      onMigration,\n      orchestrator,\n      projectAccessKey\n    } = args\n\n    const { contexts, networks, tracker, services } = { ...SessionSettingsDefault, ...settings }\n\n    // The reference network is mainnet, if mainnet is not available, we use the first network\n    const referenceChainId =\n      findNetworkConfig(networks, settings?.services?.sequenceApiChainId ?? ChainId.MAINNET)?.chainId ?? networks[0]?.chainId\n    if (!referenceChainId) throw Error('No reference chain found')\n\n    const foundWallets = await tracker.walletsOfSigner({ signer: referenceSigner })\n    const selectedWallet = await selectWallet(foundWallets.map(w => w.wallet))\n\n    let account: Account\n\n    if (selectedWallet) {\n      onAccountAddress?.(selectedWallet)\n\n      // existing account, lets update it\n      account = new Account({\n        address: selectedWallet,\n        tracker,\n        networks,\n        contexts,\n        orchestrator,\n        projectAccessKey\n      })\n\n      // Get the latest configuration of the wallet (on the reference chain)\n      // now this configuration should be of the latest version, so we can start\n      // manipulating it.\n\n      // NOTICE: We are performing the wallet update on a single chain, assuming that\n      // all other networks have the same configuration. This is not always true.\n      if (addSigners && addSigners.length > 0) {\n        // New wallets never need migrations\n        // (because we create them on the latest version)\n        let status = await account.status(referenceChainId)\n\n        // If the wallet was created originally on v2, then we can skip\n        // the migration checks all together.\n        if (status.original.version !== status.version || account.version !== status.version) {\n          // Account may not have been migrated yet, so we need to check\n          // if it has been migrated and if not, migrate it (in all chains)\n          const { migratedAllChains: isFullyMigrated, failedChains } = await account.isMigratedAllChains()\n\n          // Failed chains must not contain mainnet or polygon, otherwise we cannot proceed.\n          if (failedChains.some(c => CRITICAL_CHAINS.includes(c))) {\n            throw Error(`Failed to fetch account status on ${failedChains.join(', ')}`)\n          }\n\n          if (!isFullyMigrated) {\n            // This is an oportunity for whoever is opening the session to\n            // feed the orchestrator with more signers, so that the migration\n            // can be completed.\n            if (onMigration && !(await onMigration(account))) {\n              throw Error('Migration cancelled, cannot open session')\n            }\n\n            const { failedChains } = await account.signAllMigrations(editConfigOnMigration || (c => c))\n            if (failedChains.some(c => CRITICAL_CHAINS.includes(c))) {\n              throw Error(`Failed to sign migrations on ${failedChains.join(', ')}`)\n            }\n\n            // If we are using a dedupped tracker we need to invalidate the cache\n            // otherwise we run the risk of not seeing the signed migrations reflected.\n            if (trackers.isDedupedTracker(tracker)) {\n              tracker.invalidateCache()\n            }\n\n            let isFullyMigrated2: boolean\n            ;[isFullyMigrated2, status] = await Promise.all([\n              account.isMigratedAllChains().then(r => r.migratedAllChains),\n              account.status(referenceChainId)\n            ])\n\n            if (!isFullyMigrated2) throw Error('Failed to migrate account')\n          }\n        }\n\n        // NOTICE: We only need to do this because the API will not be able to\n        // validate the v2 signature (if the account has an onchain version of 1)\n        // we could speed this up by sending the migration alongside the jwt request\n        // and letting the API validate it offchain.\n        if (status.onChain.version !== status.version) {\n          await account.doBootstrap(referenceChainId, undefined, status)\n        }\n\n        const prevConfig = status.config\n        const nextConfig = account.coders.config.editConfig(prevConfig, {\n          add: addSigners,\n          threshold\n        })\n\n        // Only update the onchain config if the imageHash has changed\n        if (account.coders.config.imageHashOf(prevConfig) !== account.coders.config.imageHashOf(nextConfig)) {\n          const newConfig = account.coders.config.editConfig(nextConfig, {\n            checkpoint: account.coders.config.checkpointOf(prevConfig) + 1n\n          })\n\n          await account.updateConfig(newConfig)\n        }\n      }\n    } else {\n      if (!addSigners || addSigners.length === 0) {\n        throw Error('Cannot create new account without signers')\n      }\n\n      if (!threshold) {\n        throw Error('Cannot create new account without threshold')\n      }\n\n      // fresh account\n      account = await Account.new({\n        config: { threshold, checkpoint: 0, signers: addSigners },\n        tracker,\n        contexts,\n        orchestrator,\n        networks,\n        projectAccessKey\n      })\n\n      onAccountAddress?.(account.address)\n\n      // sign a digest and send it to the tracker\n      // otherwise the tracker will not know about this account\n      await account.publishWitness()\n\n      // safety check, the remove tracker should be able to find\n      // this account for the reference signer\n      const foundWallets = await tracker.walletsOfSigner({ signer: referenceSigner, noCache: true })\n      if (!foundWallets.some(w => w.wallet === account.address)) {\n        throw Error('Account not found on tracker')\n      }\n    }\n\n    let servicesObj: Services | undefined\n\n    if (services) {\n      servicesObj = new Services(account, services)\n      servicesObj.auth() // fire and forget\n\n      servicesObj.onAuth(result => {\n        if (result.status === 'fulfilled') {\n          account.setJwt(result.value)\n        }\n      })\n    }\n\n    return new Session(networks, contexts, account, servicesObj)\n  }\n\n  static async load(args: {\n    settings?: Partial<SessionSettings>\n    orchestrator: SignatureOrchestrator\n    dump: SessionDumpV1 | SessionDumpV2\n    editConfigOnMigration: (config: commons.config.Config) => commons.config.Config\n    onMigration?: (account: Account) => Promise<boolean>\n  }): Promise<Session> {\n    const { dump, settings, editConfigOnMigration, onMigration, orchestrator } = args\n    const { contexts, networks, tracker, services } = { ...SessionSettingsDefault, ...settings }\n\n    let account: Account\n\n    if (isSessionDumpV1(dump)) {\n      // Old configuration format used to also contain an \"address\" field\n      // but if it doesn't, it means that it was a \"counterfactual\" account\n      // not yet updated, so we need to compute the address\n      const oldAddress =\n        dump.config.address ||\n        commons.context.addressOf(contexts[1], v1.config.ConfigCoder.imageHashOf({ ...dump.config, version: 1 }))\n\n      const jwtExpired = (dump.jwt?.expiration ?? 0) < Math.floor(Date.now() / 1000)\n\n      account = new Account({\n        address: oldAddress,\n        tracker,\n        networks,\n        contexts,\n        orchestrator,\n        jwt: jwtExpired ? undefined : dump.jwt?.token\n      })\n\n      // TODO: This property may not hold if the user adds a new network\n      if (!(await account.isMigratedAllChains().then(r => r.migratedAllChains))) {\n        // This is an oportunity for whoever is opening the session to\n        // feed the orchestrator with more signers, so that the migration\n        // can be completed.\n        if (onMigration && !(await onMigration(account))) {\n          throw Error('Migration cancelled, cannot open session')\n        }\n\n        console.log('Migrating account...')\n        await account.signAllMigrations(editConfigOnMigration)\n        if (!(await account.isMigratedAllChains().then(r => r.migratedAllChains))) throw Error('Failed to migrate account')\n      }\n\n      // We may need to update the JWT if the account has been migrated\n    } else if (isSessionDumpV2(dump)) {\n      const jwtExpired = (dump.jwt?.expiration ?? 0) < Math.floor(Date.now() / 1000)\n\n      account = new Account({\n        address: dump.address,\n        tracker,\n        networks,\n        contexts,\n        orchestrator,\n        jwt: jwtExpired ? undefined : dump.jwt?.token\n      })\n    } else {\n      throw Error('Invalid dump format')\n    }\n\n    let servicesObj: Services | undefined\n\n    if (services) {\n      servicesObj = new Services(\n        account,\n        services,\n        dump.jwt && {\n          jwt: {\n            token: Promise.resolve(dump.jwt.token),\n            expiration: dump.jwt.expiration ?? jwtDecodeClaims(dump.jwt.token).exp\n          },\n          metadata: dump.metadata\n        }\n      )\n    }\n\n    return new Session(networks, contexts, account, servicesObj)\n  }\n}\n","import { commons } from '@0xsequence/core'\nimport { Proof, ValidatorFunc } from '@0xsequence/ethauth'\nimport { tracker } from '@0xsequence/sessions'\nimport { ethers } from 'ethers'\n\nexport const ValidateSequenceWalletProof = (\n  readerFor: (chainId: number) => commons.reader.Reader,\n  tracker: tracker.ConfigTracker,\n  context: commons.context.WalletContext\n): ValidatorFunc => {\n  return async (_provider: ethers.JsonRpcProvider, chainId: number, proof: Proof): Promise<{ isValid: boolean }> => {\n    const digest = proof.messageDigest()\n    const isValid = await readerFor(chainId).isValidSignature(proof.address, digest, proof.signature)\n    return { isValid }\n  }\n}\n","/* eslint-disable */\n// sequence-guard v0.4.0 5b203e30a5c79b2b9a37483ce17500a51b94ebe1\n// --\n// Code generated by webrpc-gen@v0.18.6 with typescript generator. DO NOT EDIT.\n//\n// webrpc-gen -schema=guard.ridl -target=typescript -client -out=./clients/guard.gen.ts\n\n// WebRPC description and code-gen version\nexport const WebRPCVersion = 'v1'\n\n// Schema version of your RIDL schema\nexport const WebRPCSchemaVersion = 'v0.4.0'\n\n// Schema hash generated from your RIDL schema\nexport const WebRPCSchemaHash = '5b203e30a5c79b2b9a37483ce17500a51b94ebe1'\n\n//\n// Types\n//\n\nexport interface Version {\n  webrpcVersion: string\n  schemaVersion: string\n  schemaHash: string\n  appVersion: string\n}\n\nexport interface RuntimeStatus {\n  healthOK: boolean\n  startTime: string\n  uptime: number\n  ver: string\n  branch: string\n  commitHash: string\n}\n\nexport interface WalletConfig {\n  address: string\n  content: string\n}\n\nexport interface WalletSigner {\n  address: string\n  weight: number\n}\n\nexport interface SignRequest {\n  chainId: number\n  msg: string\n  auxData: string\n}\n\nexport interface OwnershipProof {\n  wallet: string\n  timestamp: number\n  signer: string\n  signature: string\n}\n\nexport interface AuthToken {\n  id: string\n  token: string\n}\n\nexport interface RecoveryCode {\n  code: string\n  used: boolean\n}\n\nexport interface Guard {\n  ping(headers?: object, signal?: AbortSignal): Promise<PingReturn>\n  version(headers?: object, signal?: AbortSignal): Promise<VersionReturn>\n  runtimeStatus(headers?: object, signal?: AbortSignal): Promise<RuntimeStatusReturn>\n  getSignerConfig(args: GetSignerConfigArgs, headers?: object, signal?: AbortSignal): Promise<GetSignerConfigReturn>\n  sign(args: SignArgs, headers?: object, signal?: AbortSignal): Promise<SignReturn>\n  signWith(args: SignWithArgs, headers?: object, signal?: AbortSignal): Promise<SignWithReturn>\n  patch(args: PatchArgs, headers?: object, signal?: AbortSignal): Promise<PatchReturn>\n  authMethods(args: AuthMethodsArgs, headers?: object, signal?: AbortSignal): Promise<AuthMethodsReturn>\n  setPIN(args: SetPINArgs, headers?: object, signal?: AbortSignal): Promise<SetPINReturn>\n  resetPIN(args: ResetPINArgs, headers?: object, signal?: AbortSignal): Promise<ResetPINReturn>\n  createTOTP(args: CreateTOTPArgs, headers?: object, signal?: AbortSignal): Promise<CreateTOTPReturn>\n  commitTOTP(args: CommitTOTPArgs, headers?: object, signal?: AbortSignal): Promise<CommitTOTPReturn>\n  resetTOTP(args: ResetTOTPArgs, headers?: object, signal?: AbortSignal): Promise<ResetTOTPReturn>\n  reset2FA(args: Reset2FAArgs, headers?: object, signal?: AbortSignal): Promise<Reset2FAReturn>\n  recoveryCodes(args: RecoveryCodesArgs, headers?: object, signal?: AbortSignal): Promise<RecoveryCodesReturn>\n  resetRecoveryCodes(args: ResetRecoveryCodesArgs, headers?: object, signal?: AbortSignal): Promise<ResetRecoveryCodesReturn>\n}\n\nexport interface PingArgs {}\n\nexport interface PingReturn {\n  status: boolean\n}\nexport interface VersionArgs {}\n\nexport interface VersionReturn {\n  version: Version\n}\nexport interface RuntimeStatusArgs {}\n\nexport interface RuntimeStatusReturn {\n  status: RuntimeStatus\n}\nexport interface GetSignerConfigArgs {\n  signer: string\n}\n\nexport interface GetSignerConfigReturn {\n  signerConfig: WalletConfig\n}\nexport interface SignArgs {\n  request: SignRequest\n  token?: AuthToken\n}\n\nexport interface SignReturn {\n  sig: string\n}\nexport interface SignWithArgs {\n  signer: string\n  request: SignRequest\n  token?: AuthToken\n}\n\nexport interface SignWithReturn {\n  sig: string\n}\nexport interface PatchArgs {\n  signer: string\n  chainId: number\n  secret: string\n}\n\nexport interface PatchReturn {\n  txs: any\n}\nexport interface AuthMethodsArgs {\n  proof?: OwnershipProof\n}\n\nexport interface AuthMethodsReturn {\n  methods: Array<string>\n  active: boolean\n}\nexport interface SetPINArgs {\n  pin: string\n  timestamp: number\n  signature: string\n}\n\nexport interface SetPINReturn {}\nexport interface ResetPINArgs {\n  timestamp: number\n  signature: string\n}\n\nexport interface ResetPINReturn {}\nexport interface CreateTOTPArgs {\n  timestamp: number\n  signature: string\n}\n\nexport interface CreateTOTPReturn {\n  uri: string\n}\nexport interface CommitTOTPArgs {\n  token: string\n}\n\nexport interface CommitTOTPReturn {\n  codes: Array<RecoveryCode>\n}\nexport interface ResetTOTPArgs {\n  timestamp: number\n  signature: string\n}\n\nexport interface ResetTOTPReturn {}\nexport interface Reset2FAArgs {\n  code: string\n  proof?: OwnershipProof\n}\n\nexport interface Reset2FAReturn {}\nexport interface RecoveryCodesArgs {\n  timestamp: number\n  signature: string\n}\n\nexport interface RecoveryCodesReturn {\n  codes: Array<RecoveryCode>\n}\nexport interface ResetRecoveryCodesArgs {\n  timestamp: number\n  signature: string\n}\n\nexport interface ResetRecoveryCodesReturn {\n  codes: Array<RecoveryCode>\n}\n\n//\n// Client\n//\nexport class Guard implements Guard {\n  protected hostname: string\n  protected fetch: Fetch\n  protected path = '/rpc/Guard/'\n\n  constructor(hostname: string, fetch: Fetch) {\n    this.hostname = hostname\n    this.fetch = (input: RequestInfo, init?: RequestInit) => fetch(input, init)\n  }\n\n  private url(name: string): string {\n    return this.hostname + this.path + name\n  }\n\n  ping = (headers?: object, signal?: AbortSignal): Promise<PingReturn> => {\n    return this.fetch(this.url('Ping'), createHTTPRequest({}, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <boolean>_data.status\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  version = (headers?: object, signal?: AbortSignal): Promise<VersionReturn> => {\n    return this.fetch(this.url('Version'), createHTTPRequest({}, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            version: <Version>_data.version\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  runtimeStatus = (headers?: object, signal?: AbortSignal): Promise<RuntimeStatusReturn> => {\n    return this.fetch(this.url('RuntimeStatus'), createHTTPRequest({}, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            status: <RuntimeStatus>_data.status\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  getSignerConfig = (args: GetSignerConfigArgs, headers?: object, signal?: AbortSignal): Promise<GetSignerConfigReturn> => {\n    return this.fetch(this.url('GetSignerConfig'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            signerConfig: <WalletConfig>_data.signerConfig\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  sign = (args: SignArgs, headers?: object, signal?: AbortSignal): Promise<SignReturn> => {\n    return this.fetch(this.url('Sign'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            sig: <string>_data.sig\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  signWith = (args: SignWithArgs, headers?: object, signal?: AbortSignal): Promise<SignWithReturn> => {\n    return this.fetch(this.url('SignWith'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            sig: <string>_data.sig\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  patch = (args: PatchArgs, headers?: object, signal?: AbortSignal): Promise<PatchReturn> => {\n    return this.fetch(this.url('Patch'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            txs: <any>_data.txs\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  authMethods = (args: AuthMethodsArgs, headers?: object, signal?: AbortSignal): Promise<AuthMethodsReturn> => {\n    return this.fetch(this.url('AuthMethods'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            methods: <Array<string>>_data.methods,\n            active: <boolean>_data.active\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  setPIN = (args: SetPINArgs, headers?: object, signal?: AbortSignal): Promise<SetPINReturn> => {\n    return this.fetch(this.url('SetPIN'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {}\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  resetPIN = (args: ResetPINArgs, headers?: object, signal?: AbortSignal): Promise<ResetPINReturn> => {\n    return this.fetch(this.url('ResetPIN'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {}\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  createTOTP = (args: CreateTOTPArgs, headers?: object, signal?: AbortSignal): Promise<CreateTOTPReturn> => {\n    return this.fetch(this.url('CreateTOTP'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            uri: <string>_data.uri\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  commitTOTP = (args: CommitTOTPArgs, headers?: object, signal?: AbortSignal): Promise<CommitTOTPReturn> => {\n    return this.fetch(this.url('CommitTOTP'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            codes: <Array<RecoveryCode>>_data.codes\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  resetTOTP = (args: ResetTOTPArgs, headers?: object, signal?: AbortSignal): Promise<ResetTOTPReturn> => {\n    return this.fetch(this.url('ResetTOTP'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {}\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  reset2FA = (args: Reset2FAArgs, headers?: object, signal?: AbortSignal): Promise<Reset2FAReturn> => {\n    return this.fetch(this.url('Reset2FA'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {}\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  recoveryCodes = (args: RecoveryCodesArgs, headers?: object, signal?: AbortSignal): Promise<RecoveryCodesReturn> => {\n    return this.fetch(this.url('RecoveryCodes'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            codes: <Array<RecoveryCode>>_data.codes\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n\n  resetRecoveryCodes = (\n    args: ResetRecoveryCodesArgs,\n    headers?: object,\n    signal?: AbortSignal\n  ): Promise<ResetRecoveryCodesReturn> => {\n    return this.fetch(this.url('ResetRecoveryCodes'), createHTTPRequest(args, headers, signal)).then(\n      res => {\n        return buildResponse(res).then(_data => {\n          return {\n            codes: <Array<RecoveryCode>>_data.codes\n          }\n        })\n      },\n      error => {\n        throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || ''}` })\n      }\n    )\n  }\n}\n\nconst createHTTPRequest = (body: object = {}, headers: object = {}, signal: AbortSignal | null = null): object => {\n  return {\n    method: 'POST',\n    headers: { ...headers, 'Content-Type': 'application/json' },\n    body: JSON.stringify(body || {}),\n    signal\n  }\n}\n\nconst buildResponse = (res: Response): Promise<any> => {\n  return res.text().then(text => {\n    let data\n    try {\n      data = JSON.parse(text)\n    } catch (error) {\n      let message = ''\n      if (error instanceof Error) {\n        message = error.message\n      }\n      throw WebrpcBadResponseError.new({\n        status: res.status,\n        cause: `JSON.parse(): ${message}: response text: ${text}`\n      })\n    }\n    if (!res.ok) {\n      const code: number = typeof data.code === 'number' ? data.code : 0\n      throw (webrpcErrorByCode[code] || WebrpcError).new(data)\n    }\n    return data\n  })\n}\n\n//\n// Errors\n//\n\nexport class WebrpcError extends Error {\n  name: string\n  code: number\n  message: string\n  status: number\n  cause?: string\n\n  /** @deprecated Use message instead of msg. Deprecated in webrpc v0.11.0. */\n  msg: string\n\n  constructor(name: string, code: number, message: string, status: number, cause?: string) {\n    super(message)\n    this.name = name || 'WebrpcError'\n    this.code = typeof code === 'number' ? code : 0\n    this.message = message || `endpoint error ${this.code}`\n    this.msg = this.message\n    this.status = typeof status === 'number' ? status : 0\n    this.cause = cause\n    Object.setPrototypeOf(this, WebrpcError.prototype)\n  }\n\n  static new(payload: any): WebrpcError {\n    return new this(payload.error, payload.code, payload.message || payload.msg, payload.status, payload.cause)\n  }\n}\n\n// Webrpc errors\n\nexport class WebrpcEndpointError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcEndpoint',\n    code: number = 0,\n    message: string = 'endpoint error',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcEndpointError.prototype)\n  }\n}\n\nexport class WebrpcRequestFailedError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcRequestFailed',\n    code: number = -1,\n    message: string = 'request failed',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcRequestFailedError.prototype)\n  }\n}\n\nexport class WebrpcBadRouteError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcBadRoute',\n    code: number = -2,\n    message: string = 'bad route',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcBadRouteError.prototype)\n  }\n}\n\nexport class WebrpcBadMethodError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcBadMethod',\n    code: number = -3,\n    message: string = 'bad method',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcBadMethodError.prototype)\n  }\n}\n\nexport class WebrpcBadRequestError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcBadRequest',\n    code: number = -4,\n    message: string = 'bad request',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcBadRequestError.prototype)\n  }\n}\n\nexport class WebrpcBadResponseError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcBadResponse',\n    code: number = -5,\n    message: string = 'bad response',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcBadResponseError.prototype)\n  }\n}\n\nexport class WebrpcServerPanicError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcServerPanic',\n    code: number = -6,\n    message: string = 'server panic',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcServerPanicError.prototype)\n  }\n}\n\nexport class WebrpcInternalErrorError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcInternalError',\n    code: number = -7,\n    message: string = 'internal error',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcInternalErrorError.prototype)\n  }\n}\n\nexport class WebrpcClientDisconnectedError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcClientDisconnected',\n    code: number = -8,\n    message: string = 'client disconnected',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcClientDisconnectedError.prototype)\n  }\n}\n\nexport class WebrpcStreamLostError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcStreamLost',\n    code: number = -9,\n    message: string = 'stream lost',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcStreamLostError.prototype)\n  }\n}\n\nexport class WebrpcStreamFinishedError extends WebrpcError {\n  constructor(\n    name: string = 'WebrpcStreamFinished',\n    code: number = -10,\n    message: string = 'stream finished',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, WebrpcStreamFinishedError.prototype)\n  }\n}\n\n// Schema errors\n\nexport class UnauthorizedError extends WebrpcError {\n  constructor(\n    name: string = 'Unauthorized',\n    code: number = 1000,\n    message: string = 'Unauthorized access',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, UnauthorizedError.prototype)\n  }\n}\n\nexport class SessionExpiredError extends WebrpcError {\n  constructor(\n    name: string = 'SessionExpired',\n    code: number = 1002,\n    message: string = 'Session expired',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, SessionExpiredError.prototype)\n  }\n}\n\nexport class AbortedError extends WebrpcError {\n  constructor(\n    name: string = 'Aborted',\n    code: number = 1005,\n    message: string = 'Request aborted',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, AbortedError.prototype)\n  }\n}\n\nexport class InvalidArgumentError extends WebrpcError {\n  constructor(\n    name: string = 'InvalidArgument',\n    code: number = 2001,\n    message: string = 'Invalid argument',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, InvalidArgumentError.prototype)\n  }\n}\n\nexport class UnavailableError extends WebrpcError {\n  constructor(\n    name: string = 'Unavailable',\n    code: number = 2002,\n    message: string = 'Unavailable resource',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, UnavailableError.prototype)\n  }\n}\n\nexport class QueryFailedError extends WebrpcError {\n  constructor(\n    name: string = 'QueryFailed',\n    code: number = 2003,\n    message: string = 'Query failed',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, QueryFailedError.prototype)\n  }\n}\n\nexport class ValidationFailedError extends WebrpcError {\n  constructor(\n    name: string = 'ValidationFailed',\n    code: number = 2004,\n    message: string = 'Validation Failed',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, ValidationFailedError.prototype)\n  }\n}\n\nexport class NotFoundError extends WebrpcError {\n  constructor(\n    name: string = 'NotFound',\n    code: number = 3000,\n    message: string = 'Resource not found',\n    status: number = 0,\n    cause?: string\n  ) {\n    super(name, code, message, status, cause)\n    Object.setPrototypeOf(this, NotFoundError.prototype)\n  }\n}\n\nexport enum errors {\n  WebrpcEndpoint = 'WebrpcEndpoint',\n  WebrpcRequestFailed = 'WebrpcRequestFailed',\n  WebrpcBadRoute = 'WebrpcBadRoute',\n  WebrpcBadMethod = 'WebrpcBadMethod',\n  WebrpcBadRequest = 'WebrpcBadRequest',\n  WebrpcBadResponse = 'WebrpcBadResponse',\n  WebrpcServerPanic = 'WebrpcServerPanic',\n  WebrpcInternalError = 'WebrpcInternalError',\n  WebrpcClientDisconnected = 'WebrpcClientDisconnected',\n  WebrpcStreamLost = 'WebrpcStreamLost',\n  WebrpcStreamFinished = 'WebrpcStreamFinished',\n  Unauthorized = 'Unauthorized',\n  SessionExpired = 'SessionExpired',\n  Aborted = 'Aborted',\n  InvalidArgument = 'InvalidArgument',\n  Unavailable = 'Unavailable',\n  QueryFailed = 'QueryFailed',\n  ValidationFailed = 'ValidationFailed',\n  NotFound = 'NotFound'\n}\n\nconst webrpcErrorByCode: { [code: number]: any } = {\n  [0]: WebrpcEndpointError,\n  [-1]: WebrpcRequestFailedError,\n  [-2]: WebrpcBadRouteError,\n  [-3]: WebrpcBadMethodError,\n  [-4]: WebrpcBadRequestError,\n  [-5]: WebrpcBadResponseError,\n  [-6]: WebrpcServerPanicError,\n  [-7]: WebrpcInternalErrorError,\n  [-8]: WebrpcClientDisconnectedError,\n  [-9]: WebrpcStreamLostError,\n  [-10]: WebrpcStreamFinishedError,\n  [1000]: UnauthorizedError,\n  [1002]: SessionExpiredError,\n  [1005]: AbortedError,\n  [2001]: InvalidArgumentError,\n  [2002]: UnavailableError,\n  [2003]: QueryFailedError,\n  [2004]: ValidationFailedError,\n  [3000]: NotFoundError\n}\n\nexport type Fetch = (input: RequestInfo, init?: RequestInit) => Promise<Response>\n","import { Account } from '@0xsequence/account'\nimport { commons, universal } from '@0xsequence/core'\nimport { signers, Status } from '@0xsequence/signhub'\nimport { encodeTypedDataDigest, TypedData } from '@0xsequence/utils'\nimport { ethers } from 'ethers'\nimport { AuthMethodsReturn, Guard, RecoveryCode as GuardRecoveryCode } from './guard.gen'\n\nconst fetch = globalThis.fetch\n\nexport class GuardSigner implements signers.SapientSigner {\n  private guard: Guard\n\n  constructor(\n    public readonly address: string,\n    public readonly url: string,\n    public readonly appendSuffix: boolean = false\n  ) {\n    this.guard = new Guard(url, fetch)\n  }\n\n  async getAddress(): Promise<string> {\n    return this.address\n  }\n\n  async buildDeployTransaction(_metadata: object): Promise<commons.transaction.TransactionBundle | undefined> {\n    return undefined\n  }\n\n  async predecorateSignedTransactions(_metadata: object): Promise<commons.transaction.SignedTransactionBundle[]> {\n    return []\n  }\n\n  async decorateTransactions(\n    bundle: commons.transaction.IntendedTransactionBundle,\n    _metadata: object\n  ): Promise<commons.transaction.IntendedTransactionBundle> {\n    return bundle\n  }\n\n  async sign(message: ethers.BytesLike, metadata: object): Promise<ethers.BytesLike> {\n    if (!commons.isWalletSignRequestMetadata(metadata)) {\n      throw new Error('expected sequence signature request metadata')\n    }\n\n    const guardTotpCode = (metadata as { guardTotpCode?: string }).guardTotpCode\n\n    // Building auxData, notice: this uses the old v1 format\n    // TODO: We should update the guard API so we can pass the metadata directly\n    const coder = universal.genericCoderFor(metadata.config.version)\n    const { encoded } = coder.signature.encodeSigners(metadata.config, metadata.parts ?? new Map(), [], metadata.chainId)\n\n    return (\n      await this.guard.signWith({\n        signer: this.address,\n        request: {\n          msg: ethers.hexlify(message),\n          auxData: this.packMsgAndSig(metadata.address, metadata.digest, encoded, metadata.chainId),\n          chainId: Number(metadata.chainId)\n        },\n        token: guardTotpCode ? { id: AuthMethod.TOTP, token: guardTotpCode } : undefined\n      })\n    ).sig\n  }\n\n  notifyStatusChange(_id: string, _status: Status, _metadata: object): void {}\n\n  async getAuthMethods(proof: OwnershipProof): Promise<{ methods: AuthMethod[]; active: boolean }> {\n    let response: AuthMethodsReturn\n\n    if ('jwt' in proof) {\n      response = await this.guard.authMethods({}, { Authorization: `BEARER ${proof.jwt}` })\n    } else {\n      const signedProof = await signOwnershipProof(proof)\n\n      response = await this.guard.authMethods({\n        proof: {\n          wallet: signedProof.walletAddress,\n          timestamp: signedProof.timestamp.getTime(),\n          signer: signedProof.signerAddress,\n          signature: signedProof.signature\n        }\n      })\n    }\n\n    return { ...response, methods: response.methods.map(parseAuthMethod) }\n  }\n\n  async setPin(pin: string | undefined, proof: AuthUpdateProof): Promise<void> {\n    const signedProof = await signAuthUpdateProof(proof)\n\n    if (pin === undefined) {\n      await this.guard.resetPIN(\n        { timestamp: signedProof.timestamp.getTime(), signature: signedProof.signature },\n        { Authorization: `BEARER ${proof.jwt}` }\n      )\n    } else {\n      await this.guard.setPIN(\n        { pin, timestamp: signedProof.timestamp.getTime(), signature: signedProof.signature },\n        { Authorization: `BEARER ${proof.jwt}` }\n      )\n    }\n  }\n\n  resetPin(proof: AuthUpdateProof): Promise<void> {\n    return this.setPin(undefined, proof)\n  }\n\n  async createTotp(proof: AuthUpdateProof): Promise<URL> {\n    const signedProof = await signAuthUpdateProof(proof)\n\n    const { uri } = await this.guard.createTOTP(\n      { timestamp: signedProof.timestamp.getTime(), signature: signedProof.signature },\n      { Authorization: `BEARER ${proof.jwt}` }\n    )\n\n    return new URL(uri)\n  }\n\n  async commitTotp(token: string, jwt: string): Promise<RecoveryCode[]> {\n    const { codes } = await this.guard.commitTOTP({ token }, { Authorization: `BEARER ${jwt}` })\n    return codes\n  }\n\n  async resetTotp(proof: AuthUpdateProof): Promise<void> {\n    const signedProof = await signAuthUpdateProof(proof)\n\n    await this.guard.resetTOTP(\n      { timestamp: signedProof.timestamp.getTime(), signature: signedProof.signature },\n      { Authorization: `BEARER ${proof.jwt}` }\n    )\n  }\n\n  async reset2fa(recoveryCode: string, proof: OwnershipProof): Promise<void> {\n    if ('jwt' in proof) {\n      await this.guard.reset2FA({ code: recoveryCode }, { Authorization: `BEARER ${proof.jwt}` })\n    } else {\n      const signedProof = await signOwnershipProof(proof)\n\n      await this.guard.reset2FA({\n        code: recoveryCode,\n        proof: {\n          wallet: signedProof.walletAddress,\n          timestamp: signedProof.timestamp.getTime(),\n          signer: signedProof.signerAddress,\n          signature: signedProof.signature\n        }\n      })\n    }\n  }\n\n  async getRecoveryCodes(proof: AuthUpdateProof): Promise<RecoveryCode[]> {\n    const signedProof = await signAuthUpdateProof(proof)\n\n    const { codes } = await this.guard.recoveryCodes(\n      { timestamp: signedProof.timestamp.getTime(), signature: signedProof.signature },\n      { Authorization: `BEARER ${proof.jwt}` }\n    )\n\n    return codes\n  }\n\n  async resetRecoveryCodes(proof: AuthUpdateProof): Promise<RecoveryCode[]> {\n    const signedProof = await signAuthUpdateProof(proof)\n\n    const { codes } = await this.guard.resetRecoveryCodes(\n      { timestamp: signedProof.timestamp.getTime(), signature: signedProof.signature },\n      { Authorization: `BEARER ${proof.jwt}` }\n    )\n\n    return codes\n  }\n\n  private packMsgAndSig(address: string, msg: ethers.BytesLike, sig: ethers.BytesLike, chainId: ethers.BigNumberish): string {\n    return ethers.AbiCoder.defaultAbiCoder().encode(['address', 'uint256', 'bytes', 'bytes'], [address, chainId, msg, sig])\n  }\n\n  suffix(): ethers.BytesLike {\n    return new Uint8Array(this.appendSuffix ? [3] : [])\n  }\n}\n\nexport type RecoveryCode = GuardRecoveryCode\n\nexport enum AuthMethod {\n  PIN = 'PIN',\n  TOTP = 'TOTP'\n}\n\nfunction parseAuthMethod(method: string): AuthMethod {\n  switch (method) {\n    case AuthMethod.PIN:\n    case AuthMethod.TOTP:\n      return method\n    default:\n      throw new Error(`unknown auth method '${method}'`)\n  }\n}\n\nexport type SignedOwnershipProof = {\n  walletAddress: string\n  timestamp: Date\n  signerAddress: string\n  signature: string\n}\n\nexport type OwnershipProof =\n  | SignedOwnershipProof\n  | { jwt: string }\n  | {\n      walletAddress: string\n      signer: ethers.Signer | signers.SapientSigner\n    }\n\nexport function isSignedOwnershipProof(proof: OwnershipProof): proof is SignedOwnershipProof {\n  return 'signerAddress' in proof && typeof proof.signerAddress === 'string'\n}\n\nexport async function signOwnershipProof(proof: Exclude<OwnershipProof, { jwt: string }>): Promise<SignedOwnershipProof> {\n  if (isSignedOwnershipProof(proof)) {\n    return proof\n  } else {\n    const signer = signers.isSapientSigner(proof.signer) ? proof.signer : new signers.SignerWrapper(proof.signer)\n    const signerAddress = await signer.getAddress()\n    const timestamp = new Date()\n    const typedData = getOwnershipProofTypedData(proof.walletAddress, timestamp)\n    const digest = encodeTypedDataDigest(typedData)\n\n    return {\n      walletAddress: proof.walletAddress,\n      timestamp,\n      signerAddress,\n      signature: ethers.hexlify(await signer.sign(digest, {}))\n    }\n  }\n}\n\nexport type AuthUpdateProof = { jwt: string } & ({ timestamp: Date; signature: string } | { wallet: Account })\n\nasync function signAuthUpdateProof(proof: AuthUpdateProof): Promise<{ jwt: string; timestamp: Date; signature: string }> {\n  if ('wallet' in proof) {\n    const timestamp = new Date()\n    const typedData = getAuthUpdateProofTypedData(timestamp)\n\n    const signature = await proof.wallet.signTypedData(\n      typedData.domain,\n      typedData.types,\n      typedData.message,\n      typedData.domain.chainId ?? 1,\n      'eip6492'\n    )\n\n    return { jwt: proof.jwt, timestamp, signature }\n  } else {\n    return proof\n  }\n}\n\nexport function getOwnershipProofTypedData(wallet: string, timestamp: Date): TypedData {\n  return {\n    domain,\n    types: {\n      AuthMethods: [\n        { name: 'wallet', type: 'address' },\n        { name: 'timestamp', type: 'string' }\n      ]\n    },\n    message: {\n      wallet: ethers.getAddress(wallet),\n      timestamp: toUTCString(timestamp)\n    }\n  }\n}\n\nexport function getAuthUpdateProofTypedData(timestamp: Date): TypedData {\n  return {\n    domain,\n    types: {\n      AuthUpdate: [{ name: 'timestamp', type: 'string' }]\n    },\n    message: {\n      timestamp: toUTCString(timestamp)\n    }\n  }\n}\n\nconst domain: ethers.TypedDataDomain = {\n  name: 'Sequence Guard',\n  version: '1',\n  chainId: 1\n}\n\nfunction toUTCString(date: Date): string {\n  return date.toUTCString().replace('GMT', 'UTC')\n}\n","import { ethers } from 'ethers'\nimport { EIP1193ProviderFunc, JsonRpcRequest, JsonRpcMiddleware } from '../types'\n\nexport const networkProviderMiddleware =\n  (getChainId: (request: JsonRpcRequest) => number): JsonRpcMiddleware =>\n  (next: EIP1193ProviderFunc) => {\n    return async (request: JsonRpcRequest): Promise<any> => {\n      const networkChainId = getChainId(request)\n\n      switch (request.method) {\n        case 'net_version': {\n          return `${networkChainId}`\n        }\n\n        case 'eth_chainId': {\n          return ethers.toQuantity(networkChainId)\n        }\n      }\n\n      // request is allowed. keep going..\n      return next(request)\n    }\n  }\n","import { ethers } from 'ethers'\nimport { EIP1193ProviderFunc, JsonRpcMiddlewareHandler, JsonRpcRequest } from '../types'\nimport { SignerJsonRpcMethods } from './signing-provider'\nimport { logger } from '@0xsequence/utils'\n\nexport class PublicProvider implements JsonRpcMiddlewareHandler {\n  private privateJsonRpcMethods = ['net_version', 'eth_chainId', 'eth_accounts', ...SignerJsonRpcMethods]\n\n  private provider?: ethers.JsonRpcProvider\n  private rpcUrl?: string\n\n  constructor(rpcUrl?: string) {\n    if (rpcUrl) {\n      this.setRpcUrl(rpcUrl)\n    }\n  }\n\n  requestHandler = (next: EIP1193ProviderFunc) => {\n    return (request: JsonRpcRequest): Promise<any> => {\n      // When provider is configured, send non-private methods to our local public provider\n      if (this.provider && !this.privateJsonRpcMethods.includes(request.method)) {\n        return this.provider.send(request.method, request.params || [])\n      }\n\n      // Continue to next handler\n      logger.debug('[public-provider] sending request to signer window', request.method)\n      return next(request)\n    }\n  }\n\n  getRpcUrl() {\n    return this.rpcUrl\n  }\n\n  setRpcUrl(rpcUrl: string) {\n    if (!rpcUrl || rpcUrl === '') {\n      this.rpcUrl = undefined\n      this.provider = undefined\n    } else {\n      this.rpcUrl = rpcUrl\n      // TODO: maybe use @0xsequence/network JsonRpcProvider here instead,\n      // which supports better caching.\n      this.provider = new ethers.JsonRpcProvider(rpcUrl)\n    }\n  }\n}\n","import { walletContracts } from '@0xsequence/abi'\nimport { commons } from '@0xsequence/core'\nimport { ethers } from 'ethers'\n\nconst PROHIBITED_FUNCTIONS = new Map(\n  [\n    'addHook(bytes4,address)',\n    'clearExtraImageHashes(bytes32[])',\n    'removeHook(bytes4)',\n    'setExtraImageHash(bytes32,uint256)',\n    'updateIPFSRoot(bytes32)',\n    'updateImageHash(bytes32)',\n    'updateImageHashAndIPFS(bytes32,bytes32)',\n    'updateImplementation(address)'\n  ].map(signature => [ethers.id(signature).slice(0, 10), signature])\n)\n\nexport function validateTransactionRequest(wallet: string, transaction: commons.transaction.Transactionish) {\n  const transactions = commons.transaction.fromTransactionish(wallet, transaction)\n  const unwound = commons.transaction.unwind(wallet, transactions)\n  unwound.forEach(transaction => validateTransaction(wallet, transaction))\n}\n\nfunction validateTransaction(wallet: string, transaction: commons.transaction.Transaction) {\n  if (transaction.to.toLowerCase() === wallet.toLowerCase()) {\n    if (transaction.data) {\n      const data = ethers.getBytes(transaction.data)\n      if (data.length >= 4 && !isCreateContractCall(data)) {\n        throw new Error('self calls are forbidden')\n      }\n    }\n  }\n\n  if (transaction.delegateCall) {\n    throw new Error('delegate calls are forbidden')\n  }\n\n  if (transaction.data) {\n    const data = ethers.hexlify(transaction.data)\n    const selector = data.slice(0, 10)\n    const signature = PROHIBITED_FUNCTIONS.get(selector)\n    if (signature) {\n      const name = signature.slice(0, signature.indexOf('('))\n      throw new Error(`${name} calls are forbidden`)\n    }\n  }\n}\n\nfunction isCreateContractCall(data: ethers.BytesLike): boolean {\n  const walletInterface = new ethers.Interface(walletContracts.mainModule.abi)\n  try {\n    walletInterface.decodeFunctionData('createContract', data)\n    return true\n  } catch {\n    return false\n  }\n}\n","/*!\n * EventEmitter2\n * https://github.com/hij1nx/EventEmitter2\n *\n * Copyright (c) 2013 hij1nx\n * Licensed under the MIT license.\n */\n;!function(undefined) {\n  var hasOwnProperty= Object.hasOwnProperty;\n  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n  };\n  var defaultMaxListeners = 10;\n  var nextTickSupported= typeof process=='object' && typeof process.nextTick=='function';\n  var symbolsSupported= typeof Symbol==='function';\n  var reflectSupported= typeof Reflect === 'object';\n  var setImmediateSupported= typeof setImmediate === 'function';\n  var _setImmediate= setImmediateSupported ? setImmediate : setTimeout;\n  var ownKeys= symbolsSupported? (reflectSupported && typeof Reflect.ownKeys==='function'? Reflect.ownKeys : function(obj){\n    var arr= Object.getOwnPropertyNames(obj);\n    arr.push.apply(arr, Object.getOwnPropertySymbols(obj));\n    return arr;\n  }) : Object.keys;\n\n  function init() {\n    this._events = {};\n    if (this._conf) {\n      configure.call(this, this._conf);\n    }\n  }\n\n  function configure(conf) {\n    if (conf) {\n      this._conf = conf;\n\n      conf.delimiter && (this.delimiter = conf.delimiter);\n\n      if(conf.maxListeners!==undefined){\n          this._maxListeners= conf.maxListeners;\n      }\n\n      conf.wildcard && (this.wildcard = conf.wildcard);\n      conf.newListener && (this._newListener = conf.newListener);\n      conf.removeListener && (this._removeListener = conf.removeListener);\n      conf.verboseMemoryLeak && (this.verboseMemoryLeak = conf.verboseMemoryLeak);\n      conf.ignoreErrors && (this.ignoreErrors = conf.ignoreErrors);\n\n      if (this.wildcard) {\n        this.listenerTree = {};\n      }\n    }\n  }\n\n  function logPossibleMemoryLeak(count, eventName) {\n    var errorMsg = '(node) warning: possible EventEmitter memory ' +\n        'leak detected. ' + count + ' listeners added. ' +\n        'Use emitter.setMaxListeners() to increase limit.';\n\n    if(this.verboseMemoryLeak){\n      errorMsg += ' Event name: ' + eventName + '.';\n    }\n\n    if(typeof process !== 'undefined' && process.emitWarning){\n      var e = new Error(errorMsg);\n      e.name = 'MaxListenersExceededWarning';\n      e.emitter = this;\n      e.count = count;\n      process.emitWarning(e);\n    } else {\n      console.error(errorMsg);\n\n      if (console.trace){\n        console.trace();\n      }\n    }\n  }\n\n  var toArray = function (a, b, c) {\n    var n = arguments.length;\n    switch (n) {\n      case 0:\n        return [];\n      case 1:\n        return [a];\n      case 2:\n        return [a, b];\n      case 3:\n        return [a, b, c];\n      default:\n        var arr = new Array(n);\n        while (n--) {\n          arr[n] = arguments[n];\n        }\n        return arr;\n    }\n  };\n\n  function toObject(keys, values) {\n    var obj = {};\n    var key;\n    var len = keys.length;\n    var valuesCount = values ? values.length : 0;\n    for (var i = 0; i < len; i++) {\n      key = keys[i];\n      obj[key] = i < valuesCount ? values[i] : undefined;\n    }\n    return obj;\n  }\n\n  function TargetObserver(emitter, target, options) {\n    this._emitter = emitter;\n    this._target = target;\n    this._listeners = {};\n    this._listenersCount = 0;\n\n    var on, off;\n\n    if (options.on || options.off) {\n      on = options.on;\n      off = options.off;\n    }\n\n    if (target.addEventListener) {\n      on = target.addEventListener;\n      off = target.removeEventListener;\n    } else if (target.addListener) {\n      on = target.addListener;\n      off = target.removeListener;\n    } else if (target.on) {\n      on = target.on;\n      off = target.off;\n    }\n\n    if (!on && !off) {\n      throw Error('target does not implement any known event API');\n    }\n\n    if (typeof on !== 'function') {\n      throw TypeError('on method must be a function');\n    }\n\n    if (typeof off !== 'function') {\n      throw TypeError('off method must be a function');\n    }\n\n    this._on = on;\n    this._off = off;\n\n    var _observers= emitter._observers;\n    if(_observers){\n      _observers.push(this);\n    }else{\n      emitter._observers= [this];\n    }\n  }\n\n  Object.assign(TargetObserver.prototype, {\n    subscribe: function(event, localEvent, reducer){\n      var observer= this;\n      var target= this._target;\n      var emitter= this._emitter;\n      var listeners= this._listeners;\n      var handler= function(){\n        var args= toArray.apply(null, arguments);\n        var eventObj= {\n          data: args,\n          name: localEvent,\n          original: event\n        };\n        if(reducer){\n          var result= reducer.call(target, eventObj);\n          if(result!==false){\n            emitter.emit.apply(emitter, [eventObj.name].concat(args))\n          }\n          return;\n        }\n        emitter.emit.apply(emitter, [localEvent].concat(args));\n      };\n\n\n      if(listeners[event]){\n        throw Error('Event \\'' + event + '\\' is already listening');\n      }\n\n      this._listenersCount++;\n\n      if(emitter._newListener && emitter._removeListener && !observer._onNewListener){\n\n        this._onNewListener = function (_event) {\n          if (_event === localEvent && listeners[event] === null) {\n            listeners[event] = handler;\n            observer._on.call(target, event, handler);\n          }\n        };\n\n        emitter.on('newListener', this._onNewListener);\n\n        this._onRemoveListener= function(_event){\n          if(_event === localEvent && !emitter.hasListeners(_event) && listeners[event]){\n            listeners[event]= null;\n            observer._off.call(target, event, handler);\n          }\n        };\n\n        listeners[event]= null;\n\n        emitter.on('removeListener', this._onRemoveListener);\n      }else{\n        listeners[event]= handler;\n        observer._on.call(target, event, handler);\n      }\n    },\n\n    unsubscribe: function(event){\n      var observer= this;\n      var listeners= this._listeners;\n      var emitter= this._emitter;\n      var handler;\n      var events;\n      var off= this._off;\n      var target= this._target;\n      var i;\n\n      if(event && typeof event!=='string'){\n        throw TypeError('event must be a string');\n      }\n\n      function clearRefs(){\n        if(observer._onNewListener){\n          emitter.off('newListener', observer._onNewListener);\n          emitter.off('removeListener', observer._onRemoveListener);\n          observer._onNewListener= null;\n          observer._onRemoveListener= null;\n        }\n        var index= findTargetIndex.call(emitter, observer);\n        emitter._observers.splice(index, 1);\n      }\n\n      if(event){\n        handler= listeners[event];\n        if(!handler) return;\n        off.call(target, event, handler);\n        delete listeners[event];\n        if(!--this._listenersCount){\n          clearRefs();\n        }\n      }else{\n        events= ownKeys(listeners);\n        i= events.length;\n        while(i-->0){\n          event= events[i];\n          off.call(target, event, listeners[event]);\n        }\n        this._listeners= {};\n        this._listenersCount= 0;\n        clearRefs();\n      }\n    }\n  });\n\n  function resolveOptions(options, schema, reducers, allowUnknown) {\n    var computedOptions = Object.assign({}, schema);\n\n    if (!options) return computedOptions;\n\n    if (typeof options !== 'object') {\n      throw TypeError('options must be an object')\n    }\n\n    var keys = Object.keys(options);\n    var length = keys.length;\n    var option, value;\n    var reducer;\n\n    function reject(reason) {\n      throw Error('Invalid \"' + option + '\" option value' + (reason ? '. Reason: ' + reason : ''))\n    }\n\n    for (var i = 0; i < length; i++) {\n      option = keys[i];\n      if (!allowUnknown && !hasOwnProperty.call(schema, option)) {\n        throw Error('Unknown \"' + option + '\" option');\n      }\n      value = options[option];\n      if (value !== undefined) {\n        reducer = reducers[option];\n        computedOptions[option] = reducer ? reducer(value, reject) : value;\n      }\n    }\n    return computedOptions;\n  }\n\n  function constructorReducer(value, reject) {\n    if (typeof value !== 'function' || !value.hasOwnProperty('prototype')) {\n      reject('value must be a constructor');\n    }\n    return value;\n  }\n\n  function makeTypeReducer(types) {\n    var message= 'value must be type of ' + types.join('|');\n    var len= types.length;\n    var firstType= types[0];\n    var secondType= types[1];\n\n    if (len === 1) {\n      return function (v, reject) {\n        if (typeof v === firstType) {\n          return v;\n        }\n        reject(message);\n      }\n    }\n\n    if (len === 2) {\n      return function (v, reject) {\n        var kind= typeof v;\n        if (kind === firstType || kind === secondType) return v;\n        reject(message);\n      }\n    }\n\n    return function (v, reject) {\n      var kind = typeof v;\n      var i = len;\n      while (i-- > 0) {\n        if (kind === types[i]) return v;\n      }\n      reject(message);\n    }\n  }\n\n  var functionReducer= makeTypeReducer(['function']);\n\n  var objectFunctionReducer= makeTypeReducer(['object', 'function']);\n\n  function makeCancelablePromise(Promise, executor, options) {\n    var isCancelable;\n    var callbacks;\n    var timer= 0;\n    var subscriptionClosed;\n\n    var promise = new Promise(function (resolve, reject, onCancel) {\n      options= resolveOptions(options, {\n        timeout: 0,\n        overload: false\n      }, {\n        timeout: function(value, reject){\n          value*= 1;\n          if (typeof value !== 'number' || value < 0 || !Number.isFinite(value)) {\n            reject('timeout must be a positive number');\n          }\n          return value;\n        }\n      });\n\n      isCancelable = !options.overload && typeof Promise.prototype.cancel === 'function' && typeof onCancel === 'function';\n\n      function cleanup() {\n        if (callbacks) {\n          callbacks = null;\n        }\n        if (timer) {\n          clearTimeout(timer);\n          timer = 0;\n        }\n      }\n\n      var _resolve= function(value){\n        cleanup();\n        resolve(value);\n      };\n\n      var _reject= function(err){\n        cleanup();\n        reject(err);\n      };\n\n      if (isCancelable) {\n        executor(_resolve, _reject, onCancel);\n      } else {\n        callbacks = [function(reason){\n          _reject(reason || Error('canceled'));\n        }];\n        executor(_resolve, _reject, function (cb) {\n          if (subscriptionClosed) {\n            throw Error('Unable to subscribe on cancel event asynchronously')\n          }\n          if (typeof cb !== 'function') {\n            throw TypeError('onCancel callback must be a function');\n          }\n          callbacks.push(cb);\n        });\n        subscriptionClosed= true;\n      }\n\n      if (options.timeout > 0) {\n        timer= setTimeout(function(){\n          var reason= Error('timeout');\n          reason.code = 'ETIMEDOUT'\n          timer= 0;\n          promise.cancel(reason);\n          reject(reason);\n        }, options.timeout);\n      }\n    });\n\n    if (!isCancelable) {\n      promise.cancel = function (reason) {\n        if (!callbacks) {\n          return;\n        }\n        var length = callbacks.length;\n        for (var i = 1; i < length; i++) {\n          callbacks[i](reason);\n        }\n        // internal callback to reject the promise\n        callbacks[0](reason);\n        callbacks = null;\n      };\n    }\n\n    return promise;\n  }\n\n  function findTargetIndex(observer) {\n    var observers = this._observers;\n    if(!observers){\n      return -1;\n    }\n    var len = observers.length;\n    for (var i = 0; i < len; i++) {\n      if (observers[i]._target === observer) return i;\n    }\n    return -1;\n  }\n\n  // Attention, function return type now is array, always !\n  // It has zero elements if no any matches found and one or more\n  // elements (leafs) if there are matches\n  //\n  function searchListenerTree(handlers, type, tree, i, typeLength) {\n    if (!tree) {\n      return null;\n    }\n\n    if (i === 0) {\n      var kind = typeof type;\n      if (kind === 'string') {\n        var ns, n, l = 0, j = 0, delimiter = this.delimiter, dl = delimiter.length;\n        if ((n = type.indexOf(delimiter)) !== -1) {\n          ns = new Array(5);\n          do {\n            ns[l++] = type.slice(j, n);\n            j = n + dl;\n          } while ((n = type.indexOf(delimiter, j)) !== -1);\n\n          ns[l++] = type.slice(j);\n          type = ns;\n          typeLength = l;\n        } else {\n          type = [type];\n          typeLength = 1;\n        }\n      } else if (kind === 'object') {\n        typeLength = type.length;\n      } else {\n        type = [type];\n        typeLength = 1;\n      }\n    }\n\n    var listeners= null, branch, xTree, xxTree, isolatedBranch, endReached, currentType = type[i],\n        nextType = type[i + 1], branches, _listeners;\n\n    if (i === typeLength) {\n      //\n      // If at the end of the event(s) list and the tree has listeners\n      // invoke those listeners.\n      //\n\n      if(tree._listeners) {\n        if (typeof tree._listeners === 'function') {\n          handlers && handlers.push(tree._listeners);\n          listeners = [tree];\n        } else {\n          handlers && handlers.push.apply(handlers, tree._listeners);\n          listeners = [tree];\n        }\n      }\n    } else {\n\n      if (currentType === '*') {\n        //\n        // If the event emitted is '*' at this part\n        // or there is a concrete match at this patch\n        //\n        branches = ownKeys(tree);\n        n = branches.length;\n        while (n-- > 0) {\n          branch = branches[n];\n          if (branch !== '_listeners') {\n            _listeners = searchListenerTree(handlers, type, tree[branch], i + 1, typeLength);\n            if (_listeners) {\n              if (listeners) {\n                listeners.push.apply(listeners, _listeners);\n              } else {\n                listeners = _listeners;\n              }\n            }\n          }\n        }\n        return listeners;\n      } else if (currentType === '**') {\n        endReached = (i + 1 === typeLength || (i + 2 === typeLength && nextType === '*'));\n        if (endReached && tree._listeners) {\n          // The next element has a _listeners, add it to the handlers.\n          listeners = searchListenerTree(handlers, type, tree, typeLength, typeLength);\n        }\n\n        branches = ownKeys(tree);\n        n = branches.length;\n        while (n-- > 0) {\n          branch = branches[n];\n          if (branch !== '_listeners') {\n            if (branch === '*' || branch === '**') {\n              if (tree[branch]._listeners && !endReached) {\n                _listeners = searchListenerTree(handlers, type, tree[branch], typeLength, typeLength);\n                if (_listeners) {\n                  if (listeners) {\n                    listeners.push.apply(listeners, _listeners);\n                  } else {\n                    listeners = _listeners;\n                  }\n                }\n              }\n              _listeners = searchListenerTree(handlers, type, tree[branch], i, typeLength);\n            } else if (branch === nextType) {\n              _listeners = searchListenerTree(handlers, type, tree[branch], i + 2, typeLength);\n            } else {\n              // No match on this one, shift into the tree but not in the type array.\n              _listeners = searchListenerTree(handlers, type, tree[branch], i, typeLength);\n            }\n            if (_listeners) {\n              if (listeners) {\n                listeners.push.apply(listeners, _listeners);\n              } else {\n                listeners = _listeners;\n              }\n            }\n          }\n        }\n        return listeners;\n      } else if (tree[currentType]) {\n        listeners = searchListenerTree(handlers, type, tree[currentType], i + 1, typeLength);\n      }\n    }\n\n      xTree = tree['*'];\n    if (xTree) {\n      //\n      // If the listener tree will allow any match for this part,\n      // then recursively explore all branches of the tree\n      //\n      searchListenerTree(handlers, type, xTree, i + 1, typeLength);\n    }\n\n    xxTree = tree['**'];\n    if (xxTree) {\n      if (i < typeLength) {\n        if (xxTree._listeners) {\n          // If we have a listener on a '**', it will catch all, so add its handler.\n          searchListenerTree(handlers, type, xxTree, typeLength, typeLength);\n        }\n\n        // Build arrays of matching next branches and others.\n        branches= ownKeys(xxTree);\n        n= branches.length;\n        while(n-->0){\n          branch= branches[n];\n          if (branch !== '_listeners') {\n            if (branch === nextType) {\n              // We know the next element will match, so jump twice.\n              searchListenerTree(handlers, type, xxTree[branch], i + 2, typeLength);\n            } else if (branch === currentType) {\n              // Current node matches, move into the tree.\n              searchListenerTree(handlers, type, xxTree[branch], i + 1, typeLength);\n            } else {\n              isolatedBranch = {};\n              isolatedBranch[branch] = xxTree[branch];\n              searchListenerTree(handlers, type, {'**': isolatedBranch}, i + 1, typeLength);\n            }\n          }\n        }\n      } else if (xxTree._listeners) {\n        // We have reached the end and still on a '**'\n        searchListenerTree(handlers, type, xxTree, typeLength, typeLength);\n      } else if (xxTree['*'] && xxTree['*']._listeners) {\n        searchListenerTree(handlers, type, xxTree['*'], typeLength, typeLength);\n      }\n    }\n\n    return listeners;\n  }\n\n  function growListenerTree(type, listener, prepend) {\n    var len = 0, j = 0, i, delimiter = this.delimiter, dl= delimiter.length, ns;\n\n    if(typeof type==='string') {\n      if ((i = type.indexOf(delimiter)) !== -1) {\n        ns = new Array(5);\n        do {\n          ns[len++] = type.slice(j, i);\n          j = i + dl;\n        } while ((i = type.indexOf(delimiter, j)) !== -1);\n\n        ns[len++] = type.slice(j);\n      }else{\n        ns= [type];\n        len= 1;\n      }\n    }else{\n      ns= type;\n      len= type.length;\n    }\n\n    //\n    // Looks for two consecutive '**', if so, don't add the event at all.\n    //\n    if (len > 1) {\n      for (i = 0; i + 1 < len; i++) {\n        if (ns[i] === '**' && ns[i + 1] === '**') {\n          return;\n        }\n      }\n    }\n\n\n\n    var tree = this.listenerTree, name;\n\n    for (i = 0; i < len; i++) {\n      name = ns[i];\n\n      tree = tree[name] || (tree[name] = {});\n\n      if (i === len - 1) {\n        if (!tree._listeners) {\n          tree._listeners = listener;\n        } else {\n          if (typeof tree._listeners === 'function') {\n            tree._listeners = [tree._listeners];\n          }\n\n          if (prepend) {\n            tree._listeners.unshift(listener);\n          } else {\n            tree._listeners.push(listener);\n          }\n\n          if (\n              !tree._listeners.warned &&\n              this._maxListeners > 0 &&\n              tree._listeners.length > this._maxListeners\n          ) {\n            tree._listeners.warned = true;\n            logPossibleMemoryLeak.call(this, tree._listeners.length, name);\n          }\n        }\n        return true;\n      }\n    }\n\n    return true;\n  }\n\n  function collectTreeEvents(tree, events, root, asArray){\n     var branches= ownKeys(tree);\n     var i= branches.length;\n     var branch, branchName, path;\n     var hasListeners= tree['_listeners'];\n     var isArrayPath;\n\n     while(i-->0){\n         branchName= branches[i];\n\n         branch= tree[branchName];\n\n         if(branchName==='_listeners'){\n             path= root;\n         }else {\n             path = root ? root.concat(branchName) : [branchName];\n         }\n\n         isArrayPath= asArray || typeof branchName==='symbol';\n\n         hasListeners && events.push(isArrayPath? path : path.join(this.delimiter));\n\n         if(typeof branch==='object'){\n             collectTreeEvents.call(this, branch, events, path, isArrayPath);\n         }\n     }\n\n     return events;\n  }\n\n  function recursivelyGarbageCollect(root) {\n    var keys = ownKeys(root);\n    var i= keys.length;\n    var obj, key, flag;\n    while(i-->0){\n      key = keys[i];\n      obj = root[key];\n\n      if(obj){\n          flag= true;\n          if(key !== '_listeners' && !recursivelyGarbageCollect(obj)){\n             delete root[key];\n          }\n      }\n    }\n\n    return flag;\n  }\n\n  function Listener(emitter, event, listener){\n    this.emitter= emitter;\n    this.event= event;\n    this.listener= listener;\n  }\n\n  Listener.prototype.off= function(){\n    this.emitter.off(this.event, this.listener);\n    return this;\n  };\n\n  function setupListener(event, listener, options){\n      if (options === true) {\n        promisify = true;\n      } else if (options === false) {\n        async = true;\n      } else {\n        if (!options || typeof options !== 'object') {\n          throw TypeError('options should be an object or true');\n        }\n        var async = options.async;\n        var promisify = options.promisify;\n        var nextTick = options.nextTick;\n        var objectify = options.objectify;\n      }\n\n      if (async || nextTick || promisify) {\n        var _listener = listener;\n        var _origin = listener._origin || listener;\n\n        if (nextTick && !nextTickSupported) {\n          throw Error('process.nextTick is not supported');\n        }\n\n        if (promisify === undefined) {\n          promisify = listener.constructor.name === 'AsyncFunction';\n        }\n\n        listener = function () {\n          var args = arguments;\n          var context = this;\n          var event = this.event;\n\n          return promisify ? (nextTick ? Promise.resolve() : new Promise(function (resolve) {\n            _setImmediate(resolve);\n          }).then(function () {\n            context.event = event;\n            return _listener.apply(context, args)\n          })) : (nextTick ? process.nextTick : _setImmediate)(function () {\n            context.event = event;\n            _listener.apply(context, args)\n          });\n        };\n\n        listener._async = true;\n        listener._origin = _origin;\n      }\n\n    return [listener, objectify? new Listener(this, event, listener): this];\n  }\n\n  function EventEmitter(conf) {\n    this._events = {};\n    this._newListener = false;\n    this._removeListener = false;\n    this.verboseMemoryLeak = false;\n    configure.call(this, conf);\n  }\n\n  EventEmitter.EventEmitter2 = EventEmitter; // backwards compatibility for exporting EventEmitter property\n\n  EventEmitter.prototype.listenTo= function(target, events, options){\n    if(typeof target!=='object'){\n      throw TypeError('target musts be an object');\n    }\n\n    var emitter= this;\n\n    options = resolveOptions(options, {\n      on: undefined,\n      off: undefined,\n      reducers: undefined\n    }, {\n      on: functionReducer,\n      off: functionReducer,\n      reducers: objectFunctionReducer\n    });\n\n    function listen(events){\n      if(typeof events!=='object'){\n        throw TypeError('events must be an object');\n      }\n\n      var reducers= options.reducers;\n      var index= findTargetIndex.call(emitter, target);\n      var observer;\n\n      if(index===-1){\n        observer= new TargetObserver(emitter, target, options);\n      }else{\n        observer= emitter._observers[index];\n      }\n\n      var keys= ownKeys(events);\n      var len= keys.length;\n      var event;\n      var isSingleReducer= typeof reducers==='function';\n\n      for(var i=0; i<len; i++){\n        event= keys[i];\n        observer.subscribe(\n            event,\n            events[event] || event,\n            isSingleReducer ? reducers : reducers && reducers[event]\n        );\n      }\n    }\n\n    isArray(events)?\n        listen(toObject(events)) :\n        (typeof events==='string'? listen(toObject(events.split(/\\s+/))): listen(events));\n\n    return this;\n  };\n\n  EventEmitter.prototype.stopListeningTo = function (target, event) {\n    var observers = this._observers;\n\n    if(!observers){\n      return false;\n    }\n\n    var i = observers.length;\n    var observer;\n    var matched= false;\n\n    if(target && typeof target!=='object'){\n      throw TypeError('target should be an object');\n    }\n\n    while (i-- > 0) {\n      observer = observers[i];\n      if (!target || observer._target === target) {\n        observer.unsubscribe(event);\n        matched= true;\n      }\n    }\n\n    return matched;\n  };\n\n  // By default EventEmitters will print a warning if more than\n  // 10 listeners are added to it. This is a useful default which\n  // helps finding memory leaks.\n  //\n  // Obviously not all Emitters should be limited to 10. This function allows\n  // that to be increased. Set to zero for unlimited.\n\n  EventEmitter.prototype.delimiter = '.';\n\n  EventEmitter.prototype.setMaxListeners = function(n) {\n    if (n !== undefined) {\n      this._maxListeners = n;\n      if (!this._conf) this._conf = {};\n      this._conf.maxListeners = n;\n    }\n  };\n\n  EventEmitter.prototype.getMaxListeners = function() {\n    return this._maxListeners;\n  };\n\n  EventEmitter.prototype.event = '';\n\n  EventEmitter.prototype.once = function(event, fn, options) {\n    return this._once(event, fn, false, options);\n  };\n\n  EventEmitter.prototype.prependOnceListener = function(event, fn, options) {\n    return this._once(event, fn, true, options);\n  };\n\n  EventEmitter.prototype._once = function(event, fn, prepend, options) {\n    return this._many(event, 1, fn, prepend, options);\n  };\n\n  EventEmitter.prototype.many = function(event, ttl, fn, options) {\n    return this._many(event, ttl, fn, false, options);\n  };\n\n  EventEmitter.prototype.prependMany = function(event, ttl, fn, options) {\n    return this._many(event, ttl, fn, true, options);\n  };\n\n  EventEmitter.prototype._many = function(event, ttl, fn, prepend, options) {\n    var self = this;\n\n    if (typeof fn !== 'function') {\n      throw new Error('many only accepts instances of Function');\n    }\n\n    function listener() {\n      if (--ttl === 0) {\n        self.off(event, listener);\n      }\n      return fn.apply(this, arguments);\n    }\n\n    listener._origin = fn;\n\n    return this._on(event, listener, prepend, options);\n  };\n\n  EventEmitter.prototype.emit = function() {\n    if (!this._events && !this._all) {\n      return false;\n    }\n\n    this._events || init.call(this);\n\n    var type = arguments[0], ns, wildcard= this.wildcard;\n    var args,l,i,j, containsSymbol;\n\n    if (type === 'newListener' && !this._newListener) {\n      if (!this._events.newListener) {\n        return false;\n      }\n    }\n\n    if (wildcard) {\n      ns= type;\n      if(type!=='newListener' && type!=='removeListener'){\n        if (typeof type === 'object') {\n          l = type.length;\n          if (symbolsSupported) {\n            for (i = 0; i < l; i++) {\n              if (typeof type[i] === 'symbol') {\n                containsSymbol = true;\n                break;\n              }\n            }\n          }\n          if (!containsSymbol) {\n            type = type.join(this.delimiter);\n          }\n        }\n      }\n    }\n\n    var al = arguments.length;\n    var handler;\n\n    if (this._all && this._all.length) {\n      handler = this._all.slice();\n\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n        case 1:\n          handler[i].call(this, type);\n          break;\n        case 2:\n          handler[i].call(this, type, arguments[1]);\n          break;\n        case 3:\n          handler[i].call(this, type, arguments[1], arguments[2]);\n          break;\n        default:\n          handler[i].apply(this, arguments);\n        }\n      }\n    }\n\n    if (wildcard) {\n      handler = [];\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0, l);\n    } else {\n      handler = this._events[type];\n      if (typeof handler === 'function') {\n        this.event = type;\n        switch (al) {\n        case 1:\n          handler.call(this);\n          break;\n        case 2:\n          handler.call(this, arguments[1]);\n          break;\n        case 3:\n          handler.call(this, arguments[1], arguments[2]);\n          break;\n        default:\n          args = new Array(al - 1);\n          for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n          handler.apply(this, args);\n        }\n        return true;\n      } else if (handler) {\n        // need to make copy of handlers because list can change in the middle\n        // of emit call\n        handler = handler.slice();\n      }\n    }\n\n    if (handler && handler.length) {\n      if (al > 3) {\n        args = new Array(al - 1);\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n      }\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n        case 1:\n          handler[i].call(this);\n          break;\n        case 2:\n          handler[i].call(this, arguments[1]);\n          break;\n        case 3:\n          handler[i].call(this, arguments[1], arguments[2]);\n          break;\n        default:\n          handler[i].apply(this, args);\n        }\n      }\n      return true;\n    } else if (!this.ignoreErrors && !this._all && type === 'error') {\n      if (arguments[1] instanceof Error) {\n        throw arguments[1]; // Unhandled 'error' event\n      } else {\n        throw new Error(\"Uncaught, unspecified 'error' event.\");\n      }\n    }\n\n    return !!this._all;\n  };\n\n  EventEmitter.prototype.emitAsync = function() {\n    if (!this._events && !this._all) {\n      return false;\n    }\n\n    this._events || init.call(this);\n\n    var type = arguments[0], wildcard= this.wildcard, ns, containsSymbol;\n    var args,l,i,j;\n\n    if (type === 'newListener' && !this._newListener) {\n        if (!this._events.newListener) { return Promise.resolve([false]); }\n    }\n\n    if (wildcard) {\n      ns= type;\n      if(type!=='newListener' && type!=='removeListener'){\n        if (typeof type === 'object') {\n          l = type.length;\n          if (symbolsSupported) {\n            for (i = 0; i < l; i++) {\n              if (typeof type[i] === 'symbol') {\n                containsSymbol = true;\n                break;\n              }\n            }\n          }\n          if (!containsSymbol) {\n            type = type.join(this.delimiter);\n          }\n        }\n      }\n    }\n\n    var promises= [];\n\n    var al = arguments.length;\n    var handler;\n\n    if (this._all) {\n      for (i = 0, l = this._all.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n        case 1:\n          promises.push(this._all[i].call(this, type));\n          break;\n        case 2:\n          promises.push(this._all[i].call(this, type, arguments[1]));\n          break;\n        case 3:\n          promises.push(this._all[i].call(this, type, arguments[1], arguments[2]));\n          break;\n        default:\n          promises.push(this._all[i].apply(this, arguments));\n        }\n      }\n    }\n\n    if (wildcard) {\n      handler = [];\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n    } else {\n      handler = this._events[type];\n    }\n\n    if (typeof handler === 'function') {\n      this.event = type;\n      switch (al) {\n      case 1:\n        promises.push(handler.call(this));\n        break;\n      case 2:\n        promises.push(handler.call(this, arguments[1]));\n        break;\n      case 3:\n        promises.push(handler.call(this, arguments[1], arguments[2]));\n        break;\n      default:\n        args = new Array(al - 1);\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n        promises.push(handler.apply(this, args));\n      }\n    } else if (handler && handler.length) {\n      handler = handler.slice();\n      if (al > 3) {\n        args = new Array(al - 1);\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n      }\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n        case 1:\n          promises.push(handler[i].call(this));\n          break;\n        case 2:\n          promises.push(handler[i].call(this, arguments[1]));\n          break;\n        case 3:\n          promises.push(handler[i].call(this, arguments[1], arguments[2]));\n          break;\n        default:\n          promises.push(handler[i].apply(this, args));\n        }\n      }\n    } else if (!this.ignoreErrors && !this._all && type === 'error') {\n      if (arguments[1] instanceof Error) {\n        return Promise.reject(arguments[1]); // Unhandled 'error' event\n      } else {\n        return Promise.reject(\"Uncaught, unspecified 'error' event.\");\n      }\n    }\n\n    return Promise.all(promises);\n  };\n\n  EventEmitter.prototype.on = function(type, listener, options) {\n    return this._on(type, listener, false, options);\n  };\n\n  EventEmitter.prototype.prependListener = function(type, listener, options) {\n    return this._on(type, listener, true, options);\n  };\n\n  EventEmitter.prototype.onAny = function(fn) {\n    return this._onAny(fn, false);\n  };\n\n  EventEmitter.prototype.prependAny = function(fn) {\n    return this._onAny(fn, true);\n  };\n\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n  EventEmitter.prototype._onAny = function(fn, prepend){\n    if (typeof fn !== 'function') {\n      throw new Error('onAny only accepts instances of Function');\n    }\n\n    if (!this._all) {\n      this._all = [];\n    }\n\n    // Add the function to the event listener collection.\n    if(prepend){\n      this._all.unshift(fn);\n    }else{\n      this._all.push(fn);\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype._on = function(type, listener, prepend, options) {\n    if (typeof type === 'function') {\n      this._onAny(type, listener);\n      return this;\n    }\n\n    if (typeof listener !== 'function') {\n      throw new Error('on only accepts instances of Function');\n    }\n    this._events || init.call(this);\n\n    var returnValue= this, temp;\n\n    if (options !== undefined) {\n      temp = setupListener.call(this, type, listener, options);\n      listener = temp[0];\n      returnValue = temp[1];\n    }\n\n    // To avoid recursion in the case that type == \"newListeners\"! Before\n    // adding it to the listeners, first emit \"newListeners\".\n    if (this._newListener) {\n      this.emit('newListener', type, listener);\n    }\n\n    if (this.wildcard) {\n      growListenerTree.call(this, type, listener, prepend);\n      return returnValue;\n    }\n\n    if (!this._events[type]) {\n      // Optimize the case of one listener. Don't need the extra array object.\n      this._events[type] = listener;\n    } else {\n      if (typeof this._events[type] === 'function') {\n        // Change to array.\n        this._events[type] = [this._events[type]];\n      }\n\n      // If we've already got an array, just add\n      if(prepend){\n        this._events[type].unshift(listener);\n      }else{\n        this._events[type].push(listener);\n      }\n\n      // Check for listener leak\n      if (\n        !this._events[type].warned &&\n        this._maxListeners > 0 &&\n        this._events[type].length > this._maxListeners\n      ) {\n        this._events[type].warned = true;\n        logPossibleMemoryLeak.call(this, this._events[type].length, type);\n      }\n    }\n\n    return returnValue;\n  };\n\n  EventEmitter.prototype.off = function(type, listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('removeListener only takes instances of Function');\n    }\n\n    var handlers,leafs=[];\n\n    if(this.wildcard) {\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n      if(!leafs) return this;\n    } else {\n      // does not use listeners(), so no side effect of creating _events[type]\n      if (!this._events[type]) return this;\n      handlers = this._events[type];\n      leafs.push({_listeners:handlers});\n    }\n\n    for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n      var leaf = leafs[iLeaf];\n      handlers = leaf._listeners;\n      if (isArray(handlers)) {\n\n        var position = -1;\n\n        for (var i = 0, length = handlers.length; i < length; i++) {\n          if (handlers[i] === listener ||\n            (handlers[i].listener && handlers[i].listener === listener) ||\n            (handlers[i]._origin && handlers[i]._origin === listener)) {\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0) {\n          continue;\n        }\n\n        if(this.wildcard) {\n          leaf._listeners.splice(position, 1);\n        }\n        else {\n          this._events[type].splice(position, 1);\n        }\n\n        if (handlers.length === 0) {\n          if(this.wildcard) {\n            delete leaf._listeners;\n          }\n          else {\n            delete this._events[type];\n          }\n        }\n        if (this._removeListener)\n          this.emit(\"removeListener\", type, listener);\n\n        return this;\n      }\n      else if (handlers === listener ||\n        (handlers.listener && handlers.listener === listener) ||\n        (handlers._origin && handlers._origin === listener)) {\n        if(this.wildcard) {\n          delete leaf._listeners;\n        }\n        else {\n          delete this._events[type];\n        }\n        if (this._removeListener)\n          this.emit(\"removeListener\", type, listener);\n      }\n    }\n\n    this.listenerTree && recursivelyGarbageCollect(this.listenerTree);\n\n    return this;\n  };\n\n  EventEmitter.prototype.offAny = function(fn) {\n    var i = 0, l = 0, fns;\n    if (fn && this._all && this._all.length > 0) {\n      fns = this._all;\n      for(i = 0, l = fns.length; i < l; i++) {\n        if(fn === fns[i]) {\n          fns.splice(i, 1);\n          if (this._removeListener)\n            this.emit(\"removeListenerAny\", fn);\n          return this;\n        }\n      }\n    } else {\n      fns = this._all;\n      if (this._removeListener) {\n        for(i = 0, l = fns.length; i < l; i++)\n          this.emit(\"removeListenerAny\", fns[i]);\n      }\n      this._all = [];\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\n  EventEmitter.prototype.removeAllListeners = function (type) {\n    if (type === undefined) {\n      !this._events || init.call(this);\n      return this;\n    }\n\n    if (this.wildcard) {\n      var leafs = searchListenerTree.call(this, null, type, this.listenerTree, 0), leaf, i;\n      if (!leafs) return this;\n      for (i = 0; i < leafs.length; i++) {\n        leaf = leafs[i];\n        leaf._listeners = null;\n      }\n      this.listenerTree && recursivelyGarbageCollect(this.listenerTree);\n    } else if (this._events) {\n      this._events[type] = null;\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.listeners = function (type) {\n    var _events = this._events;\n    var keys, listeners, allListeners;\n    var i;\n    var listenerTree;\n\n    if (type === undefined) {\n      if (this.wildcard) {\n        throw Error('event name required for wildcard emitter');\n      }\n\n      if (!_events) {\n        return [];\n      }\n\n      keys = ownKeys(_events);\n      i = keys.length;\n      allListeners = [];\n      while (i-- > 0) {\n        listeners = _events[keys[i]];\n        if (typeof listeners === 'function') {\n          allListeners.push(listeners);\n        } else {\n          allListeners.push.apply(allListeners, listeners);\n        }\n      }\n      return allListeners;\n    } else {\n      if (this.wildcard) {\n        listenerTree= this.listenerTree;\n        if(!listenerTree) return [];\n        var handlers = [];\n        var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n        searchListenerTree.call(this, handlers, ns, listenerTree, 0);\n        return handlers;\n      }\n\n      if (!_events) {\n        return [];\n      }\n\n      listeners = _events[type];\n\n      if (!listeners) {\n        return [];\n      }\n      return typeof listeners === 'function' ? [listeners] : listeners;\n    }\n  };\n\n  EventEmitter.prototype.eventNames = function(nsAsArray){\n    var _events= this._events;\n    return this.wildcard? collectTreeEvents.call(this, this.listenerTree, [], null, nsAsArray) : (_events? ownKeys(_events) : []);\n  };\n\n  EventEmitter.prototype.listenerCount = function(type) {\n    return this.listeners(type).length;\n  };\n\n  EventEmitter.prototype.hasListeners = function (type) {\n    if (this.wildcard) {\n      var handlers = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n      return handlers.length > 0;\n    }\n\n    var _events = this._events;\n    var _all = this._all;\n\n    return !!(_all && _all.length || _events && (type === undefined ? ownKeys(_events).length : _events[type]));\n  };\n\n  EventEmitter.prototype.listenersAny = function() {\n\n    if(this._all) {\n      return this._all;\n    }\n    else {\n      return [];\n    }\n\n  };\n\n  EventEmitter.prototype.waitFor = function (event, options) {\n    var self = this;\n    var type = typeof options;\n    if (type === 'number') {\n      options = {timeout: options};\n    } else if (type === 'function') {\n      options = {filter: options};\n    }\n\n    options= resolveOptions(options, {\n      timeout: 0,\n      filter: undefined,\n      handleError: false,\n      Promise: Promise,\n      overload: false\n    }, {\n      filter: functionReducer,\n      Promise: constructorReducer\n    });\n\n    return makeCancelablePromise(options.Promise, function (resolve, reject, onCancel) {\n      function listener() {\n        var filter= options.filter;\n        if (filter && !filter.apply(self, arguments)) {\n          return;\n        }\n        self.off(event, listener);\n        if (options.handleError) {\n          var err = arguments[0];\n          err ? reject(err) : resolve(toArray.apply(null, arguments).slice(1));\n        } else {\n          resolve(toArray.apply(null, arguments));\n        }\n      }\n\n      onCancel(function(){\n        self.off(event, listener);\n      });\n\n      self._on(event, listener, false);\n    }, {\n      timeout: options.timeout,\n      overload: options.overload\n    })\n  };\n\n  function once(emitter, name, options) {\n    options= resolveOptions(options, {\n      Promise: Promise,\n      timeout: 0,\n      overload: false\n    }, {\n      Promise: constructorReducer\n    });\n\n    var _Promise= options.Promise;\n\n    return makeCancelablePromise(_Promise, function(resolve, reject, onCancel){\n      var handler;\n      if (typeof emitter.addEventListener === 'function') {\n        handler=  function () {\n          resolve(toArray.apply(null, arguments));\n        };\n\n        onCancel(function(){\n          emitter.removeEventListener(name, handler);\n        });\n\n        emitter.addEventListener(\n            name,\n            handler,\n            {once: true}\n        );\n        return;\n      }\n\n      var eventListener = function(){\n        errorListener && emitter.removeListener('error', errorListener);\n        resolve(toArray.apply(null, arguments));\n      };\n\n      var errorListener;\n\n      if (name !== 'error') {\n        errorListener = function (err){\n          emitter.removeListener(name, eventListener);\n          reject(err);\n        };\n\n        emitter.once('error', errorListener);\n      }\n\n      onCancel(function(){\n        errorListener && emitter.removeListener('error', errorListener);\n        emitter.removeListener(name, eventListener);\n      });\n\n      emitter.once(name, eventListener);\n    }, {\n      timeout: options.timeout,\n      overload: options.overload\n    });\n  }\n\n  var prototype= EventEmitter.prototype;\n\n  Object.defineProperties(EventEmitter, {\n    defaultMaxListeners: {\n      get: function () {\n        return prototype._maxListeners;\n      },\n      set: function (n) {\n        if (typeof n !== 'number' || n < 0 || Number.isNaN(n)) {\n          throw TypeError('n must be a non-negative number')\n        }\n        prototype._maxListeners = n;\n      },\n      enumerable: true\n    },\n    once: {\n      value: once,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  Object.defineProperties(prototype, {\n      _maxListeners: {\n          value: defaultMaxListeners,\n          writable: true,\n          configurable: true\n      },\n      _observers: {value: null, writable: true, configurable: true}\n  });\n\n  if (typeof define === 'function' && define.amd) {\n     // AMD. Register as an anonymous module.\n    define(function() {\n      return EventEmitter;\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = EventEmitter;\n  }\n  else {\n    // global for any kind of environment.\n    var _global= new Function('','return this')();\n    _global.EventEmitter2 = EventEmitter;\n  }\n}();\n","import { ETHAuthProof as AuthETHAuthProof } from '@0xsequence/auth'\nimport { commons } from '@0xsequence/core'\nimport {\n  ChainIdLike,\n  EIP1193Provider,\n  JsonRpcRequest,\n  JsonRpcResponse,\n  NetworkConfig,\n  JsonRpcErrorPayload\n} from '@0xsequence/network'\nimport { TypedData } from '@0xsequence/utils'\n\nexport interface ProviderTransport extends EIP1193Provider, ProviderMessageTransport, ProviderMessageRequestHandler {\n  register(): void\n  unregister(): void\n\n  openWallet(path?: string, intent?: OpenWalletIntent, networkId?: string | number): void\n  closeWallet(): void\n\n  isOpened(): boolean\n  isConnected(): boolean\n\n  on<K extends keyof ProviderEventTypes>(event: K, fn: ProviderEventTypes[K]): void\n  once<K extends keyof ProviderEventTypes>(event: K, fn: ProviderEventTypes[K]): void\n  emit<K extends keyof ProviderEventTypes>(event: K, ...args: Parameters<ProviderEventTypes[K]>): boolean\n\n  waitUntilOpened(): Promise<WalletSession | undefined>\n  waitUntilConnected(): Promise<ConnectDetails>\n}\n\nexport function isProviderTransport(transport: any): transport is ProviderTransport {\n  return (\n    transport &&\n    typeof transport === 'object' &&\n    typeof transport.register === 'function' &&\n    typeof transport.unregister === 'function' &&\n    typeof transport.openWallet === 'function' &&\n    typeof transport.closeWallet === 'function' &&\n    typeof transport.isOpened === 'function' &&\n    typeof transport.isConnected === 'function' &&\n    typeof transport.on === 'function'\n  )\n}\n\nexport interface WalletTransport extends EIP1193Provider, ProviderMessageTransport, ProviderMessageRequestHandler {\n  register(): void\n  unregister(): void\n\n  notifyOpen(openInfo: { chainId?: string; sessionId?: string; session?: WalletSession; error?: string }): void\n  notifyClose(error?: ProviderRpcError): void\n\n  notifyConnect(connectDetails: ConnectDetails): void\n  notifyAccountsChanged(accounts: string[]): void\n  notifyChainChanged(chainIdHex: string): void\n  notifyNetworks(networks: NetworkConfig[]): void\n}\n\nexport interface ProviderMessage<T> {\n  idx: number // message id number\n  type: string // message type\n  data: T // the ethereum json-rpc payload\n  chainId?: number // chain id which the message is intended\n  origin?: string // origin of the message\n  clientVersion: string // client version of the message\n}\n\nexport type ProviderMessageRequest = ProviderMessage<JsonRpcRequest>\n\n// Older versions of sequence.js will require a JsonRpcResponse result type, but newer versions use raw EIP1193 results\nexport type ProviderMessageResponse = ProviderMessage<JsonRpcResponse | any>\n\n// ProviderMessageCallback is used to respond to ProviderMessage requests. The error\n// argument is for exceptions during the execution, and response is the response payload\n// which may contain the result or an error payload from the wallet.\nexport type ProviderMessageResponseCallback = (error?: ProviderRpcError, response?: ProviderMessageResponse) => void\n\nexport type ProviderRpcError = JsonRpcErrorPayload\n\nexport interface ProviderMessageRequestHandler {\n  // sendMessageRequest sends a ProviderMessageRequest over the wire to the wallet.\n  // This method is similar to `sendMessage`, but it expects a response to this message.\n  sendMessageRequest(message: ProviderMessageRequest): Promise<ProviderMessageResponse>\n}\n\nexport interface ProviderMessageTransport {\n  // handleMessage will handle a message received from the remote wallet\n  handleMessage(message: ProviderMessage<any>): void\n\n  // sendMessage will send the provider message over the wire\n  sendMessage(message: ProviderMessage<any>): void\n}\n\nexport type WindowSessionParam = 'sid' | 'net' | 'intent'\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nexport interface WindowSessionParams extends URLSearchParams {\n  get(name: WindowSessionParam): string | null\n  set(name: WindowSessionParam, value: string): void\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nexport class WindowSessionParams extends URLSearchParams {\n  static new(init?: Record<WindowSessionParam, string> | string) {\n    return new URLSearchParams(init) as WindowSessionParams\n  }\n}\n\nexport interface TransportSession {\n  sessionId?: string | null\n  networkId?: string | number | null\n  intent?: OpenWalletIntent\n}\n\nexport enum EventType {\n  OPEN = 'open',\n  CLOSE = 'close',\n\n  MESSAGE = 'message',\n  CONNECT = 'connect',\n  DISCONNECT = 'disconnect',\n  ACCOUNTS_CHANGED = 'accountsChanged',\n  CHAIN_CHANGED = 'chainChanged',\n\n  NETWORKS = 'networks',\n  WALLET_CONTEXT = 'walletContext',\n\n  INIT = 'init',\n  DEBUG = '_debug'\n}\n\nexport interface WalletEventTypes {\n  open: (openInfo: { chainId?: string; sessionId?: string; session?: WalletSession; error?: string }) => void\n  close: (error?: ProviderRpcError) => void\n\n  connect: (connectDetails: ConnectDetails) => void\n  disconnect: (error?: ProviderRpcError, origin?: string) => void\n\n  accountsChanged: (accounts: string[], origin?: string) => void\n  chainChanged: (chainIdHex: string, origin?: string) => void\n\n  networks: (networks: NetworkConfig[]) => void\n  walletContext: (walletContext: commons.context.VersionedContext) => void\n}\n\nexport interface ProviderEventTypes extends WalletEventTypes {\n  message: (message: ProviderMessageResponse) => void\n}\n\nexport enum OpenState {\n  CLOSED = 0,\n  OPENING = 1,\n  OPENED = 2\n}\n\nexport enum InitState {\n  NIL = 0,\n  SENT_NONCE = 1,\n  OK = 2\n}\n\nexport interface ConnectOptions {\n  /** app name of the dapp which will be announced to user on connect screen */\n  app: string\n\n  /** custom protocol for auth redirect (unity/unreal) */\n  appProtocol?: string\n\n  /** origin hint of the dapp's host opening the wallet. This value will automatically\n   * be determined and verified for integrity, and can be omitted. */\n  origin?: string\n\n  /** access key for the project that can be obtained from Sequence Builder on sequence.build.\n   * This value will be automatically populated using the key passed in initWallet. */\n  projectAccessKey?: string\n\n  /** expiry number (in seconds) that is used for ETHAuth proof. Default is 1 week in seconds. */\n  expiry?: number\n\n  /** authorize will perform an ETHAuth eip712 signing and return the proof to the dapp. */\n  authorize?: boolean\n\n  /** authorizeNonce is an optional number to be passed as ETHAuth's nonce claim for replay protection. **/\n  authorizeNonce?: number\n\n  /** authorizeVersion is the version of the SDK that will validate the ETHAuth proof. */\n  authorizeVersion?: number\n\n  /** askForEmail will prompt to give permission to the dapp to access email address */\n  askForEmail?: boolean\n\n  /** refresh flag will force a full re-connect (ie. disconnect then connect again) */\n  refresh?: boolean\n\n  /** keepWalletOpened will keep the wallet window opened after connecting. The default\n   * is to automatically close the wallet after connecting. */\n  keepWalletOpened?: boolean\n\n  /** clientVersion is the sequence.js version of the dapp client. */\n  clientVersion?: string\n\n  /** Options to further customize the wallet experience. */\n  settings?: Settings\n}\n\nexport interface NetworkedConnectOptions extends ConnectOptions {\n  /** chainId is the chainId to connect to. If not specified, the default chainId\n   * will be used. This does not define a default chain id, it is only used for the connect\n   * authorization signature. */\n  networkId?: string | number\n}\n\n/** Options to further customize the wallet experience. */\nexport interface Settings {\n  /** Specify a wallet theme. `light` and `dark` are the main themes, to use other available\n   * themes, you can use the camel case version of the theme names in the wallet settings.\n   * For example: \"Blue Dark\" on wallet UI can be passed as \"blueDark\".\n   * Note that this setting will not be persisted, use wallet.open with 'openWithOptions' intent\n   * to set when you open the wallet for user. */\n  theme?: ThemeOption\n\n  /** Specify a banner image. This image, if provided, will be displayed on the wallet during\n   * the connect/authorize process */\n  bannerUrl?: string\n\n  bannerSize?: BannerSize\n\n  /** Specify payment providers to use. If not specified,\n   * all available payment providers will be enabled.\n   * Note that this setting will not be persisted, use wallet.open with 'openWithOptions' intent\n   * to set when you open the wallet for user. */\n  includedPaymentProviders?: PaymentProviderOption[]\n\n  /** Specify a default currency to use with payment providers.\n   * If not specified, the default is USDC.\n   * Note that this setting will not be persisted, use wallet.open with 'openWithOptions' intent\n   * to set when you open the wallet for user. */\n  defaultFundingCurrency?: CurrencyOption\n\n  /** Specify default purchase amount as an integer, for prefilling the funding amount.\n   * If not specified, the default is 100.\n   * Note that this setting will not be persisted, use wallet.open with 'openWithOptions' intent\n   * to set when you open the wallet for user. */\n  defaultPurchaseAmount?: number\n\n  /** If true, lockFundingCurrencyToDefault disables picking any currency provided by payment\n   * providers other than the defaultFundingCurrency.\n   * If false, it allows picking any currency provided by payment providers.\n   * The default is true.\n   * Note that this setting will not be persisted, use wallet.open with 'openWithOptions' intent\n   * to set when you open the wallet for user. */\n  lockFundingCurrencyToDefault?: boolean\n\n  /** Specify an auth provider to allow dapp to specify ahead of time which auth method to redirect to.\n   * Will be ignored if user is already signed in.\n   */\n  signInWith?: SignInOption\n\n  /** Specify an email address to allow user automatically sign in with the email option.\n   * Will be ignored if user is already signed in.\n   */\n  signInWithEmail?: string\n\n  /** Specify which sign in options are allowed.\n   * Will be ignored if user is already signed in.\n   */\n  signInOptions?: SignInOption[]\n\n  /** Specify auxiliary data\n   */\n  aux?: any\n}\n\n/** light and dark are the main themes, to use other themes in wallet settings,\n * you can use the camel case version of the name in the wallet settings.\n * For example: \"Blue Dark\" on wallet UI can be passed as \"blueDark\" */\nexport type ThemeOption = 'light' | 'dark' | string\nexport type PaymentProviderOption = 'ramp' | 'moonpay' | 'transak' | 'onmeta' | 'paytrie' | 'sardine'\nexport type CurrencyOption = 'usdc' | 'eth' | 'matic'\nexport type SignInOption = 'email' | 'google' | 'apple' | 'facebook' | 'discord' | 'twitch'\nexport type BannerSize = 'small' | 'medium' // | 'large'\n\nexport interface ConnectDetails {\n  // chainId (in hex) and error are defined by EIP-1193 expected fields\n  chainId?: string\n  error?: string\n\n  // connected flag denotes user-accepted the connect request\n  connected: boolean\n\n  // session include account and network information needed by the dapp wallet provider.\n  session?: WalletSession\n\n  // proof is a signed typedData (EIP-712) payload using ETHAuth domain.\n  // NOTE: the proof is signed to the `authChainId`, as the canonical auth chain.\n  proof?: ETHAuthProof\n\n  // email address provided from wallet to the dapp, as request + accepted\n  // by a user during a connect request\n  email?: string\n}\n\nexport type PromptConnectDetails = Pick<ConnectDetails, 'chainId' | 'error' | 'connected' | 'proof' | 'email'>\n\nexport type OpenWalletIntent =\n  | { type: 'connect'; options?: NetworkedConnectOptions }\n  | { type: 'openWithOptions'; options?: ConnectOptions }\n  | { type: 'jsonRpcRequest'; method: string }\n\nexport interface MessageToSign {\n  message?: Uint8Array\n  typedData?: TypedData\n  chainId?: number\n\n  eip6492?: boolean\n}\n\nexport type ETHAuthProof = AuthETHAuthProof\n\nexport interface WalletSession {\n  // Wallet context\n  walletContext?: commons.context.VersionedContext\n\n  // Account address of the wallet\n  accountAddress?: string\n\n  // Networks in use for the session. The default/dapp network will show\n  // up as the first one in the list as the \"main chain\"\n  networks?: NetworkConfig[]\n}\n\nexport class ProviderError extends Error {\n  constructor(message?: string) {\n    super(message)\n    this.name = 'ProviderError'\n  }\n}\n\nexport const ErrSignedInRequired = new ProviderError('Wallet is not signed in. Connect a wallet and try again.')\n\n// TODO: lets build some nice error handling tools, prob in /utils ...\n\nexport interface TypedEventEmitter<Events> {\n  addListener<E extends keyof Events>(event: E, listener: Events[E]): this\n  on<E extends keyof Events>(event: E, listener: Events[E]): this\n  once<E extends keyof Events>(event: E, listener: Events[E]): this\n  prependListener<E extends keyof Events>(event: E, listener: Events[E]): this\n  prependOnceListener<E extends keyof Events>(event: E, listener: Events[E]): this\n\n  off<E extends keyof Events>(event: E, listener: Events[E]): this\n  removeAllListeners<E extends keyof Events>(event?: E): this\n  removeListener<E extends keyof Events>(event: E, listener: Events[E]): this\n\n  emit<E extends keyof Events>(event: E, ...args: Arguments<Events[E]>): boolean\n  eventNames(): (keyof Events | string | symbol)[]\n  listeners<E extends keyof Events>(event: E): Function[]\n  listenerCount<E extends keyof Events>(event: E): number\n}\n\ntype Arguments<T> = [T] extends [(...args: infer U) => any] ? U : [T] extends [void] ? [] : [T]\n\nexport type OptionalChainIdLike =\n  | {\n      chainId?: ChainIdLike\n    }\n  | undefined\n\nexport type OptionalChainId =\n  | {\n      chainId?: number\n    }\n  | undefined\n\nexport type OptionalEIP6492 =\n  | {\n      eip6492?: boolean\n    }\n  | undefined\n","import { EventEmitter2 as EventEmitter } from 'eventemitter2'\n\nimport {\n  ProviderTransport,\n  ProviderMessage,\n  ProviderMessageRequest,\n  EventType,\n  ProviderEventTypes,\n  ProviderMessageResponse,\n  ProviderMessageResponseCallback,\n  OpenState,\n  OpenWalletIntent,\n  ConnectDetails,\n  WalletSession,\n  ProviderRpcError,\n  InitState,\n  TypedEventEmitter\n} from '../types'\n\nimport { NetworkConfig } from '@0xsequence/network'\nimport { logger } from '@0xsequence/utils'\nimport { ethers } from 'ethers'\nimport { VERSION, commons } from '@0xsequence/core'\n\nexport const PROVIDER_OPEN_TIMEOUT = 30000 // in ms\n\nlet _messageIdx = 0\n\nexport const nextMessageIdx = () => ++_messageIdx\n\nexport abstract class BaseProviderTransport implements ProviderTransport {\n  protected pendingMessageRequests: ProviderMessageRequest[] = []\n  protected responseCallbacks = new Map<number, ProviderMessageResponseCallback>()\n\n  protected state: OpenState\n  protected confirmationOnly: boolean = false\n  protected events: TypedEventEmitter<ProviderEventTypes> = new EventEmitter() as TypedEventEmitter<ProviderEventTypes>\n\n  protected openPayload: { sessionId?: string; session?: WalletSession } | undefined\n  protected connectPayload: ConnectDetails | undefined\n  protected accountsChangedPayload: { accounts: string[]; origin?: string } | undefined\n  protected networksPayload: NetworkConfig[] | undefined\n  protected walletContextPayload: commons.context.VersionedContext | undefined\n\n  protected _sessionId?: string\n  protected _init: InitState\n  protected _registered: boolean\n\n  constructor() {\n    this.state = OpenState.CLOSED\n    this._registered = false\n    this._init = InitState.NIL\n  }\n\n  get registered(): boolean {\n    return this._registered\n  }\n\n  register() {\n    throw new Error('abstract method')\n  }\n\n  unregister() {\n    throw new Error('abstract method')\n  }\n\n  openWallet(path?: string, intent?: OpenWalletIntent, networkId?: string | number) {\n    throw new Error('abstract method')\n  }\n\n  closeWallet() {\n    throw new Error('abstract method')\n  }\n\n  isOpened(): boolean {\n    return this.registered && this.state === OpenState.OPENED\n  }\n\n  isConnected(): boolean {\n    // if we're registered, and we have the account details, then we are connected\n    const session = this.openPayload?.session\n    return (\n      this.registered &&\n      session !== undefined &&\n      !!session.accountAddress &&\n      session.accountAddress.length === 42 &&\n      !!session.networks &&\n      session.networks.length > 0\n    )\n  }\n\n  async request(request: { method: string; params?: any[]; chainId?: number }): Promise<any> {\n    if (this.state === OpenState.CLOSED) {\n      // flag the wallet to auto-close once user submits input. ie.\n      // prompting to sign a message or transaction\n      this.confirmationOnly = true\n    }\n\n    // open/focus the wallet.\n    // automatically open the wallet when a provider request makes it here.\n    //\n    // NOTE: if we're not signed in, then the provider will fail, users must first connect+sign in.\n    //\n    // TODO: how does this behave with a session has expired?\n    this.openWallet(undefined, { type: 'jsonRpcRequest', method: request.method }, request.chainId)\n\n    if (!this.isOpened()) {\n      await this.waitUntilOpened() // will throw on timeout\n    }\n\n    const response = await this.sendMessageRequest({\n      idx: nextMessageIdx(),\n      type: EventType.MESSAGE,\n      data: request,\n      chainId: request.chainId,\n      clientVersion: VERSION\n    })\n\n    return response.data\n  }\n\n  // handleMessage will handle message received from the remote wallet\n  handleMessage(message: ProviderMessage<any>) {\n    // init incoming for initial handshake with transport.\n    // always respond to INIT messages, e.g. on popup window reload\n    if (message.type === EventType.INIT) {\n      logger.debug('MessageProvider, received INIT message', message)\n      const { nonce } = message.data as { nonce: string }\n      if (!nonce || nonce.length == 0) {\n        logger.error('invalid init nonce')\n        return\n      }\n      this._init = InitState.OK\n      this.sendMessage({\n        idx: -1,\n        type: EventType.INIT,\n        data: {\n          sessionId: this._sessionId,\n          nonce: nonce\n        },\n        clientVersion: VERSION\n      })\n    }\n\n    if (this._init !== InitState.OK) {\n      // if provider is not init'd, then we drop any received messages. the only\n      // message we will process is of event type 'init', as our acknowledgement\n      return\n    }\n\n    // message is either a notification, or its a ProviderMessageResponse\n    logger.debug('RECEIVED MESSAGE FROM WALLET', message.idx, message)\n\n    const requestIdx = message.idx\n    const responseCallback = this.responseCallbacks.get(requestIdx)\n    if (requestIdx) {\n      this.responseCallbacks.delete(requestIdx)\n    }\n\n    // OPEN response\n    //\n    // Flip opened flag, and flush the pending queue\n    if (message.type === EventType.OPEN && !this.isOpened()) {\n      if (this._sessionId && this._sessionId !== message.data?.sessionId) {\n        logger.debug('open event received from wallet, but does not match sessionId', this._sessionId)\n        return\n      }\n\n      // check if open error occured due to invalid defaultNetworkId\n      if (message.data?.error) {\n        const err = new Error(`opening wallet failed: received ${message.data?.error}`)\n        logger.error(err)\n        this.close()\n        throw err\n      }\n\n      // success!\n      this.state = OpenState.OPENED\n      this.openPayload = message.data\n      this.events.emit('open', this.openPayload!)\n\n      // flush pending requests when connected\n      if (this.pendingMessageRequests.length !== 0) {\n        const pendingMessageRequests = this.pendingMessageRequests.splice(0, this.pendingMessageRequests.length)\n\n        pendingMessageRequests.forEach(async pendingMessageRequest => {\n          this.sendMessage(pendingMessageRequest)\n        })\n      }\n\n      return\n    }\n\n    // MESSAGE resposne\n    if (message.type === EventType.MESSAGE) {\n      // Require user confirmation, bring up wallet to prompt for input then close\n      // TODO: perhaps apply technique like in multicall to queue messages within\n      // a period of time, then close the window if responseCallbacks is empty, this is better.\n      if (this.confirmationOnly) {\n        setTimeout(() => {\n          if (this.responseCallbacks.size === 0) {\n            this.closeWallet()\n          }\n        }, 500) // TODO: be smarter about timer as we're processing the response callbacks..\n      }\n\n      if (!responseCallback) {\n        // NOTE: this would occur if 'idx' isn't set, which should never happen\n        // or when we register two handler, or duplicate messages with the same idx are sent,\n        // all of which should be prevented prior to getting to this point\n        throw new Error('impossible state')\n      }\n\n      // Callback to original caller\n      if (responseCallback) {\n        this.events.emit('message', message)\n        responseCallback((message as ProviderMessageResponse).data.error, message)\n        return\n      }\n    }\n\n    // ACCOUNTS_CHANGED -- when a user logs in or out\n    if (message.type === EventType.ACCOUNTS_CHANGED) {\n      this.accountsChangedPayload = { accounts: [] }\n      if (message.data && message.data.length > 0) {\n        this.accountsChangedPayload = {\n          accounts: [ethers.getAddress(message.data[0])],\n          origin: message.origin\n        }\n        this.events.emit('accountsChanged', this.accountsChangedPayload.accounts, this.accountsChangedPayload.origin)\n      } else {\n        this.events.emit('accountsChanged', [], message.origin)\n      }\n      return\n    }\n\n    // CHAIN_CHANGED -- when a user changes their default chain\n    if (message.type === EventType.CHAIN_CHANGED) {\n      this.events.emit('chainChanged', message.data, message.origin)\n      return\n    }\n\n    // NOTIFY NETWORKS -- when a user connects or logs in\n    if (message.type === EventType.NETWORKS) {\n      this.networksPayload = message.data\n      this.events.emit('networks', this.networksPayload!)\n      return\n    }\n\n    // NOTIFY WALLET_CONTEXT -- when a user connects or logs in\n    if (message.type === EventType.WALLET_CONTEXT) {\n      this.walletContextPayload = message.data\n      this.events.emit('walletContext', this.walletContextPayload!)\n      return\n    }\n\n    // NOTIFY CLOSE -- when wallet instructs to close\n    if (message.type === EventType.CLOSE) {\n      if (this.state !== OpenState.CLOSED) {\n        this.close(message.data)\n      }\n    }\n\n    // NOTIFY CONNECT -- when wallet instructs we've connected\n    if (message.type === EventType.CONNECT) {\n      this.connectPayload = message.data\n      this.events.emit('connect', this.connectPayload!)\n    }\n\n    // NOTIFY DISCONNECT -- when wallet instructs to disconnect\n    if (message.type === EventType.DISCONNECT) {\n      if (this.isConnected()) {\n        this.events.emit('disconnect', message.data, message.origin)\n        this.close()\n      }\n    }\n  }\n\n  // sendMessageRequest sends a ProviderMessageRequest over the wire to the wallet\n  sendMessageRequest = async (message: ProviderMessageRequest): Promise<ProviderMessageResponse> => {\n    return new Promise((resolve, reject) => {\n      if ((!message.idx || message.idx <= 0) && message.type !== 'init') {\n        reject(new Error('message idx not set'))\n      }\n\n      const responseCallback: ProviderMessageResponseCallback = (error: ProviderRpcError, response?: ProviderMessageResponse) => {\n        if (error) {\n          reject(error)\n        } else if (response) {\n          resolve(response)\n        } else {\n          throw new Error('no valid response to return')\n        }\n      }\n\n      const idx = message.idx\n      if (!this.responseCallbacks.get(idx)) {\n        this.responseCallbacks.set(idx, responseCallback)\n      } else {\n        reject(new Error('duplicate message idx, should never happen'))\n      }\n\n      if (!this.isOpened()) {\n        logger.debug('pushing to pending requests', message)\n        this.pendingMessageRequests.push(message)\n      } else {\n        this.sendMessage(message)\n      }\n    })\n  }\n\n  sendMessage(message: ProviderMessage<any>) {\n    throw new Error('abstract method')\n  }\n\n  on<K extends keyof ProviderEventTypes>(event: K, fn: ProviderEventTypes[K]) {\n    this.events.on(event, fn as any)\n  }\n\n  once<K extends keyof ProviderEventTypes>(event: K, fn: ProviderEventTypes[K]) {\n    this.events.once(event, fn as any)\n  }\n\n  emit<K extends keyof ProviderEventTypes>(event: K, ...args: Parameters<ProviderEventTypes[K]>): boolean {\n    return this.events.emit(event, ...(args as any))\n  }\n\n  waitUntilOpened = async (openTimeout = PROVIDER_OPEN_TIMEOUT): Promise<WalletSession | undefined> => {\n    let opened = false\n    return Promise.race([\n      new Promise<WalletSession | undefined>((_, reject) => {\n        const timeout = setTimeout(() => {\n          clearTimeout(timeout)\n          // only emit close if the timeout wins the race\n          if (!opened) {\n            this.state = OpenState.CLOSED\n            this.events.emit('close', { code: 1005, message: 'opening wallet timed out' } as ProviderRpcError)\n          }\n          reject(new Error('opening wallet timed out'))\n        }, openTimeout)\n      }),\n      new Promise<WalletSession | undefined>(resolve => {\n        if (this.isOpened()) {\n          opened = true\n          resolve(this.openPayload?.session)\n          return\n        }\n        this.events.once('open', (openInfo: { session?: WalletSession }) => {\n          this.openPayload = openInfo\n          opened = true\n          resolve(openInfo.session)\n        })\n      })\n    ])\n  }\n\n  waitUntilConnected = async (): Promise<ConnectDetails> => {\n    await this.waitUntilOpened()\n\n    const connect = new Promise<ConnectDetails>(resolve => {\n      if (this.connectPayload) {\n        resolve(this.connectPayload)\n        return\n      }\n\n      this.events.once('connect', connectDetails => {\n        this.connectPayload = connectDetails\n        resolve(connectDetails)\n      })\n    })\n\n    const closeWallet = new Promise<ConnectDetails>((_, reject) => {\n      this.events.once('close', error => {\n        if (error) {\n          reject(new Error(`wallet closed due to ${JSON.stringify(error)}`))\n        } else {\n          reject(new Error(`user closed the wallet`))\n        }\n      })\n    })\n\n    return Promise.race<ConnectDetails>([connect, closeWallet])\n  }\n\n  protected close(error?: ProviderRpcError) {\n    if (this.state === OpenState.CLOSED) return\n\n    this.state = OpenState.CLOSED\n    this.confirmationOnly = false\n    this._sessionId = undefined\n    logger.info('closing wallet and flushing!')\n\n    // flush pending requests and return error to all callbacks\n    this.pendingMessageRequests.length = 0\n    this.responseCallbacks.forEach(responseCallback => {\n      responseCallback({\n        ...new Error('wallet closed'),\n        code: 4001\n      })\n    })\n    this.responseCallbacks.clear()\n\n    this.connectPayload = undefined\n    this.openPayload = undefined\n    this.accountsChangedPayload = undefined\n    this.networksPayload = undefined\n    this.walletContextPayload = undefined\n\n    this.events.emit('close', error)\n  }\n}\n","import { ethers } from 'ethers'\n\nexport function messageIsExemptFromEIP191Prefix(message: Uint8Array): boolean {\n  return EIP_191_PREFIX_EXCEPTIONS.some(e => e.predicate(message))\n}\n\nconst EIP_191_PREFIX_EXCEPTIONS: Array<{\n  name: string\n  predicate: (message: Uint8Array) => boolean\n}> = [\n  // NOTE: Decentraland does not support 191 correctly.\n  {\n    name: 'Decentraland Exception',\n    predicate: isDecentralandLoginMessage\n  },\n\n  // NOTE: 0x v3 does not support 191 correctly.\n  // See https://gov.0x.org/t/zeip-proposal-fix-v3-eip-191-non-compliance-when-validating-eip-1271-signatures/3396 for more info.\n  { name: '0x v3 Exception', predicate: isZeroExV3Order }\n]\n\nconst DCL_REGEX =\n  /^Decentraland Login\\nEphemeral address: 0x[a-fA-F0-9]{40}\\nExpiration: (\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)((-(\\d{2}):(\\d{2})|Z)?)$/\nexport function isDecentralandLoginMessage(bytes: Uint8Array): boolean {\n  try {\n    const stringified = ethers.toUtf8String(bytes)\n    return DCL_REGEX.test(stringified)\n  } catch {\n    return false\n  }\n}\n\n// try to interpret bytes as abi-encoded 0x v3 OrderWithHash -\n// see https://github.com/0xProject/0x-protocol-specification/blob/master/v3/v3-specification.md\nexport function isZeroExV3Order(bytes: Uint8Array): boolean {\n  const abi = new ethers.Interface(ZeroXV3EIP1271OrderWithHashAbi)\n  try {\n    abi.decodeFunctionData('OrderWithHash', bytes)\n    return true\n  } catch (err) {\n    // failed to decode ABI, so it's not a v3 order.\n    return false\n  }\n}\n\nconst ZeroXV3EIP1271OrderWithHashAbi = [\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'address',\n            name: 'makerAddress',\n            type: 'address'\n          },\n          {\n            internalType: 'address',\n            name: 'takerAddress',\n            type: 'address'\n          },\n          {\n            internalType: 'address',\n            name: 'feeRecipientAddress',\n            type: 'address'\n          },\n          {\n            internalType: 'address',\n            name: 'senderAddress',\n            type: 'address'\n          },\n          {\n            internalType: 'uint256',\n            name: 'makerAssetAmount',\n            type: 'uint256'\n          },\n          {\n            internalType: 'uint256',\n            name: 'takerAssetAmount',\n            type: 'uint256'\n          },\n          {\n            internalType: 'uint256',\n            name: 'makerFee',\n            type: 'uint256'\n          },\n          {\n            internalType: 'uint256',\n            name: 'takerFee',\n            type: 'uint256'\n          },\n          {\n            internalType: 'uint256',\n            name: 'expirationTimeSeconds',\n            type: 'uint256'\n          },\n          {\n            internalType: 'uint256',\n            name: 'salt',\n            type: 'uint256'\n          },\n          {\n            internalType: 'bytes',\n            name: 'makerAssetData',\n            type: 'bytes'\n          },\n          {\n            internalType: 'bytes',\n            name: 'takerAssetData',\n            type: 'bytes'\n          },\n          {\n            internalType: 'bytes',\n            name: 'makerFeeAssetData',\n            type: 'bytes'\n          },\n          {\n            internalType: 'bytes',\n            name: 'takerFeeAssetData',\n            type: 'bytes'\n          }\n        ],\n        internalType: 'struct IEIP1271Data.Order',\n        name: 'order',\n        type: 'tuple'\n      },\n      {\n        internalType: 'bytes32',\n        name: 'orderHash',\n        type: 'bytes32'\n      }\n    ],\n    name: 'OrderWithHash',\n    outputs: [],\n    stateMutability: 'pure',\n    type: 'function'\n  }\n]\n","import { ethers } from 'ethers'\nimport { messageIsExemptFromEIP191Prefix } from './eip191exceptions'\nimport { AccountStatus } from '@0xsequence/account'\nimport { commons } from '@0xsequence/core'\nimport { encodeMessageDigest, TypedData, encodeTypedDataDigest } from '@0xsequence/utils'\n\nconst eip191prefix = ethers.toUtf8Bytes('\\x19Ethereum Signed Message:\\n')\n\nexport const messageToBytes = (message: ethers.BytesLike): Uint8Array => {\n  if (ethers.isBytesLike(message)) {\n    return ethers.getBytes(message)\n  }\n\n  return ethers.toUtf8Bytes(message)\n}\n\nexport const prefixEIP191Message = (message: ethers.BytesLike): Uint8Array => {\n  const messageBytes = messageToBytes(message)\n  if (messageIsExemptFromEIP191Prefix(messageBytes)) {\n    return messageBytes\n  } else {\n    return ethers.getBytes(ethers.concat([eip191prefix, ethers.toUtf8Bytes(String(messageBytes.length)), messageBytes]))\n  }\n}\n\nexport const trimEIP191Prefix = (prefixedMessage: Uint8Array): Uint8Array => {\n  // If the message is not prefixed, we return the message as is.\n  if (JSON.stringify(prefixedMessage.slice(0, eip191prefix.length)) !== JSON.stringify(eip191prefix)) {\n    return prefixedMessage\n  }\n\n  // We have two parts to remove.\n  // First is the EIP-191 prefix.\n  const ethereumSignedMessagePartSlicedArray = prefixedMessage.slice(eip191prefix.length)\n\n  // Second is the digits added which represent length of the message without the prefix\n  // and we need to find the prefix that will match this.\n  // Here first we take the max prefix char length, and check if as a number it is bigger\n  // than the length of the message (since prefix is added to represent length of original message),\n  // if it is we remove 1 from char length, if not we keep the max prefix char length.\n  // As an example for the case where , if the message is 123456789, the expected prefix char is 9, with starting value 9123456789\n  // the char length of the total message with the prefix is 10, so the max prefix char length we start is 2 from [1,0], and as a number 10, it is longer\n  // than the length of the message after removing prefix (10 - 2 = 8), so we slice 1 char less, which is 9, and we get the correct prefix.\n  const maxPrefixCharLength = String(ethereumSignedMessagePartSlicedArray.length).length\n\n  let prefixCharLenght: number\n  let prefixAsNumber: number\n\n  try {\n    prefixAsNumber = Number(ethers.toUtf8String(ethereumSignedMessagePartSlicedArray.slice(0, maxPrefixCharLength)))\n  } catch {\n    prefixAsNumber = Number(ethers.hexlify(ethereumSignedMessagePartSlicedArray.slice(0, maxPrefixCharLength)))\n  }\n\n  if (prefixAsNumber > ethereumSignedMessagePartSlicedArray.length || !Number.isInteger(prefixAsNumber)) {\n    prefixCharLenght = maxPrefixCharLength - 1\n  } else {\n    prefixCharLenght = maxPrefixCharLength\n  }\n\n  const prefixRevertedMessage = ethereumSignedMessagePartSlicedArray.slice(prefixCharLenght)\n\n  return prefixRevertedMessage\n}\n\nexport const isValidSignature = async (\n  address: string,\n  digest: Uint8Array,\n  sig: string,\n  provider: ethers.Provider\n): Promise<boolean> => {\n  const reader = new commons.reader.OnChainReader(provider)\n  return reader.isValidSignature(address, digest, sig)\n}\n\n// Verify message signature\nexport const isValidMessageSignature = async (\n  address: string,\n  message: string | Uint8Array,\n  signature: string,\n  provider: ethers.Provider\n): Promise<boolean> => {\n  const prefixed = prefixEIP191Message(message)\n  const digest = encodeMessageDigest(prefixed)\n  return isValidSignature(address, digest, signature, provider)\n}\n\n// Verify typedData signature\nexport const isValidTypedDataSignature = (\n  address: string,\n  typedData: TypedData,\n  signature: string,\n  provider: ethers.Provider\n): Promise<boolean> => {\n  return isValidSignature(address, encodeTypedDataDigest(typedData), signature, provider)\n}\n\nexport const isBrowserExtension = (): boolean =>\n  window.location.protocol === 'chrome-extension:' || window.location.protocol === 'moz-extension:'\n\nexport const isUnityPlugin = (): boolean => !!navigator.userAgent.match(/UnitySequence/i)\n\n// /**\n//  * Returns the status of a signer's wallet on given chain by checking wallet deployment and config status\n//  *\n//  * @param {Status} of the wallet\n//  */\nexport const isWalletUpToDate = (status: AccountStatus): boolean => {\n  return status.onChain.deployed && status.fullyMigrated\n}\n\nexport interface ItemStore {\n  getItem(key: string): string | null\n  setItem(key: string, value: string): void\n\n  removeItem(key: string): void\n\n  onItemChange(key: string, cb: (value: string | null) => void): () => void\n}\n\nexport class MemoryItemStore implements ItemStore {\n  private callbacks: { key: string; cb: (value: string | null) => void }[] = []\n  private store: Record<string, string> = {}\n\n  getItem(key: string): string | null {\n    return this.store[key] || null\n  }\n\n  setItem(key: string, value: string): void {\n    this.store[key] = value\n    this.callbacks.filter(c => c.key === key).forEach(c => c.cb(value))\n  }\n\n  removeItem(key: string): void {\n    delete this.store[key]\n  }\n\n  onItemChange(key: string, cb: (value: string | null) => void): () => void {\n    this.callbacks.push({ key, cb })\n\n    return () => {\n      this.callbacks = this.callbacks.filter(c => c.cb !== cb)\n    }\n  }\n}\n\nexport class LocalStorage implements ItemStore {\n  private callbacks: { key: string; cb: (value: string | null) => void }[] = []\n\n  static isAvailable(): boolean {\n    return typeof window === 'object' && typeof window.localStorage === 'object'\n  }\n\n  constructor() {\n    if (!LocalStorage.isAvailable()) {\n      throw new Error('LocalStorage is not available')\n    }\n\n    window.addEventListener('storage', e => {\n      const { key } = e\n      const cb = this.callbacks.filter(c => c.key === key)\n      cb.forEach(c => c.cb(this.getItem(key!)))\n    })\n  }\n\n  getItem(key: string): string | null {\n    return window.localStorage.getItem(key)\n  }\n\n  setItem(key: string, value: string): void {\n    window.localStorage.setItem(key, value)\n\n    // Trigger callbacks\n    // NOTICE: the event is not triggered on the same window\n    this.callbacks.filter(c => c.key === key).forEach(c => c.cb(value))\n  }\n\n  removeItem(key: string): void {\n    window.localStorage.removeItem(key)\n\n    // Trigger callbacks\n    // NOTICE: the event is not triggered on the same window\n    this.callbacks.filter(c => c.key === key).forEach(c => c.cb(null))\n  }\n\n  onItemChange(key: string, cb: (value: string | null) => void): () => void {\n    this.callbacks.push({ key, cb })\n\n    return () => {\n      this.callbacks = this.callbacks.filter(c => c.cb !== cb)\n    }\n  }\n}\n\nexport function useBestStore(): ItemStore {\n  if (LocalStorage.isAvailable()) {\n    return new LocalStorage()\n  }\n\n  return new MemoryItemStore()\n}\n\nexport async function resolveArrayProperties<T>(object: Readonly<T> | Readonly<T>[]): Promise<T> {\n  if (Array.isArray(object)) {\n    // T must include array type\n    return Promise.all(object.map(o => ethers.resolveProperties(o))) as any\n  }\n\n  return ethers.resolveProperties(object)\n}\n","import { ethers } from 'ethers'\nimport {\n  WalletTransport,\n  ProviderMessage,\n  ProviderMessageRequest,\n  EventType,\n  ProviderMessageResponse,\n  ProviderRpcError,\n  InitState,\n  ConnectDetails,\n  WalletSession,\n  TransportSession\n} from '../types'\n\nimport { WalletRequestHandler } from './wallet-request-handler'\n\nimport { NetworkConfig, findSupportedNetwork } from '@0xsequence/network'\nimport { logger, sanitizeAlphanumeric, sanitizeHost, sanitizeNumberString } from '@0xsequence/utils'\nimport { AuthorizationOptions } from '@0xsequence/auth'\n\nimport { PROVIDER_OPEN_TIMEOUT } from './base-provider-transport'\nimport { isBrowserExtension, useBestStore } from '../utils'\nimport { VERSION, commons } from '@0xsequence/core'\n\nconst TRANSPORT_SESSION_LS_KEY = '@sequence.transportSession'\n\nexport abstract class BaseWalletTransport implements WalletTransport {\n  protected walletRequestHandler: WalletRequestHandler\n  protected _sessionId: string\n  protected _registered: boolean\n\n  protected _init: InitState\n  protected _initNonce: string\n  protected _initCallback?: (error?: string) => void\n\n  // appOrigin identifies the dapp's origin which opened the app. A transport\n  // will auto-detect and set this value if it can. This is determined\n  // as the parent app/window which opened the wallet.\n  protected appOrigin?: string\n\n  constructor(walletRequestHandler: WalletRequestHandler) {\n    this.walletRequestHandler = walletRequestHandler\n    this._init = InitState.NIL\n\n    this.walletRequestHandler.on('connect', (connectDetails: ConnectDetails) => {\n      if (!this.registered) return\n      // means user has logged in and wallet is connected to the app\n      this.notifyConnect(connectDetails)\n    })\n\n    this.walletRequestHandler.on('disconnect', (error?: ProviderRpcError, origin?: string) => {\n      if (!this.registered) return\n      // means user has logged out the app / disconnected wallet from the app\n      this.notifyDisconnect(error, origin)\n    })\n\n    this.walletRequestHandler.on('accountsChanged', (accounts: string[], origin?: string) => {\n      if (!this.registered) return\n      this.notifyAccountsChanged(accounts, origin)\n    })\n\n    this.walletRequestHandler.on('networks', (networks: NetworkConfig[]) => {\n      if (!this.registered) return\n      this.notifyNetworks(networks)\n      if (!networks || networks.length === 0) {\n        this.notifyChainChanged('0x0')\n      } else {\n        this.notifyChainChanged(ethers.toQuantity(networks.find(network => network.isDefaultChain)!.chainId))\n      }\n    })\n\n    this.walletRequestHandler.on('chainChanged', (chainIdHex: string, origin?: string) => {\n      this.notifyChainChanged(chainIdHex, origin)\n    })\n\n    this.walletRequestHandler.on('walletContext', (walletContext: commons.context.VersionedContext) => {\n      if (!this.registered || !walletContext) return\n      this.notifyWalletContext(walletContext)\n    })\n\n    this.walletRequestHandler.on('close', (error?: ProviderRpcError) => {\n      if (!this.registered) return\n      this.notifyClose(error)\n    })\n  }\n\n  get registered(): boolean {\n    return this._registered\n  }\n\n  register() {\n    throw new Error('abstract method')\n  }\n\n  unregister() {\n    throw new Error('abstract method')\n  }\n\n  request(request: { method: string; params?: any[]; chainId?: number }): Promise<any> {\n    throw new Error('abstract method')\n  }\n\n  handleMessage = async (message: ProviderMessage<any>) => {\n    const request = message\n\n    // ensure initial handshake is complete before accepting\n    // other kinds of messages.\n    if (this._init !== InitState.OK) {\n      if (request.type === EventType.INIT) {\n        if (this.isValidInitAck(message)) {\n          // successful init\n          if (this._initCallback) this._initCallback()\n        } else {\n          // failed init\n          if (this._initCallback) this._initCallback('invalid init')\n          return\n        }\n      } else {\n        // we expect init message first. do nothing here.\n      }\n      return\n    }\n\n    // ensure signer is ready to handle requests\n    // if (this.walletRequestHandler.getSigner() === undefined) {\n    //   await this.walletRequestHandler.signerReady()\n    // }\n\n    // handle request\n    switch (request.type) {\n      case EventType.OPEN: {\n        if (this._init !== InitState.OK) return\n        const session: TransportSession = {\n          sessionId: request.data.sessionId,\n          intent: request.data.intent,\n          networkId: request.data.networkId\n        }\n        await this.open(session)\n        return\n      }\n\n      case EventType.CLOSE: {\n        if (this._init !== InitState.OK) return\n        // noop. just here to capture the message so event emitters may be notified\n        return\n      }\n\n      case EventType.MESSAGE: {\n        const response = await this.walletRequestHandler.sendMessageRequest(request)\n        this.sendMessage(response)\n\n        if (response.data.error) {\n          // TODO: for certain errors, whenever we want to render something to the UI\n          // we should throw\n        }\n        return\n      }\n\n      default: {\n        logger.error(`unexpected payload type ${request.type}`)\n      }\n    }\n  }\n\n  // sendMessageRequest sends a ProviderMessageRequest to the wallet post-message transport\n  sendMessageRequest = async (message: ProviderMessageRequest): Promise<ProviderMessageResponse> => {\n    return this.walletRequestHandler.sendMessageRequest(message)\n  }\n\n  sendMessage(message: ProviderMessage<any>) {\n    throw new Error('abstract method')\n  }\n\n  notifyOpen(openInfo: { chainId?: string; sessionId?: string; session?: WalletSession; error?: string }) {\n    const { chainId, sessionId, session, error } = openInfo\n    this.sendMessage({\n      idx: -1,\n      type: EventType.OPEN,\n      data: {\n        chainId,\n        sessionId,\n        session,\n        error\n      },\n      clientVersion: VERSION\n    })\n  }\n\n  notifyClose(error?: ProviderRpcError) {\n    this.sendMessage({\n      idx: -1,\n      type: EventType.CLOSE,\n      data: error ? { error } : null,\n      clientVersion: VERSION\n    })\n  }\n\n  notifyConnect(connectDetails: ConnectDetails) {\n    this.sendMessage({\n      idx: -1,\n      type: EventType.CONNECT,\n      data: connectDetails,\n      clientVersion: VERSION\n    })\n  }\n\n  notifyDisconnect(error?: ProviderRpcError, origin?: string) {\n    this.sendMessage({\n      idx: -1,\n      type: EventType.DISCONNECT,\n      data: error ? { error } : null,\n      origin,\n      clientVersion: VERSION\n    })\n  }\n\n  notifyAccountsChanged(accounts: string[], origin?: string) {\n    this.sendMessage({\n      idx: -1,\n      type: EventType.ACCOUNTS_CHANGED,\n      data: accounts,\n      origin,\n      clientVersion: VERSION\n    })\n  }\n\n  notifyChainChanged(chainIdHex: string, origin?: string) {\n    this.sendMessage({\n      idx: -1,\n      type: EventType.CHAIN_CHANGED,\n      data: chainIdHex,\n      origin,\n      clientVersion: VERSION\n    })\n  }\n\n  notifyNetworks(networks: NetworkConfig[]) {\n    this.sendMessage({\n      idx: -1,\n      type: EventType.NETWORKS,\n      data: networks,\n      clientVersion: VERSION\n    })\n  }\n\n  notifyWalletContext(walletContext: commons.context.VersionedContext) {\n    this.sendMessage({\n      idx: -1,\n      type: EventType.WALLET_CONTEXT,\n      data: walletContext,\n      clientVersion: VERSION\n    })\n  }\n\n  protected isValidInitAck(message: ProviderMessage<any>): boolean {\n    if (this._init === InitState.OK) {\n      // we're already in init state, we shouldn't handle this message\n      logger.warn(\"isValidInitAck, already in init'd state, so inquiry is invalid.\")\n      return false\n    }\n    if (message.type !== EventType.INIT) {\n      logger.warn('isValidInitAck, invalid message type, expecting init')\n      return false\n    }\n\n    const { sessionId, nonce } = message.data as any as { sessionId: string; nonce: string }\n    if (!sessionId || sessionId.length === 0 || !nonce || nonce.length === 0) {\n      logger.error('invalid init ack')\n      return false\n    }\n    if (sessionId !== this._sessionId || nonce !== this._initNonce) {\n      logger.error('invalid init ack match')\n      return false\n    }\n\n    // all checks pass, its true\n    return true\n  }\n\n  private init(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      // avoid re-init`ing, or if there is a transport which doesn't require\n      // it, then it may set this._init to OK in its constructor.\n      if (this._init === InitState.OK) {\n        resolve()\n        return\n      }\n      if (this._init !== InitState.NIL || this._initCallback) {\n        reject('transport init is in progress')\n        return\n      }\n\n      // start init timeout, if we don't receive confirmation\n      // from provider within this amount of time, then we timeout\n      const initTimeout = setTimeout(() => {\n        logger.warn('transport init timed out')\n        if (this._initCallback) {\n          this._initCallback('transport init timed out')\n        }\n      }, PROVIDER_OPEN_TIMEOUT / 2)\n\n      // setup callback as we receive the init message async in the handleMessage function\n      this._initCallback = (error?: string) => {\n        this._initCallback = undefined // reset\n        clearTimeout(initTimeout)\n        if (error) {\n          reject(error)\n        } else {\n          this._init = InitState.OK\n          resolve()\n        }\n      }\n\n      // send init request with random nonce to the provider, where we expect\n      // for the provider to echo it back to us as complete handshake\n      this._initNonce = `${performance.now()}`\n      this.sendMessage({\n        idx: -1,\n        type: EventType.INIT,\n        data: { nonce: this._initNonce },\n        clientVersion: VERSION\n      })\n      this._init = InitState.SENT_NONCE\n\n      // NOTE: the promise will resolve in the _initCallback method\n      // which will be called from either handleMessage or the initTimeout\n    })\n  }\n\n  protected open = async ({ sessionId, intent, networkId }: TransportSession): Promise<boolean> => {\n    if (sessionId) {\n      this._sessionId = sanitizeNumberString(sessionId)\n      // persist transport session in localstorage for restoring after redirect/reload\n      this.saveTransportSession({ sessionId, intent, networkId })\n    }\n\n    this.walletRequestHandler.setOpenIntent(intent)\n\n    // init handshake for certain transports, before we can open the communication.\n    //\n    // for example, with the window-transport, we have to exchange messages to determine the\n    // origin host of the dapp.\n    await this.init()\n\n    // determine chainId from networkId (string or number)\n    let chainId: number | undefined = undefined\n    try {\n      if (networkId) {\n        const network = findSupportedNetwork(networkId)\n        if (network) {\n          chainId = network.chainId\n        } else {\n          throw new Error(`unknown network ${networkId}`)\n        }\n      } else {\n        // if not provided, use defaultChainId\n        chainId = this.walletRequestHandler.defaultChainId()\n      }\n    } catch (err) {\n      console.error(err)\n    }\n\n    // Prepare connect options from intent\n    if (intent && intent.type === 'connect' && intent.options) {\n      const connectOptions = intent.options\n      const authorizeOptions: AuthorizationOptions = connectOptions // overlapping types\n\n      // Sanity/integrity check the intent payload, and set authorization origin\n      // if its been determined as part of the init handshake from earlier.\n      if (this.appOrigin && authorizeOptions?.origin) {\n        if (!isBrowserExtension()) {\n          if (authorizeOptions.origin !== this.appOrigin) {\n            throw new Error('origin is invalid')\n          } else {\n            // request origin and derived origins match, lets carry on\n          }\n        }\n      } else if (!this.appOrigin && authorizeOptions?.origin) {\n        // ie. when we can't determine the origin in our transport, but dapp provides it to us.\n        // we just sanitize the origin host.\n        connectOptions.origin = sanitizeHost(authorizeOptions.origin)\n      } else if (this.appOrigin) {\n        // ie. when we auto-determine the origin such as in window-transport\n        connectOptions.origin = this.appOrigin\n      }\n      if (connectOptions.app) {\n        connectOptions.app = sanitizeAlphanumeric(connectOptions.app)\n      }\n\n      if (connectOptions.networkId) {\n        networkId = connectOptions.networkId\n      } else if (networkId) {\n        connectOptions.networkId = networkId\n      }\n\n      // Set connect options on the walletRequestHandler as our primary\n      // wallet controller, and fall back to networkId if necessary\n      this.walletRequestHandler.setConnectOptions(connectOptions)\n    } else {\n      this.walletRequestHandler.setConnectOptions(undefined)\n    }\n\n    // ensure signer is ready\n    await this.walletRequestHandler.getAccount()\n\n    // Notify open and proceed to prompt for connection if intended\n    if (!(await this.walletRequestHandler.isSignedIn())) {\n      // open wallet without a specific connected chainId, as the user is not signed in\n      this.notifyOpen({\n        sessionId: this._sessionId\n      })\n      return true\n    } else {\n      // prompt user with a connect request. the options will be used as previously set above.\n      // upon success, the walletRequestHandler will notify the dapp with the ConnectDetails.\n      // upon cancellation by user, the walletRequestHandler will throw an error\n\n      if (intent && intent.type === 'connect') {\n        // Failed to set default network on open\n        // Fail silently here so we can continue with connect flow and ask\n        // user to connect on a different network if necessary\n        if (!chainId || chainId <= 0) {\n          console.log('Failed to set default network on open')\n        }\n\n        // notify wallet is opened, without session details\n        this.notifyOpen({\n          sessionId: this._sessionId\n        })\n\n        try {\n          const connectDetails = await this.walletRequestHandler.promptConnect(intent.options)\n          if (connectDetails.connected) {\n            this.walletRequestHandler.notifyConnect(connectDetails)\n          }\n        } catch (err) {\n          logger.warn('promptConnect not connected:', err)\n        } finally {\n          // auto-close by default, unless intent is to keep open\n          if (!intent.options || intent.options.keepWalletOpened !== true) {\n            this.notifyClose()\n          }\n        }\n      } else {\n        // Using default network\n\n        // Failed to set default network on open -- quit + close\n        if (!chainId || chainId <= 0) {\n          this.notifyOpen({\n            sessionId: this._sessionId,\n            error: `failed to open wallet on network ${networkId}`\n          })\n          return false\n        }\n\n        // user is already connected, notify session details.\n        // TODO: in future, keep list if 'connected' dapps / sessions in the session\n        // controller, and only sync with allowed apps\n        this.notifyOpen({\n          sessionId: this._sessionId,\n          chainId: `${chainId}`,\n          session: await this.walletRequestHandler.walletSession(chainId)\n        })\n      }\n    }\n\n    return true\n  }\n\n  private saveTransportSession = (session: TransportSession) => {\n    useBestStore().setItem(TRANSPORT_SESSION_LS_KEY, JSON.stringify(session))\n  }\n\n  protected getCachedTransportSession = async (): Promise<TransportSession | null> => {\n    const session = useBestStore().getItem(TRANSPORT_SESSION_LS_KEY)\n\n    try {\n      return session ? (JSON.parse(session) as TransportSession) : null\n    } catch (err) {\n      console.error(`unable to parse transport session: ${session}`)\n      return null\n    }\n  }\n}\n","import { EventEmitter2 as EventEmitter } from 'eventemitter2'\nimport { ProviderMessage, ProviderMessageTransport, ProviderEventTypes, TypedEventEmitter } from '../../types'\n\nexport class ProxyMessageChannel {\n  app: ProxyMessageChannelPort\n  wallet: ProxyMessageChannelPort\n\n  constructor() {\n    const port1 = new ProxyMessageChannelPort()\n    const port2 = new ProxyMessageChannelPort()\n\n    port1.conn = port2\n    port2.conn = port1\n\n    this.app = port1\n    this.wallet = port2\n  }\n}\n\nexport class ProxyMessageChannelPort implements ProviderMessageTransport {\n  conn: ProviderMessageTransport\n  events: TypedEventEmitter<ProxyEventTypes> = new EventEmitter() as TypedEventEmitter<ProxyEventTypes>\n\n  // handle messages which hit this port\n  handleMessage = (message: ProviderMessage<any>): void => {\n    throw new Error('ProxyMessageChannelPort is not registered')\n  }\n\n  // send messages to the connected port\n  sendMessage = (message: ProviderMessage<any>): void => {\n    this.conn.handleMessage(message)\n\n    // trigger events\n    if (message.type === 'open') {\n      this.events.emit('open', message as any)\n    }\n    if (message.type === 'close') {\n      this.events.emit('close', message as any)\n    }\n    if (message.type === 'connect') {\n      this.events.emit('connect', message as any)\n    }\n    if (message.type === 'disconnect') {\n      this.events.emit('disconnect', message as any)\n    }\n  }\n\n  on<K extends keyof ProxyEventTypes>(event: K, fn: ProxyEventTypes[K]) {\n    this.events.on(event, fn as any)\n  }\n\n  once<K extends keyof ProxyEventTypes>(event: K, fn: ProxyEventTypes[K]) {\n    this.events.once(event, fn as any)\n  }\n}\n\nexport type ProxyEventTypes = Pick<ProviderEventTypes, 'open' | 'close' | 'connect' | 'disconnect'>\n","import { BaseProviderTransport } from '../base-provider-transport'\n\nimport { ProviderMessage, OpenState, OpenWalletIntent, EventType, InitState } from '../../types'\n\nimport { ProxyMessageChannelPort, ProxyEventTypes } from './proxy-message-channel'\nimport { VERSION } from '@0xsequence/core'\n\nexport class ProxyMessageProvider extends BaseProviderTransport {\n  private port: ProxyMessageChannelPort\n\n  constructor(port: ProxyMessageChannelPort) {\n    super()\n    this.state = OpenState.CLOSED\n    this.port = port\n    if (!port) {\n      throw new Error('port argument cannot be empty')\n    }\n\n    // disable init handshake for proxy-transport, we set it to OK, to\n    // consider it in completed state.\n    this._init = InitState.OK\n  }\n\n  register = () => {\n    this.port.handleMessage = (message: ProviderMessage<any>): void => {\n      this.handleMessage(message)\n    }\n\n    this.on('open', (...args: Parameters<ProxyEventTypes['open']>) => {\n      this.port.events.emit('open', ...args)\n    })\n    this.on('close', (...args: Parameters<ProxyEventTypes['close']>) => {\n      this.port.events.emit('close', ...args)\n    })\n    this.on('connect', (...args: Parameters<ProxyEventTypes['connect']>) => {\n      this.port.events.emit('connect', ...args)\n    })\n    this.on('disconnect', (...args: Parameters<ProxyEventTypes['disconnect']>) => {\n      this.port.events.emit('disconnect', ...args)\n    })\n\n    this._registered = true\n  }\n\n  unregister = () => {\n    this._registered = false\n    this.closeWallet()\n    this.events.removeAllListeners()\n    // @ts-ignore\n    this.port.handleMessage = undefined\n  }\n\n  openWallet = (path?: string, intent?: OpenWalletIntent, networkId?: string | number): void => {\n    if (this.state === OpenState.CLOSED) {\n      this.state = OpenState.OPENING\n      const sessionId = `${performance.now()}`\n      this._sessionId = sessionId\n      this.sendMessage({\n        idx: -1,\n        type: EventType.OPEN,\n        data: {\n          path,\n          intent,\n          networkId,\n          sessionId\n        },\n        clientVersion: VERSION\n      })\n    }\n  }\n\n  closeWallet() {\n    this.sendMessage({\n      idx: -1,\n      type: EventType.CLOSE,\n      data: null,\n      clientVersion: VERSION\n    })\n    this.close()\n  }\n\n  sendMessage(message: ProviderMessage<any>) {\n    if (!message.idx) {\n      throw new Error('message idx is empty')\n    }\n    this.port.sendMessage(message)\n  }\n}\n","interface UnrealInjectedWindow {\n  ue?: {\n    sequencewallettransport?: {\n      logfromjs: (message: string) => void\n      warnfromjs: (message: string) => void\n      errorfromjs: (message: string) => void\n    }\n  }\n  logsOverriddenForUnreal?: boolean\n}\ndeclare const window: Window & typeof globalThis & UnrealInjectedWindow\n\n/**\n * This will redirect console logs from Sequence.js & the wallet to the Unreal console, for debugging purposes.\n */\nexport function overrideLogs(side: 'dapp' | 'wallet') {\n  if (window.ue?.sequencewallettransport && !window.logsOverriddenForUnreal) {\n    const t = window.ue?.sequencewallettransport\n    console.log = (...args: unknown[]) => {\n      t.logfromjs(`${side}: ${stringify(args)}`)\n    }\n    console.warn = (...args: unknown[]) => {\n      t.warnfromjs(`${side}: ${stringify(args)}`)\n    }\n    console.error = (...args: unknown[]) => {\n      t.errorfromjs(`${side}: ${stringify(args)}`)\n    }\n    window.logsOverriddenForUnreal = true\n  }\n}\n\nfunction stringify(things: unknown[]): string {\n  return things.map(a => (typeof a === 'object' ? (a instanceof Error ? a.message : JSON.stringify(a)) : String(a))).join(' ')\n}\n","import { OpenWalletIntent, ProviderMessage, InitState, WindowSessionParams } from '../../types'\nimport { BaseProviderTransport } from '../base-provider-transport'\nimport { base64EncodeObject, bigintReplacer } from '@0xsequence/utils'\nimport { overrideLogs } from './overridelogs'\n\nlet registeredUnrealMessageProvider: UnrealMessageProvider | undefined\n\n// all lowercase is an annoying limitation of Unreal CEF BindUObject\ninterface UnrealInjectedSequenceJSWindow {\n  ue?: {\n    sequencewallettransport?: {\n      onmessagefromwallet?: (message: ProviderMessage<any>) => void\n      sendmessagetowallet: (message: string) => void\n    }\n  }\n}\n\ndeclare const window: Window & typeof globalThis & UnrealInjectedSequenceJSWindow\n\n/**\n * Initialized on dApp side\n */\nexport class UnrealMessageProvider extends BaseProviderTransport {\n  private walletURL: URL\n\n  constructor(walletAppURL: string) {\n    super()\n    this.walletURL = new URL(walletAppURL)\n  }\n\n  register = () => {\n    overrideLogs('dapp')\n    if (registeredUnrealMessageProvider) {\n      // overriding the registered message provider\n      registeredUnrealMessageProvider.unregister()\n      registeredUnrealMessageProvider = this\n    }\n\n    // listen for incoming messages from wallet\n    if (window.ue?.sequencewallettransport) {\n      window.ue.sequencewallettransport.onmessagefromwallet = this.onUnrealCallback\n    }\n    registeredUnrealMessageProvider = this\n\n    this._registered = true\n    console.log('registering transport!')\n  }\n\n  unregister = () => {\n    this._registered = false\n    this.closeWallet()\n\n    // disable message listener\n    if (registeredUnrealMessageProvider === this) {\n      registeredUnrealMessageProvider = undefined\n    }\n    if (window.ue?.sequencewallettransport?.onmessagefromwallet === this.onUnrealCallback) {\n      delete window.ue.sequencewallettransport.onmessagefromwallet\n    }\n\n    // clear event listeners\n    this.events.removeAllListeners()\n  }\n\n  openWallet = (path?: string, intent?: OpenWalletIntent, networkId?: string | number): void => {\n    if (this.isOpened()) {\n      // TODO focus wallet\n      console.log('wallet already open!')\n      return\n    }\n\n    console.log('opening wallet!')\n    // Instantiate new walletURL for this call\n    const walletURL = new URL(this.walletURL.href)\n    const windowSessionParams = new WindowSessionParams()\n\n    if (path) {\n      walletURL.pathname = path.toLowerCase()\n    }\n\n    // Set session, intent and network id on walletURL\n    this._init = InitState.NIL\n    this._sessionId = `${performance.now()}`\n    windowSessionParams.set('sid', this._sessionId)\n\n    if (intent) {\n      // encode intent as base64 url-encoded param\n      windowSessionParams.set('intent', base64EncodeObject(intent))\n    }\n    if (networkId) {\n      windowSessionParams.set('net', `${networkId}`)\n    }\n    // serialize params\n    walletURL.search = windowSessionParams.toString()\n\n    console.log('opening wallet to', walletURL.href)\n\n    window.open(walletURL.href)\n  }\n\n  closeWallet() {\n    this.close()\n  }\n\n  // onmessage, receives ProviderMessageResponse from the wallet unreal transport\n  private onUnrealCallback = (message: ProviderMessage<any>) => {\n    if (!message) {\n      throw new Error('ProviderMessage object is empty')\n    }\n\n    // handle message with base message provider\n    this.handleMessage(message)\n  }\n\n  // all lowercase is an annoying limitation of Unreal CEF BindUObject\n  sendMessage(message: ProviderMessage<unknown>) {\n    const postedMessage = typeof message !== 'string' ? JSON.stringify(message, bigintReplacer) : message\n    console.log('Sending message to wallet:', postedMessage)\n    window.ue?.sequencewallettransport?.sendmessagetowallet(postedMessage)\n  }\n}\n","import { WalletRequestHandler } from '../wallet-request-handler'\nimport { BaseWalletTransport } from '../base-wallet-transport'\nimport { InitState, ProviderMessage } from '../../types'\nimport { Runtime } from 'webextension-polyfill'\nimport { logger } from '@0xsequence/utils'\n\nexport const CHANNEL_ID = 'sequence-extension-message-handler'\n\nexport class ExtensionMessageHandler extends BaseWalletTransport {\n  private port: any\n\n  constructor(\n    walletRequestHandler: WalletRequestHandler,\n    public runtime: Runtime.Static\n  ) {\n    super(walletRequestHandler)\n    this._init = InitState.OK\n  }\n\n  register() {\n    this._registered = true\n    this.port = this.runtime.connect({ name: CHANNEL_ID })\n  }\n\n  sendMessage(message: ProviderMessage<any>) {\n    logger.info('[ExtensionMessageHandler send]', message)\n    this.port.postMessage(message)\n  }\n}\n","import { InitState, OpenWalletIntent, ProviderMessage } from '../../types'\nimport { BaseProviderTransport } from '../base-provider-transport'\nimport { CHANNEL_ID } from './extension-message-handler'\n\nimport { Runtime } from 'webextension-polyfill'\n\nexport class ExtensionMessageProvider extends BaseProviderTransport {\n  constructor(runtime: Runtime.Static) {\n    super()\n\n    runtime.onConnect.addListener(port => {\n      if (port.name === CHANNEL_ID) {\n        this._init = InitState.OK\n\n        port.onMessage.addListener((message: ProviderMessage<any>) => {\n          this.handleMessage(message)\n        })\n      }\n    })\n  }\n\n  register = () => {\n    this._registered = true\n  }\n\n  sendMessage(message: ProviderMessage<any>) {\n    //noop\n  }\n\n  unregister() {\n    //noop\n  }\n\n  openWallet(path?: string, intent?: OpenWalletIntent, networkId?: string | number) {\n    //noop\n  }\n\n  closeWallet() {\n    //noop\n  }\n}\n","import { JsonRpcRequest, JsonRpcResponse } from '@0xsequence/network'\nimport { logger } from '@0xsequence/utils'\nimport { EventEmitter2 as EventEmitter } from 'eventemitter2'\nimport {\n  ProviderMessageResponseCallback,\n  ProviderMessage,\n  EventType,\n  ProviderMessageRequest,\n  ProviderMessageResponse\n} from '../../types'\n\nexport interface Stream {\n  on(ev: string | symbol, fn: (...args: any[]) => void): void\n  writable: boolean\n  write(chunk: any, cb?: (error: Error | null | undefined) => void): boolean\n}\n\n// to be used on injected window.ethereum EIP1193 proxy\nexport abstract class BaseInjectedTransport extends EventEmitter {\n  protected responseCallbacks = new Map<number, ProviderMessageResponseCallback>()\n\n  private _messageIdx = 0\n  protected nextMessageIdx = () => ++this._messageIdx\n\n  constructor(private stream: Stream) {\n    super()\n\n    this.stream.on('data', this.handleMessage)\n  }\n\n  private handleMessage = (message: ProviderMessage<JsonRpcResponse>) => {\n    if (!message.type || !message.data) {\n      return\n    }\n\n    logger.info('[received message]', message)\n\n    const requestIdx = message.idx\n    const responseCallback = this.responseCallbacks.get(requestIdx)\n    if (requestIdx) {\n      this.responseCallbacks.delete(requestIdx)\n    }\n\n    switch (message.type) {\n      case EventType.MESSAGE:\n        if (responseCallback) {\n          this.emit(EventType.MESSAGE, message)\n          responseCallback(message.data.error, message)\n        } else {\n          // NOTE: this would occur if 'idx' isn't set, which should never happen\n          // or when we register two handler, or duplicate messages with the same idx are sent,\n          // all of which should be prevented prior to getting to this point\n          throw new Error('impossible state')\n        }\n        break\n      case EventType.DISCONNECT:\n      case EventType.ACCOUNTS_CHANGED:\n      case EventType.CHAIN_CHANGED:\n        this.emit(message.type, message.data)\n        break\n      default:\n        console.error('unknown message type', message)\n        break\n    }\n  }\n\n  protected sendMessageRequest = async (message: ProviderMessageRequest): Promise<ProviderMessageResponse> => {\n    return new Promise((resolve, reject) => {\n      if (!message.idx || message.idx <= 0) {\n        reject(new Error('message idx not set'))\n      }\n\n      const responseCallback: ProviderMessageResponseCallback = (error: any, response?: ProviderMessageResponse) => {\n        if (error) {\n          reject(error)\n        } else if (response) {\n          resolve(response)\n        } else {\n          throw new Error('no valid response to return')\n        }\n      }\n\n      const { idx } = message\n      if (!this.responseCallbacks.get(idx)) {\n        this.responseCallbacks.set(idx, responseCallback)\n      } else {\n        reject(new Error('duplicate message idx, should never happen'))\n      }\n\n      this.sendMessage(message)\n    })\n  }\n\n  private sendMessage(message: ProviderMessage<JsonRpcRequest>) {\n    if (!this.stream.writable) {\n      console.error('window post message stream is not writable')\n    }\n\n    this.stream.write(message)\n  }\n}\n","import { OpenWalletIntent, ProviderMessage, InitState, WindowSessionParams } from '../../types'\nimport { BaseProviderTransport } from '../base-provider-transport'\nimport { logger, base64EncodeObject, bigintReplacer, bigintReviver } from '@0xsequence/utils'\nimport { isBrowserExtension, isUnityPlugin } from '../../utils'\n\n// ..\nlet registeredWindowMessageProvider: WindowMessageProvider | undefined\n\nexport class WindowMessageProvider extends BaseProviderTransport {\n  private walletURL: URL\n  private walletWindow: Window | null\n\n  constructor(walletAppURL: string) {\n    super()\n    this.walletURL = new URL(walletAppURL)\n  }\n\n  register = () => {\n    if (registeredWindowMessageProvider) {\n      // overriding the registered message provider\n      registeredWindowMessageProvider.unregister()\n      registeredWindowMessageProvider = this\n    }\n\n    // listen for incoming messages from wallet\n    window.addEventListener('message', this.onWindowEvent)\n    registeredWindowMessageProvider = this\n\n    // open heartbeat\n    this.on('open', () => {\n      // Heartbeat to track if window closed\n      const popup = this.walletWindow\n      const interval = setInterval(() => {\n        if (popup && popup.closed) {\n          clearInterval(interval)\n          this.close()\n        }\n      }, 500)\n    })\n\n    // close clean up\n    this.on('close', () => {\n      if (this.walletWindow) {\n        this.walletWindow.close()\n        this.walletWindow = null\n      }\n    })\n\n    this._registered = true\n  }\n\n  unregister = () => {\n    this._registered = false\n    this.closeWallet()\n\n    // disable message listener\n    if (registeredWindowMessageProvider === this) {\n      registeredWindowMessageProvider = undefined\n    }\n    window.removeEventListener('message', this.onWindowEvent)\n\n    // clear event listeners\n    this.events.removeAllListeners()\n  }\n\n  openWallet = (path?: string, intent?: OpenWalletIntent, networkId?: string | number): void => {\n    if (this.walletWindow && this.isOpened()) {\n      // TODO: update the location of window to path\n      this.walletWindow.focus()\n      return\n    }\n\n    // Instantiate new walletURL for this call\n    const walletURL = new URL(this.walletURL.href)\n    const windowSessionParams = new WindowSessionParams()\n\n    if (path && path !== '') {\n      walletURL.pathname = path.toLowerCase()\n    }\n\n    // Set session, intent and network id on walletURL\n    this._init = InitState.NIL\n    this._sessionId = `${performance.now()}`\n    windowSessionParams.set('sid', this._sessionId)\n\n    if (intent) {\n      // for the window-transport, we eagerly/optimistically set the origin host\n      // when connecting to the wallet, however, this will be verified and enforced\n      // on the wallet-side, so if a dapp provides the wrong origin, it will be dropped.\n      if (intent.type === 'connect') {\n        if (!intent.options)\n          intent.options = {\n            app: window.location.origin\n          }\n\n        // skip setting origin host if we're in an browser extension execution context\n        // allow origin that is passed in\n        if (!isBrowserExtension() && !isUnityPlugin() && intent.options) {\n          intent.options.origin = window.location.origin\n        }\n      }\n      // encode intent as base64 url-encoded param\n      windowSessionParams.set('intent', base64EncodeObject(intent))\n    }\n    if (networkId) {\n      windowSessionParams.set('net', `${networkId}`)\n    }\n\n    // Open popup window on center of the app window\n    let windowSize: number[]\n    let windowPos: number[]\n\n    if (isBrowserExtension()) {\n      windowSize = [450, 750]\n      windowPos = [Math.abs(window.screen.width / 2 - windowSize[0] / 2), Math.abs(window.screen.height / 2 - windowSize[1] / 2)]\n    } else {\n      windowSize = [450, 750]\n      windowPos = [\n        Math.abs(window.screenX + window.innerWidth / 2 - windowSize[0] / 2),\n        Math.abs(window.screenY + window.innerHeight / 2 - windowSize[1] / 2)\n      ]\n    }\n\n    const windowFeatures =\n      `toolbar=0,location=0,menubar=0,scrollbars=yes,status=yes` +\n      `,width=${windowSize[0]},height=${windowSize[1]}` +\n      `,left=${windowPos[0]},top=${windowPos[1]}`\n\n    // serialize params\n    walletURL.search = windowSessionParams.toString()\n\n    this.walletWindow = window.open(walletURL.href, 'sequence.app', windowFeatures)\n\n    // TODO: move this somewhere else\n    // TODO: perhaps we trigger a .on('openTimeout') event..? maybe.. could help.\n\n    // Popup blocking detection and notice\n    // let warned = false\n    // const warnPopupBlocked = () => {\n    //   if (warned) return\n    //   warned = true\n    //   // alert('popup is blocked! hey yo') // NOTE: for debug purposes only\n    //   throw new Error('popup is blocked')\n    // }\n\n    // const popupCheck = setTimeout(() => {\n    //   if (!popup || popup.closed || typeof popup.closed === 'undefined') {\n    //     // popup is definitely blocked if we reach here.\n    //     warnPopupBlocked()\n    //   }\n    // }, 1000)\n\n    // const popupBlocked = popup === null || popup === undefined\n    // if (popupBlocked) {\n    //   warnPopupBlocked()\n    //   return\n    // }\n  }\n\n  closeWallet() {\n    this.close()\n    this.walletWindow?.close()\n  }\n\n  // onmessage, receives ProviderMessageResponse from the wallet post-message transport\n  private onWindowEvent = (event: MessageEvent) => {\n    // Security check, ensure message is coming from wallet origin url\n    if (event.origin !== this.walletURL.origin) {\n      // Safetly can skip events not from the wallet\n      return\n    }\n\n    let message: ProviderMessage<any>\n    try {\n      message = JSON.parse(event.data, bigintReviver)\n    } catch (err) {\n      // event is not a ProviderMessage JSON object, skip\n      return\n    }\n\n    if (!message) {\n      throw new Error('ProviderMessage object is empty')\n    }\n\n    // handle message with base message provider\n    this.handleMessage(message)\n  }\n\n  sendMessage(message: ProviderMessage<any>) {\n    if (!this.walletWindow) {\n      logger.warn('WindowMessageProvider: sendMessage failed as walletWindow is unavailable')\n      return\n    }\n    const postedMessage = typeof message !== 'string' ? JSON.stringify(message, bigintReplacer) : message\n    this.walletWindow.postMessage(postedMessage, this.walletURL.origin)\n  }\n}\n","import {\n  ProviderMessage,\n  ProviderTransport,\n  ProviderEventTypes,\n  ProviderMessageRequest,\n  ProviderMessageResponse,\n  WalletSession,\n  OpenWalletIntent,\n  ConnectDetails\n} from '../../types'\n\nimport { ProxyMessageChannelPort, ProxyMessageProvider } from '../proxy-transport'\nimport { Runtime } from 'webextension-polyfill'\nimport { UnrealMessageProvider } from '../unreal-transport'\nimport { ExtensionMessageProvider } from '../extension-transport'\nimport { WindowMessageProvider } from '../window-transport'\nimport { JsonRpcResponse } from '@0xsequence/network'\n\nexport type MuxTransportTemplate = {\n  walletAppURL?: string\n\n  // WindowMessage transport (optional)\n  windowTransport?: {\n    enabled: boolean\n  }\n\n  // ProxyMessage transport (optional)\n  proxyTransport?: {\n    enabled: boolean\n    appPort?: ProxyMessageChannelPort\n  }\n\n  // Extension transport (optional)\n  extensionTransport?: {\n    enabled: boolean\n    runtime: Runtime.Static\n  }\n\n  // Unreal Engine transport (optional)\n  unrealTransport?: {\n    enabled: boolean\n  }\n}\n\nexport function isMuxTransportTemplate(obj: any): obj is MuxTransportTemplate {\n  return (\n    obj &&\n    typeof obj === 'object' &&\n    ((obj.windowTransport && typeof obj.windowTransport === 'object') ||\n      (obj.proxyTransport && typeof obj.proxyTransport === 'object') ||\n      (obj.extensionTransport && typeof obj.extensionTransport === 'object') ||\n      (obj.unrealTransport && typeof obj.unrealTransport === 'object')) &&\n    // One of the transports must be enabled\n    ((obj.windowTransport && obj.windowTransport.enabled) ||\n      (obj.proxyTransport && obj.proxyTransport.enabled) ||\n      (obj.extensionTransport && obj.extensionTransport.enabled) ||\n      (obj.unrealTransport && obj.unrealTransport.enabled))\n  )\n}\n\nexport class MuxMessageProvider implements ProviderTransport {\n  private messageProviders: ProviderTransport[]\n  private provider: ProviderTransport | undefined\n\n  constructor(...messageProviders: ProviderTransport[]) {\n    this.messageProviders = messageProviders\n    this.provider = undefined\n  }\n\n  static new(template: MuxTransportTemplate): MuxMessageProvider {\n    const muxMessageProvider = new MuxMessageProvider()\n\n    if (template.windowTransport?.enabled && typeof window === 'object' && template.walletAppURL) {\n      const windowMessageProvider = new WindowMessageProvider(template.walletAppURL)\n      muxMessageProvider.add(windowMessageProvider)\n    }\n\n    if (template.proxyTransport?.enabled) {\n      const proxyMessageProvider = new ProxyMessageProvider(template.proxyTransport.appPort!)\n      muxMessageProvider.add(proxyMessageProvider)\n    }\n\n    if (template.extensionTransport?.enabled) {\n      const extensionMessageProvider = new ExtensionMessageProvider(template.extensionTransport.runtime)\n      muxMessageProvider.add(extensionMessageProvider)\n\n      // NOTE/REVIEW: see note in mux-message-provider\n      //\n      // We don't add the extensionMessageProvider here because we don't send requests to it anyways, we seem to\n      // send all requests to the WindowMessageProvider anyways. By allowing it, if browser restarts, it will break\n      // the entire extension because messageProvider.provider will be undefined. So this is a hack to fix it.\n    }\n\n    if (template.unrealTransport?.enabled && template.windowTransport && template.walletAppURL) {\n      const unrealMessageProvider = new UnrealMessageProvider(template.walletAppURL)\n      muxMessageProvider.add(unrealMessageProvider)\n    }\n\n    muxMessageProvider.register()\n\n    return muxMessageProvider\n  }\n\n  add(...messageProviders: ProviderTransport[]) {\n    this.messageProviders.push(...messageProviders)\n  }\n\n  register = () => {\n    if (this.messageProviders.length === 1) {\n      this.provider = this.messageProviders[0]\n      this.provider.register()\n      return\n    }\n\n    // REVIEW/NOTE: ........ this method does not work for the chrome-extension. The issue becomes\n    // when the browser quits or restarts, the \"open\" event is never triggered. Perhaps the code here is fine,\n    // or maybe its not. What should happen is when a dapp makes a request, it will call openWallet\n    // below, in which case one of the events will register. So perhaps this is fine.\n    this.messageProviders.forEach(m => {\n      m.register()\n\n      m.once('open', () => {\n        // the first one to open is the winner, and others will be unregistered\n        if (!this.provider) {\n          this.provider = m\n\n          // unregister other providers\n          this.messageProviders.forEach(m => {\n            if (this.provider !== m) {\n              m.unregister()\n            }\n          })\n        }\n      })\n    })\n  }\n\n  unregister = () => {\n    this.messageProviders.forEach(m => m.unregister())\n    this.provider = undefined\n  }\n\n  openWallet = (path?: string, intent?: OpenWalletIntent, networkId?: string | number): void => {\n    if (this.provider) {\n      this.provider.openWallet(path, intent, networkId)\n      return\n    }\n    this.messageProviders.forEach(m => m.openWallet(path, intent, networkId))\n  }\n\n  closeWallet() {\n    if (this.provider) {\n      this.provider.closeWallet()\n    }\n  }\n\n  isOpened(): boolean {\n    if (this.provider) {\n      return this.provider.isOpened()\n    }\n    return false\n  }\n\n  isConnected(): boolean {\n    if (this.provider) {\n      return this.provider.isConnected()\n    }\n    return false\n  }\n\n  on<K extends keyof ProviderEventTypes>(event: K, fn: ProviderEventTypes[K]) {\n    if (this.provider) {\n      this.provider.on(event, fn)\n      return\n    }\n    this.messageProviders.forEach(m => {\n      m.on(event, fn)\n    })\n  }\n\n  once<K extends keyof ProviderEventTypes>(event: K, fn: ProviderEventTypes[K]) {\n    if (this.provider) {\n      this.provider.once(event, fn)\n      return\n    }\n    this.messageProviders.forEach(m => {\n      m.once(event, fn)\n    })\n  }\n\n  emit<K extends keyof ProviderEventTypes>(event: K, ...args: Parameters<ProviderEventTypes[K]>): boolean {\n    if (this.provider) {\n      return this.provider.emit(event, ...args)\n    }\n    for (let i = 0; i < this.messageProviders.length; i++) {\n      this.messageProviders[i].emit(event, ...args)\n    }\n    return true\n  }\n\n  request(request: { method: string; params?: any[]; chainId?: number }): Promise<any> {\n    if (!this.provider) {\n      throw new Error('impossible state, wallet must be opened first')\n    }\n    return this.provider.request(request)\n  }\n\n  sendMessage(message: ProviderMessage<any>) {\n    if (!message.idx || message.idx <= 0) {\n      throw new Error('message idx is empty')\n    }\n\n    if (this.provider) {\n      this.provider.sendMessage(message)\n    } else {\n      throw new Error('impossible state, wallet must be opened first')\n    }\n  }\n\n  sendMessageRequest = async (message: ProviderMessageRequest): Promise<ProviderMessageResponse> => {\n    if (this.provider) {\n      return this.provider.sendMessageRequest(message)\n    }\n    throw new Error('impossible state, wallet must be opened first')\n  }\n\n  handleMessage(message: ProviderMessage<any>): void {\n    if (this.provider) {\n      this.provider.handleMessage(message)\n      return\n    }\n    throw new Error('impossible state, wallet must be opened first')\n  }\n\n  waitUntilOpened = async (): Promise<WalletSession | undefined> => {\n    if (this.provider) {\n      return this.provider.waitUntilOpened()\n    }\n    return Promise.race(this.messageProviders.map(p => p.waitUntilOpened()))\n  }\n\n  waitUntilConnected = async (): Promise<ConnectDetails> => {\n    if (this.provider) {\n      return this.provider.waitUntilConnected()\n    }\n    throw new Error('impossible state, wallet must be opened first')\n  }\n}\n","import { Account, AccountStatus } from '@0xsequence/account'\nimport { signAuthorization, AuthorizationOptions } from '@0xsequence/auth'\nimport { commons } from '@0xsequence/core'\nimport {\n  ChainId,\n  ChainIdLike,\n  findNetworkConfig,\n  findSupportedNetwork,\n  NetworkConfig,\n  EIP1193Provider,\n  JsonRpcResponse\n} from '@0xsequence/network'\nimport { logger, toHexString, TypedData } from '@0xsequence/utils'\nimport { ethers } from 'ethers'\nimport { EventEmitter2 as EventEmitter } from 'eventemitter2'\n\nimport { fromExtended } from '../extended'\nimport { validateTransactionRequest } from '../transactions'\nimport {\n  ConnectDetails,\n  ConnectOptions,\n  ErrSignedInRequired,\n  MessageToSign,\n  NetworkedConnectOptions,\n  OpenWalletIntent,\n  PromptConnectDetails,\n  ProviderEventTypes,\n  ProviderMessageRequest,\n  ProviderMessageRequestHandler,\n  ProviderMessageResponse,\n  ProviderRpcError,\n  TypedEventEmitter,\n  WalletSession\n} from '../types'\nimport { prefixEIP191Message } from '../utils'\n\nconst SIGNER_READY_TIMEOUT = 10000\n\nexport interface WalletSignInOptions {\n  connect?: boolean\n  defaultNetworkId?: number\n}\n\nexport class WalletRequestHandler implements EIP1193Provider, ProviderMessageRequestHandler {\n  // signer interface of the wallet. A null value means there is no signer (ie. user not signed in). An undefined\n  // value means the signer state is unknown, usually meaning the wallet app is booting up and initializing. Of course\n  // a Signer value is the actually interface to a signed-in account\n  private account: Account | null | undefined\n  private signerReadyCallbacks: Array<() => void> = []\n\n  private prompter: WalletUserPrompter | null\n  private networks: NetworkConfig[]\n\n  private _openIntent?: OpenWalletIntent\n  private _connectOptions?: ConnectOptions\n\n  private events: TypedEventEmitter<ProviderEventTypes> = new EventEmitter() as TypedEventEmitter<ProviderEventTypes>\n\n  onConnectOptionsChange: ((connectOptions: ConnectOptions | undefined) => void) | undefined = undefined\n\n  constructor(account: Account | null | undefined, prompter: WalletUserPrompter | null, networks: NetworkConfig[]) {\n    this.account = account\n    this.prompter = prompter\n    this.networks = networks\n  }\n\n  defaultChainId(): number {\n    return this.prompter?.getDefaultChainId() ?? this.networks[0].chainId\n  }\n\n  async signIn(account: Account | null, options: WalletSignInOptions = {}) {\n    this.setAccount(account)\n\n    const { connect, defaultNetworkId } = options\n\n    // Optionally, connect the dapp and wallet. In case connectOptions are provided, we will perform\n    // necessary auth request, and then notify the dapp of the 'connect' details.\n    //\n    // NOTE: if a user is signing into a dapp from a fresh state, and and auth request is made\n    // we don't trigger the promptConnect flow, as we consider the user just authenticated\n    // for this dapp, so its safe to authorize in the promptSignInConnect() which will directly\n    // connect after signing in.\n    //\n    // NOTE: signIn can optionally connect and notify dapp at this time for new signIn flows\n    if (connect) {\n      const connectOptions = this._connectOptions\n\n      let connectDetails: ConnectDetails | PromptConnectDetails\n\n      if (this.prompter !== null) {\n        connectDetails = await this.prompter?.promptSignInConnect(connectOptions)\n      } else {\n        connectDetails = await this.connect(connectOptions)\n      }\n\n      this.notifyConnect(connectDetails)\n\n      if (!connectOptions || connectOptions.keepWalletOpened !== true) {\n        this.notifyClose()\n      }\n    }\n\n    if (defaultNetworkId && this.defaultChainId() !== defaultNetworkId) {\n      await this.prompter?.promptChangeNetwork(defaultNetworkId)\n    }\n  }\n\n  signOut() {\n    if (this.account) {\n      this.notifyDisconnect()\n    }\n\n    // signed out state\n    this.setAccount(null)\n  }\n\n  signerReset() {\n    // resetting signer puts the wallet in an uninitialized state, which requires the app to\n    // re-initiatize and set the signer either as \"null\" (ie. no signer) or \"Signer\" (ie. signed in).\n    this.account = undefined\n  }\n\n  signerReady(timeout: number = SIGNER_READY_TIMEOUT): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (this.account !== undefined) {\n        resolve()\n      } else {\n        setTimeout(() => {\n          if (this.account === undefined) {\n            this.signerReadyCallbacks = []\n            reject(`signerReady timed out`)\n          }\n        }, timeout)\n        this.signerReadyCallbacks.push(resolve)\n      }\n    })\n  }\n\n  async connect(options?: NetworkedConnectOptions): Promise<ConnectDetails> {\n    if (!this.account) {\n      return {\n        connected: false,\n        chainId: '0x0',\n        error: 'unable to connect without signed in account'\n      }\n    }\n\n    const networkId = options?.networkId ?? this.defaultChainId() ?? ChainId.MAINNET\n    const chainId = findSupportedNetwork(networkId)!.chainId\n\n    const connectDetails: ConnectDetails = {\n      connected: true,\n      chainId: ethers.toQuantity(chainId)\n    }\n\n    if (options && options.authorize) {\n      // Perform ethauth eip712 request and construct the ConnectDetails response\n      // including the auth proof\n      const authOptions: AuthorizationOptions = {\n        app: options.app,\n        origin: options.origin,\n        expiry: options.expiry,\n        nonce: options.authorizeNonce\n      }\n      // if (typeof(options.authorize) === 'object') {\n      //   authOptions = { ...authOptions, ...options.authorize }\n      // }\n\n      try {\n        // TODO: Either implement account as a signer, or change signAuthorization to accept an account\n        connectDetails.proof = await signAuthorization(this.account, chainId, authOptions)\n      } catch (err) {\n        logger.warn(`connect, signAuthorization failed for options: ${JSON.stringify(options)}, due to: ${err.message}`)\n        return {\n          connected: false,\n          chainId: '0x0',\n          error: `signAuthorization failed: ${err.message}`\n        }\n      }\n    }\n\n    // Build session response for connect details\n    connectDetails.session = this.walletSession(chainId)\n\n    return connectDetails\n  }\n\n  promptConnect = async (options?: NetworkedConnectOptions): Promise<ConnectDetails> => {\n    if (!options && !this._connectOptions) {\n      // this is an unexpected state and should not happen\n      throw new Error('prompter connect options are empty')\n    }\n\n    if (!this.prompter) {\n      // if prompter is null, we'll auto connect\n      return this.connect(options)\n    }\n\n    const promptConnectDetails = await this.prompter.promptConnect(options || this._connectOptions).catch(_ => {\n      return { connected: false } as ConnectDetails\n    })\n\n    const connectDetails: ConnectDetails = promptConnectDetails\n    if (connectDetails.connected && !connectDetails.session) {\n      connectDetails.session = await this.walletSession(options?.networkId)\n    }\n\n    return promptConnectDetails\n  }\n\n  // sendMessageRequest will unwrap the ProviderMessageRequest and send it to the JsonRpcHandler\n  // (aka, the signer in this instance) and then responds with a wrapped response of\n  // ProviderMessageResponse to be sent over the transport\n  async sendMessageRequest(message: ProviderMessageRequest): Promise<ProviderMessageResponse> {\n    // Older versions of the client require the response to be jsonrpc wrapped\n    const majorVersion = Number(message.clientVersion?.split('.')[0] || '0')\n    const isJsonRpcResponse = majorVersion < 2\n    const jsonRpcResponse: JsonRpcResponse = {\n      id: message.data.id!,\n      jsonrpc: '2.0',\n      result: null,\n      error: undefined\n    }\n\n    try {\n      const result = await this.request({\n        method: message.data.method,\n        params: message.data.params,\n        chainId: message.chainId\n      })\n\n      return {\n        ...message,\n        data: isJsonRpcResponse ? { ...jsonRpcResponse, result } : result\n      }\n    } catch (error) {\n      return {\n        ...message,\n        data: isJsonRpcResponse ? { ...jsonRpcResponse, error } : { error }\n      }\n    }\n  }\n\n  async request(request: { method: string; params?: any[]; chainId?: number }): Promise<any> {\n    await this.getAccount()\n\n    try {\n      // only allow public json rpc method to the provider when user is not logged in, aka signer is not set\n      if ((!this.account || this.account === null) && !permittedJsonRpcMethods.includes(request.method)) {\n        // throw new Error(`not logged in. ${request.method} is unavailable`)\n        throw ErrSignedInRequired\n      }\n\n      // wallet account\n      const account = this.account\n      if (!account) {\n        throw new Error('WalletRequestHandler: wallet account is not configured')\n      }\n\n      // fetch the provider for the specific chain, or undefined will select defaultChain\n      const provider = this.account?.providerFor(request.chainId ?? this.defaultChainId())\n      if (!provider) {\n        throw new Error(`WalletRequestHandler: wallet provider is not configured for chainId ${request.chainId}`)\n      }\n      const jsonRpcProvider = provider instanceof ethers.JsonRpcProvider ? provider : undefined\n\n      switch (request.method) {\n        case 'net_version': {\n          if (!jsonRpcProvider) {\n            throw new Error(`Account provider doesn't support send method`)\n          }\n\n          return await jsonRpcProvider.send('net_version', [])\n        }\n\n        case 'eth_chainId': {\n          if (!jsonRpcProvider) {\n            throw new Error(`Account provider doesn't support send method`)\n          }\n\n          return await jsonRpcProvider.send('eth_chainId', [])\n        }\n\n        case 'eth_accounts': {\n          return [account.address]\n        }\n\n        case 'eth_getBalance': {\n          const [accountAddress, blockTag] = request.params!\n          const walletBalance = await provider.getBalance(accountAddress, blockTag)\n          return toHexString(walletBalance)\n        }\n\n        case 'sequence_sign':\n        case 'personal_sign':\n        case 'eth_sign': {\n          // note: message from json-rpc input is in hex format\n          let message: any\n\n          // there is a difference in the order of the params:\n          // sequence_sign, personal_sign: [data, address]\n          // eth_sign: [address, data]\n          switch (request.method) {\n            case 'sequence_sign':\n            case 'personal_sign': {\n              const [data, _address] = request.params!\n              message = data\n              break\n            }\n            case 'eth_sign': {\n              const [_address, data] = request.params!\n              message = data\n              break\n            }\n          }\n\n          let sig = ''\n\n          // Message must be prefixed with \"\\x19Ethereum Signed Message:\\n\"\n          // as defined by EIP-191\n          const prefixedMessage = prefixEIP191Message(message)\n\n          // TODO:\n          // if (process.env.TEST_MODE === 'true' && this.prompter === null) {\n          const sequenceVerified = request.method === 'sequence_sign'\n\n          if (this.prompter === null) {\n            // prompter is null, so we'll sign from here\n            sig = await account.signMessage(\n              prefixedMessage,\n              request.chainId ?? this.defaultChainId(),\n              sequenceVerified ? 'eip6492' : 'ignore'\n            )\n          } else {\n            sig = await this.prompter.promptSignMessage(\n              {\n                chainId: request.chainId,\n                message: ethers.getBytes(prefixedMessage),\n                eip6492: sequenceVerified\n              },\n              this.connectOptions\n            )\n          }\n\n          if (sig && sig.length > 0) {\n            return sig\n          } else {\n            // The user has declined the request when value is null\n            throw new Error('declined by user')\n          }\n        }\n\n        case 'sequence_signTypedData_v4':\n        case 'eth_signTypedData':\n        case 'eth_signTypedData_v4': {\n          // note: signingAddress from json-rpc input is in hex format, and typedDataObject\n          // should be an object, but in some instances may be double string encoded\n          const [signingAddress, typedDataObject] = request.params!\n\n          let typedData: TypedData | undefined = undefined\n          if (typeof typedDataObject === 'string') {\n            try {\n              typedData = JSON.parse(typedDataObject)\n            } catch (e) {\n              console.warn('walletRequestHandler: error parsing typedData', e)\n            }\n          } else {\n            typedData = typedDataObject\n          }\n\n          if (!typedData || !typedData.domain || !typedData.types || !typedData.message) {\n            throw new Error('invalid typedData object')\n          }\n\n          let sig = ''\n\n          const sequenceVerified = request.method === 'sequence_signTypedData_v4'\n          if (this.prompter === null) {\n            // prompter is null, so we'll sign from here\n            sig = await account.signTypedData(\n              typedData.domain,\n              typedData.types,\n              typedData.message,\n              request.chainId ?? this.defaultChainId(),\n              sequenceVerified ? 'eip6492' : 'ignore'\n            )\n          } else {\n            sig = await this.prompter.promptSignMessage(\n              {\n                chainId: request.chainId,\n                typedData: typedData,\n                eip6492: sequenceVerified\n              },\n              this.connectOptions\n            )\n          }\n\n          if (sig && sig.length > 0) {\n            return sig\n          } else {\n            // The user has declined the request when value is null\n            throw new Error('declined by user')\n          }\n        }\n\n        case 'eth_sendTransaction': {\n          // https://eth.wiki/json-rpc/API#eth_sendtransaction\n          const transactionParams = fromExtended(request.params![0]).map(tx => {\n            // eth_sendTransaction uses 'gas'\n            // ethers and sequence use 'gasLimit'\n            if ('gas' in tx && tx.gasLimit === undefined) {\n              tx.gasLimit = tx.gas as any\n              delete tx.gas\n            }\n\n            return tx\n          })\n\n          validateTransactionRequest(account.address, transactionParams)\n\n          let txnHash = ''\n          if (this.prompter === null) {\n            // prompter is null, so we'll send from here\n            const txnResponse = await account.sendTransaction(transactionParams, request.chainId ?? this.defaultChainId())\n            txnHash = txnResponse?.hash ?? ''\n          } else {\n            // prompt user to provide the response\n            txnHash = await this.prompter.promptSendTransaction(transactionParams, request.chainId, this.connectOptions)\n          }\n\n          if (txnHash) {\n            return txnHash\n          } else {\n            // The user has declined the request when value is null\n            throw new Error('declined by user')\n          }\n        }\n\n        case 'eth_signTransaction': {\n          // https://eth.wiki/json-rpc/API#eth_signTransaction\n          const [transaction] = request.params!\n          const sender = ethers.getAddress(transaction.from)\n\n          if (sender !== account.address) {\n            throw new Error('sender address does not match wallet')\n          }\n\n          validateTransactionRequest(account.address, transaction)\n\n          if (this.prompter === null) {\n            // The eth_signTransaction method expects a `string` return value we instead return a `SignedTransactions` object,\n            // this can only be broadcasted using an RPC provider with support for signed Sequence transactions, like this one.\n            //\n            // TODO: verify serializing / transporting the SignedTransaction object works as expected, most likely however\n            // we will want to resolveProperties the big number values to hex strings\n            return await account.signTransactions(transaction, request.chainId ?? this.defaultChainId())\n          } else {\n            return await this.prompter.promptSignTransaction(transaction, request.chainId, this.connectOptions)\n          }\n        }\n\n        case 'eth_sendRawTransaction': {\n          // NOTE: we're not using a prompter here as the transaction is already signed\n          // and would have prompted the user upon signing.\n\n          // https://eth.wiki/json-rpc/API#eth_sendRawTransaction\n          if (commons.transaction.isSignedTransactionBundle(request.params![0])) {\n            const txChainId = Number(request.params![0].chainId)\n            const tx = await account.relayer(txChainId)!.relay(request.params![0])\n            return tx.hash\n          } else {\n            const tx = await provider.broadcastTransaction(request.params![0])\n            return tx.hash\n          }\n        }\n\n        case 'eth_getTransactionCount': {\n          const address = ethers.getAddress(request.params![0] as string)\n          const tag = request.params![1]\n\n          // TODO: Maybe we should fetch this data from the relayer or from the reader\n          // but for now we keep it simple and just use the provider\n\n          const count = await provider.getTransactionCount(address, tag)\n          return toHexString(BigInt(count))\n        }\n\n        case 'eth_blockNumber': {\n          return await provider.getBlockNumber()\n        }\n\n        case 'eth_getBlockByNumber': {\n          return await provider.getBlock(request.params![0] /* , jsonRpcRequest.params[1] */)\n        }\n\n        case 'eth_getBlockByHash': {\n          return await provider.getBlock(request.params![0] /* , jsonRpcRequest.params[1] */)\n        }\n\n        case 'eth_getTransactionByHash': {\n          return await provider.getTransaction(request.params![0])\n        }\n\n        case 'eth_call': {\n          const [transactionObject, blockTag] = request.params!\n          return await provider.call({ ...transactionObject, blockTag })\n        }\n\n        case 'eth_getCode': {\n          const [contractAddress, blockTag] = request.params!\n          return await provider.getCode(contractAddress, blockTag)\n        }\n\n        case 'eth_estimateGas': {\n          const [transactionObject] = request.params!\n          return await provider.estimateGas(transactionObject)\n        }\n\n        case 'eth_gasPrice': {\n          const feeData = await provider.getFeeData()\n          return feeData.gasPrice === null ? null : toHexString(feeData.gasPrice)\n        }\n\n        case 'wallet_switchEthereumChain': {\n          const [switchParams] = request.params!\n          if (!switchParams.chainId || switchParams.chainId.length === 0) {\n            throw new Error('invalid chainId')\n          }\n\n          const chainId = BigInt(switchParams.chainId)\n\n          this.setDefaultChainId(Number(chainId))\n\n          return null // success\n        }\n\n        // smart wallet method\n        case 'sequence_getWalletContext': {\n          return account.contexts\n        }\n\n        // smart wallet method\n        case 'sequence_getWalletConfig': {\n          const [chainId] = request.params!\n          if (chainId) {\n            return [(await account.status(chainId)).onChain.config]\n          } else {\n            return await Promise.all(\n              account.networks.map(async network => {\n                const status = await account.status(network.chainId)\n                return status.onChain.config\n              })\n            )\n          }\n        }\n\n        // smart wallet method\n        case 'sequence_getWalletState': {\n          const [chainId] = request.params!\n          // TODO: Add getWalletState to the Signer interface\n          if (chainId) {\n            return [getLegacyWalletState(chainId, await account.status(chainId))]\n          } else {\n            return await Promise.all(\n              account.networks.map(async network => {\n                const status = await account.status(network.chainId)\n                return getLegacyWalletState(network.chainId, status)\n              })\n            )\n          }\n        }\n\n        // smart wallet method\n        case 'sequence_getNetworks': {\n          // NOTE: must ensure that the response result below returns clean serialized data, which is to omit\n          // the provider and relayer objects and only return the urls so can be reinstantiated on dapp side.\n          // This is handled by this.getNetworks() but noted here for future readers.\n          return await this.getNetworks(true)\n        }\n\n        case 'sequence_isSequence': {\n          return true\n        }\n\n        // smart wallet method\n        case 'sequence_updateConfig': {\n          throw new Error('sequence_updateConfig method is not allowed from a dapp')\n          // NOTE: method is disabled as we don't need a dapp to request to update a config.\n          // However, if we ever want this, we can enable it but must also use the prompter\n          // for confirmation.\n          //\n          // const [newConfig] = request.params\n          // return await signer.updateConfig(newConfig)\n        }\n\n        // smart wallet method\n        case 'sequence_publishConfig': {\n          throw new Error('sequence_publishConfig method is not allowed from a dapp')\n        }\n\n        // relayer method\n        case 'sequence_gasRefundOptions': {\n          // TODO\n          break\n        }\n\n        // relayer method\n        case 'sequence_getNonce': {\n          // TODO\n          break\n        }\n\n        // relayer method\n        case 'sequence_relay': {\n          // TODO\n          break\n        }\n\n        // set default network of wallet\n        case 'sequence_setDefaultNetwork': {\n          const [defaultChainId] = request.params!\n\n          if (!defaultChainId) {\n            throw new Error('invalid request, method argument defaultChainId cannot be empty')\n          }\n\n          this.setDefaultChainId(defaultChainId)\n          return await this.getNetworks(true)\n        }\n\n        default: {\n          if (!jsonRpcProvider) {\n            throw new Error(`Account provider doesn't support send method`)\n          }\n\n          // NOTE: provider here will be chain-bound if chainId is provided\n          return await jsonRpcProvider.send(request.method, request.params!)\n        }\n      }\n    } catch (err) {\n      logger.error(err)\n      throw { message: typeof err == 'string' ? err : err?.message || 'unkown error', code: 4001 } as ProviderRpcError\n    }\n  }\n\n  on<K extends keyof ProviderEventTypes>(event: K, fn: ProviderEventTypes[K]) {\n    this.events.on(event, fn as any)\n  }\n\n  once<K extends keyof ProviderEventTypes>(event: K, fn: ProviderEventTypes[K]) {\n    this.events.once(event, fn as any)\n  }\n\n  async getAddress(): Promise<string> {\n    return this.account?.address ?? ''\n  }\n\n  get openIntent(): OpenWalletIntent | undefined {\n    return this._openIntent\n  }\n\n  setOpenIntent(intent: OpenWalletIntent | undefined) {\n    this._openIntent = intent\n  }\n\n  get connectOptions(): ConnectOptions | undefined {\n    return this._connectOptions\n  }\n\n  setConnectOptions(options: ConnectOptions | undefined) {\n    this._connectOptions = options\n    this.onConnectOptionsChange?.(options)\n  }\n\n  async setDefaultChainId(chainId: number): Promise<number> {\n    await this.prompter?.promptChangeNetwork(chainId)\n    return this.defaultChainId()\n  }\n\n  async getNetworks(jsonRpcResponse?: boolean): Promise<NetworkConfig[]> {\n    if (!this.account) {\n      logger.warn('signer not set: getNetworks is returning an empty list')\n      return []\n    }\n\n    if (jsonRpcResponse) {\n      // omit provider and relayer objects as they are not serializable\n      return this.account.networks.map(n => {\n        const network: NetworkConfig = { ...n }\n        network.provider = undefined\n        network.relayer = undefined\n        return network\n      })\n    } else {\n      return this.account.networks\n    }\n  }\n\n  walletSession(networkId?: ChainIdLike): WalletSession | undefined {\n    if (!this.account) {\n      return undefined\n    }\n\n    const session = {\n      walletContext: this.account.contexts,\n      accountAddress: this.account.address,\n      // The dapp shouldn't access the relayer directly, and the provider (as an object) is not serializable.\n      networks: this.account.networks.map(n => ({ ...n, provider: undefined, relayer: undefined }))\n    }\n\n    if (networkId) {\n      const network = findNetworkConfig(session.networks, networkId)\n\n      if (network) {\n        // Delete the isDefaultChain property from the session network\n        session.networks?.forEach(n => delete n.isDefaultChain)\n\n        // Add the isDefaultChain property to the network with the given networkId\n        network.isDefaultChain = true\n      }\n    }\n\n    return session\n  }\n\n  notifyConnect(connectDetails: ConnectDetails, origin?: string) {\n    console.log('emit connect', connectDetails)\n    this.events.emit('connect', connectDetails)\n    if (connectDetails.session?.accountAddress) {\n      this.events.emit('accountsChanged', [connectDetails.session?.accountAddress], origin)\n    }\n  }\n\n  notifyDisconnect(origin?: string) {\n    this.events.emit('accountsChanged', [], origin)\n    this.events.emit('disconnect', undefined, origin)\n  }\n\n  notifyChainChanged(chainId: number, origin?: string) {\n    this.events.emit('chainChanged', ethers.toQuantity(chainId), origin)\n  }\n\n  async notifyNetworks(networks?: NetworkConfig[]) {\n    const n = networks || (await this.getNetworks(true))\n    this.events.emit('networks', n)\n    if (n.length > 0) {\n      const defaultNetwork = n.find(network => network.chainId === this.defaultChainId())\n      if (defaultNetwork) {\n        this.events.emit('chainChanged', ethers.toQuantity(defaultNetwork.chainId))\n      }\n    } else {\n      this.events.emit('chainChanged', '0x0')\n    }\n  }\n\n  async notifyWalletContext() {\n    if (!this.account) {\n      logger.warn('signer not set: skipping to notify wallet context')\n      return\n    }\n    const walletContext = this.account.contexts\n    this.events.emit('walletContext', walletContext)\n  }\n\n  notifyClose(error?: ProviderRpcError) {\n    this.events.emit('close', error)\n  }\n\n  isSignedIn = async (): Promise<boolean> => {\n    await this.signerReady()\n    return !!this.account\n  }\n\n  getAccount = async (): Promise<Account | null> => {\n    await this.signerReady()\n    if (this.account === undefined) {\n      throw new Error('signerReady failed resolve')\n    }\n    return this.account\n  }\n\n  setAccount(account: Account | null | undefined) {\n    this.account = account\n\n    if (account !== undefined) {\n      for (let i = 0; i < this.signerReadyCallbacks.length; i++) {\n        this.signerReadyCallbacks[i]()\n      }\n      this.signerReadyCallbacks = []\n    }\n  }\n\n  private async handleConfirmWalletDeployPrompt(\n    prompter: WalletUserPrompter,\n    account: Account,\n    sequenceVerified: boolean,\n    chainId?: number\n  ): Promise<boolean> {\n    // check if wallet is deployed and up to date, if not, prompt user to deploy\n    // if no chainId is provided, we'll assume the wallet is auth chain wallet and is up to date\n    if (!chainId) {\n      return true\n    }\n\n    const skipsDeploy = (status: AccountStatus) => {\n      return status.canOnchainValidate || (status.original.version === 2 && sequenceVerified)\n    }\n\n    const status = await account.status(chainId)\n    if (skipsDeploy(status)) {\n      return true\n    }\n\n    const promptResult = await prompter.promptConfirmWalletDeploy(chainId, this.connectOptions)\n\n    // if client returned true, check again to make sure wallet is deployed and up to date\n    if (promptResult) {\n      const status2 = await account.status(chainId)\n\n      if (skipsDeploy(status2)) {\n        return true\n      } else {\n        logger.error('WalletRequestHandler: result for promptConfirmWalletDeploy is not correct')\n        return false\n      }\n    }\n\n    return false\n  }\n}\n\nexport interface WalletUserPrompter {\n  getDefaultChainId(): number\n\n  promptConnect(options?: ConnectOptions): Promise<PromptConnectDetails>\n  promptSignInConnect(options?: ConnectOptions): Promise<PromptConnectDetails>\n\n  promptSignMessage(message: MessageToSign, options?: ConnectOptions): Promise<string>\n  promptSignTransaction(txn: commons.transaction.Transactionish, chainId?: number, options?: ConnectOptions): Promise<string>\n  promptSendTransaction(txn: commons.transaction.Transactionish, chainId?: number, options?: ConnectOptions): Promise<string>\n  promptConfirmWalletDeploy(chainId: number, options?: ConnectOptions): Promise<boolean>\n\n  promptChangeNetwork(chainId: number): Promise<boolean>\n}\n\ninterface LegacyWalletState {\n  context: commons.context.WalletContext\n  config?: commons.config.Config\n\n  // the wallet address\n  address: string\n\n  // the chainId of the network\n  chainId: number\n\n  // whether the wallet has been ever deployed\n  deployed: boolean\n\n  // the imageHash of the `config` WalletConfig\n  imageHash: string\n\n  // the last imageHash of a WalletConfig, stored on-chain\n  lastImageHash?: string\n\n  // whether the WalletConfig object itself has been published to logs\n  published?: boolean\n\n  status: AccountStatus\n}\n\nfunction getLegacyWalletState(chainId: number, status: AccountStatus): LegacyWalletState {\n  return {\n    context: status.original.context,\n    config: status.onChain.config,\n    address: commons.context.addressOf(status.original.context, status.original.imageHash),\n    chainId,\n    deployed: status.onChain.deployed,\n    imageHash: status.imageHash,\n    lastImageHash: status.onChain.imageHash,\n    published: true,\n    status\n  }\n}\n\nconst permittedJsonRpcMethods = [\n  'net_version',\n  'eth_chainId',\n  'eth_getBalance',\n  'eth_getTransactionCount',\n  'eth_blockNumber',\n  'eth_getBlockByNumber',\n  'eth_getBlockByHash',\n  'eth_getTransactionByHash',\n  'eth_getCode',\n  'eth_estimateGas',\n  'eth_gasPrice',\n\n  'sequence_getWalletContext',\n  'sequence_getNetworks',\n  'sequence_setDefaultNetwork'\n]\n","import { ethers } from 'ethers'\n\nimport { SequenceProvider, SingleNetworkSequenceProvider } from './provider'\nimport { SequenceClient } from './client'\nimport { commons } from '@0xsequence/core'\nimport { ChainIdLike, NetworkConfig } from '@0xsequence/network'\nimport { resolveArrayProperties } from './utils'\nimport { WalletUtils } from './utils/index'\nimport { OptionalChainIdLike, OptionalEIP6492 } from './types'\n\nexport interface ISequenceSigner extends Omit<ethers.Signer, 'connect'> {\n  getProvider(): SequenceProvider\n  getProvider(chainId: ChainIdLike): SingleNetworkSequenceProvider\n  getProvider(chainId?: ChainIdLike): SequenceProvider | SingleNetworkSequenceProvider\n\n  getSigner(): SequenceSigner\n  getSigner(chainId: ChainIdLike): SingleNetworkSequenceSigner\n  getSigner(chainId?: ChainIdLike): SequenceSigner | SingleNetworkSequenceSigner\n\n  getWalletConfig(chainId?: ChainIdLike): Promise<commons.config.Config>\n  getNetworks(): Promise<NetworkConfig[]>\n\n  connect: (provider: SequenceProvider) => SequenceSigner\n\n  signMessage(message: ethers.BytesLike, options?: OptionalChainIdLike & OptionalEIP6492): Promise<string>\n\n  signTypedData(\n    domain: ethers.TypedDataDomain,\n    types: Record<string, Array<ethers.TypedDataField>>,\n    message: Record<string, any>,\n    options?: OptionalChainIdLike & OptionalEIP6492\n  ): Promise<string>\n\n  // sendTransaction takes an unsigned transaction, or list of unsigned transactions, and then has it signed by\n  // the signer, and finally sends it to the relayer for submission to an Ethereum network.\n  // It supports any kind of transaction, including regular ethers transactions, and Sequence transactions.\n  sendTransaction(\n    transaction: ethers.TransactionRequest[] | ethers.TransactionRequest,\n    options?: OptionalChainIdLike\n  ): Promise<commons.transaction.TransactionResponse>\n\n  utils: WalletUtils\n}\n\nexport class SequenceSigner implements ISequenceSigner {\n  private readonly singleNetworkSigners: { [chainId: number]: SingleNetworkSequenceSigner } = {}\n\n  readonly _isSequenceSigner: boolean = true\n\n  get utils(): WalletUtils {\n    return this.provider.utils\n  }\n\n  constructor(\n    public client: SequenceClient,\n    public provider: SequenceProvider\n  ) {}\n\n  async getAddress(): Promise<string> {\n    return this.client.getAddress()\n  }\n\n  // This method shouldn't be used directly\n  // it exists to maintain compatibility with ethers.Signer\n  connect(provider: ethers.Provider): SequenceSigner {\n    if (!SequenceProvider.is(provider)) {\n      throw new Error('SequenceSigner can only be connected to a SequenceProvider')\n    }\n\n    return new SequenceSigner(this.client, provider)\n  }\n\n  getSigner(): SequenceSigner\n  getSigner(chainId: ChainIdLike): SingleNetworkSequenceSigner\n  getSigner(chainId?: ChainIdLike): SingleNetworkSequenceSigner | SequenceSigner\n\n  getSigner(chainId?: ChainIdLike): SingleNetworkSequenceSigner | SequenceSigner {\n    // The signer for the default network is this signer\n    if (!chainId) {\n      return this\n    }\n\n    const useChainId = this.provider.toChainId(chainId)\n\n    if (!this.singleNetworkSigners[useChainId]) {\n      this.singleNetworkSigners[useChainId] = new SingleNetworkSequenceSigner(this.client, this.provider, useChainId)\n    }\n\n    return this.singleNetworkSigners[useChainId]\n  }\n\n  /**\n   *  Resolves the chainId to use for the given request. If no chainId is provided,\n   *  it uses the chainId defined by the client (default chainId). This can be\n   *  overriden to build a single-network SequenceProvider.\n   */\n  protected useChainId(chainId?: ChainIdLike): number {\n    return this.provider.toChainId(chainId) || this.client.getChainId()\n  }\n\n  async signMessage(message: ethers.BytesLike, options?: OptionalChainIdLike & OptionalEIP6492): Promise<string> {\n    const { eip6492 = true } = options || {}\n    const chainId = this.useChainId(options?.chainId)\n    return this.client.signMessage(message, { eip6492, chainId })\n  }\n\n  async signTypedData(\n    domain: ethers.TypedDataDomain,\n    types: Record<string, Array<ethers.TypedDataField>>,\n    message: Record<string, any>,\n    options?: OptionalChainIdLike & OptionalEIP6492\n  ): Promise<string> {\n    const { eip6492 = true } = options || {}\n    const chainId = this.useChainId(options?.chainId)\n    return this.client.signTypedData({ domain, types, message }, { eip6492, chainId })\n  }\n\n  getProvider(): SequenceProvider\n  getProvider(chainId: ChainIdLike): SingleNetworkSequenceProvider\n  getProvider(chainId?: ChainIdLike): SingleNetworkSequenceProvider | SequenceProvider\n\n  getProvider(chainId?: ChainIdLike): SingleNetworkSequenceProvider | SequenceProvider {\n    return this.provider.getProvider(chainId)\n  }\n\n  async sendTransaction(transaction: ethers.TransactionRequest[] | ethers.TransactionRequest, options?: OptionalChainIdLike) {\n    const chainId = this.useChainId(options?.chainId)\n    const resolved = await resolveArrayProperties(transaction)\n    const txHash = await this.client.sendTransaction(resolved, { chainId })\n    const provider = this.getProvider(chainId)\n\n    try {\n      const result = await new Promise<ethers.TransactionResponse>(resolve => {\n        const check = async () => {\n          const tx = await provider.getTransaction(txHash)\n\n          if (tx !== null) {\n            return resolve(tx)\n          }\n\n          await provider.once('block', check)\n        }\n\n        check()\n      })\n\n      return result\n    } catch (err) {\n      err.transactionHash = txHash\n      throw err\n    }\n  }\n\n  async getWalletConfig(chainId?: ChainIdLike | undefined): Promise<commons.config.Config> {\n    const useChainId = this.useChainId(chainId)\n    return this.client.getOnchainWalletConfig({ chainId: useChainId })\n  }\n\n  getNetworks(): Promise<NetworkConfig[]> {\n    return this.client.getNetworks()\n  }\n\n  async getBalance(blockTag?: ethers.BlockTag | undefined, optionals?: OptionalChainIdLike): Promise<bigint> {\n    const provider = this.getProvider(optionals?.chainId)\n    return provider.getBalance(this.getAddress(), blockTag)\n  }\n\n  async estimateGas(transaction: ethers.TransactionRequest, optionals?: OptionalChainIdLike): Promise<bigint> {\n    return this.getProvider(optionals?.chainId).estimateGas(transaction)\n  }\n\n  async call(transaction: ethers.TransactionRequest, optionals?: OptionalChainIdLike): Promise<string> {\n    return this.getProvider(optionals?.chainId).call(transaction)\n  }\n\n  getChainId(): Promise<number> {\n    return Promise.resolve(this.client.getChainId())\n  }\n\n  async getFeeData(optionals?: OptionalChainIdLike): Promise<ethers.FeeData> {\n    return this.getProvider(optionals?.chainId).getFeeData()\n  }\n\n  async resolveName(name: string): Promise<string> {\n    const res = await this.provider.resolveName(name)\n\n    // For some reason ethers.Signer expects this to return `string`\n    // but ethers.Provider expects this to return `string | null`.\n    // The signer doesn't have any other source of information, so we'll\n    // fail if the provider doesn't return a result.\n    if (res === null) {\n      throw new Error(`ENS name not found: ${name}`)\n    }\n\n    return res\n  }\n\n  _checkProvider(_operation?: string | undefined): void {\n    // We always have a provider, so this is a noop\n  }\n\n  getNonce(_blockTag?: ethers.BlockTag): Promise<number> {\n    throw new Error('SequenceSigner does not support getNonce')\n  }\n\n  populateCall(_transaction: ethers.TransactionRequest): Promise<ethers.TransactionLike<string>> {\n    throw new Error('SequenceSigner does not support populateCall')\n  }\n\n  populateTransaction(_transaction: ethers.TransactionRequest): Promise<ethers.TransactionLike<string>> {\n    throw new Error('SequenceSigner does not support populateTransaction')\n  }\n\n  checkTransaction(_transaction: ethers.TransactionRequest): ethers.TransactionRequest {\n    throw new Error('SequenceSigner does not support checkTransaction')\n  }\n\n  getTransactionCount(_blockTag?: ethers.BlockTag): Promise<number> {\n    // We could try returning the sequence nonce here\n    // but we aren't sure how ethers will use this nonce\n    throw new Error('SequenceSigner does not support getTransactionCount')\n  }\n\n  signTransaction(_transaction: commons.transaction.Transactionish): Promise<string> {\n    // We could implement signTransaction/sendTransaction here\n    // but first we need a way of serializing these signed transactions\n    // and it could lead to more trouble, because the dapp could try to send this transaction\n    // using a different provider, which would fail.\n    throw new Error('SequenceWallet does not support signTransaction, use sendTransaction instead.')\n  }\n\n  static is(cand: any): cand is SequenceSigner {\n    return cand && typeof cand === 'object' && cand._isSequenceSigner === true\n  }\n}\n\n/**\n *  This is the same provider, but it only allows a single network at a time.\n *  the network defined by the constructor is the only one that can be used.\n *\n *  Attempting to call any method with a different network will throw an error.\n *  Attempting to change the network of this provider will throw an error.\n *\n *  NOTICE: These networks won't support ENS unless they are the mainnet.\n */\nexport class SingleNetworkSequenceSigner extends SequenceSigner {\n  readonly _isSingleNetworkSequenceSigner = true\n\n  constructor(\n    client: SequenceClient,\n    provider: SequenceProvider,\n    public readonly chainId: ChainIdLike\n  ) {\n    super(client, provider.getProvider(chainId))\n  }\n\n  private _useChainId(chainId?: ChainIdLike): number {\n    const provided = this.provider.toChainId(chainId)\n\n    if (provided && provided !== this.chainId) {\n      throw new Error(`This signer only supports the network ${this.chainId}, but ${provided} was requested.`)\n    }\n\n    return provided || this.provider.toChainId(this.chainId)\n  }\n\n  protected useChainId(chainId?: ChainIdLike): number {\n    return this._useChainId(chainId)\n  }\n\n  getChainId(): Promise<number> {\n    return Promise.resolve(this.provider.toChainId(this.chainId))\n  }\n\n  /**\n   *  Override getProvider and getSigner so they always use `useChainId`\n   *  this way they can't return providers and signers that can switch networks,\n   *  or that don't match the chainId of this signer.\n   */\n  getProvider(chainId?: ChainIdLike): SingleNetworkSequenceProvider {\n    return super.getProvider(this._useChainId(chainId))\n  }\n\n  getSigner(chainId?: ChainIdLike | undefined): SingleNetworkSequenceSigner {\n    if (this._useChainId(chainId) !== this.chainId) {\n      throw new Error(`Unreachable code`)\n    }\n\n    return this\n  }\n\n  static is(cand: any): cand is SingleNetworkSequenceSigner {\n    return cand && typeof cand === 'object' && cand._isSingleNetworkSequenceSigner === true\n  }\n}\n","import { ethers } from 'ethers'\nimport { ChainIdLike } from '@0xsequence/network'\nimport { encodeMessageDigest, TypedData, encodeTypedDataDigest } from '@0xsequence/utils'\nimport { isValidSignature, prefixEIP191Message } from '../utils'\nimport { SequenceSigner, SingleNetworkSequenceSigner } from '../signer'\n\n/**\n *  This class is redundant with the SequenceSigner class, but it is here for now to\n *  maintain compatibility with the old wallet API. Eventually we should move these\n *  methods to the SequenceSigner class and deprecate this class.\n */\nexport class WalletUtils {\n  constructor(public signer: SequenceSigner) {\n    if (SingleNetworkSequenceSigner.is(signer)) {\n      throw new Error('WalletUtils does not support SingleNetworkSequenceSigner')\n    }\n  }\n\n  // Sign message on a specified chain, or DefaultChain by default\n  signMessage(message: ethers.BytesLike, chainId?: ChainIdLike, eip6492?: boolean): Promise<string> {\n    return this.signer.signMessage(message, { chainId, eip6492 })\n  }\n\n  // Sign EIP-712 TypedData on a specified chain, or DefaultChain by default\n  signTypedData(\n    domain: ethers.TypedDataDomain,\n    types: Record<string, Array<ethers.TypedDataField>>,\n    message: Record<string, any>,\n    chainId?: ChainIdLike,\n    eip6492?: boolean\n  ): Promise<string> {\n    return this.signer.signTypedData(domain, types, message, { chainId, eip6492 })\n  }\n\n  // Verify signature of a digest, one of a message, typedData or other\n  async isValidSignature(address: string, digest: Uint8Array, signature: string, chainId: number): Promise<boolean> {\n    return isValidSignature(address, digest, signature, this.signer.getProvider(chainId))\n  }\n\n  // Verify message signature\n  async isValidMessageSignature(\n    address: string,\n    message: string | Uint8Array,\n    signature: string,\n    chainId: number\n  ): Promise<boolean> {\n    const provider = this.signer.getProvider(chainId)\n    const prefixed = prefixEIP191Message(message)\n    const digest = encodeMessageDigest(prefixed)\n    return isValidSignature(address, digest, signature, provider)\n  }\n\n  // Verify typedData signature\n  isValidTypedDataSignature(address: string, typedData: TypedData, signature: string, chainId: number): Promise<boolean> {\n    return this.isValidSignature(address, encodeTypedDataDigest(typedData), signature, chainId)\n  }\n\n  // sendTransaction()\n  // sendTransactions()\n\n  // sendETH()\n  // sendToken()\n  // sendCoin() -- sugar for sendToken()\n  // sendCollectible() -- sugar for sendToken()\n  // callContract()\n\n  // transactionHistory()\n  // getReceipt()\n  // getLogs()\n  // // ..\n\n  // validateSignature()\n  // recoverWalletConfig()\n  // recoverAddress()\n}\n","import { ethers } from 'ethers'\nimport { SequenceClient } from './client'\nimport { EIP1193Provider, ChainIdLike, NetworkConfig, allNetworks, findNetworkConfig } from '@0xsequence/network'\nimport { ConnectDetails, ConnectOptions, OpenWalletIntent, OptionalChainIdLike, WalletSession } from './types'\nimport { commons } from '@0xsequence/core'\nimport { WalletUtils } from './utils/index'\nimport { SequenceSigner, SingleNetworkSequenceSigner } from './signer'\n\nexport interface ISequenceProvider {\n  readonly _isSequenceProvider: true\n\n  connect(options?: ConnectOptions): Promise<ConnectDetails>\n  disconnect(): void\n\n  isConnected(): boolean\n  getSession(): WalletSession | undefined\n\n  listAccounts(): string[]\n\n  // @deprecated use getSigner().getAddress() instead\n  getAddress(): string\n\n  getNetworks(): Promise<NetworkConfig[]>\n  getChainId(): number\n\n  setDefaultChainId(chainId: ChainIdLike): void\n\n  isOpened(): boolean\n  openWallet(path?: string, intent?: OpenWalletIntent): Promise<boolean>\n  closeWallet(): void\n\n  getProvider(): SequenceProvider\n  getProvider(chainId: ChainIdLike): SingleNetworkSequenceProvider\n  getProvider(chainId?: ChainIdLike): SequenceProvider | SingleNetworkSequenceProvider\n\n  getSigner(): SequenceSigner\n  getSigner(chainId: ChainIdLike): SingleNetworkSequenceSigner\n  getSigner(chainId?: ChainIdLike): SequenceSigner | SingleNetworkSequenceSigner\n\n  // @deprecated use getSigner().getWalletContext() instead\n  getWalletContext(): Promise<commons.context.VersionedContext>\n\n  // @deprecated use getSigner().getWalletConfig() instead\n  getWalletConfig(chainId?: ChainIdLike): Promise<commons.config.Config>\n\n  utils: WalletUtils\n}\n\nconst EIP1193EventTypes = ['connect', 'disconnect', 'chainChanged', 'accountsChanged'] as const\ntype EIP1193EventType = (typeof EIP1193EventTypes)[number]\n\nexport class SequenceProvider extends ethers.AbstractProvider implements ISequenceProvider, EIP1193Provider {\n  private readonly singleNetworkProviders: { [chainId: number]: SingleNetworkSequenceProvider } = {}\n\n  readonly _isSequenceProvider = true\n  readonly utils: WalletUtils\n\n  readonly signer: SequenceSigner\n\n  readonly eip1193EventListeners = new Map<EIP1193EventType, Set<ethers.Listener>>()\n\n  constructor(\n    public readonly client: SequenceClient,\n    private readonly providerFor: (networkId: number) => ethers.JsonRpcProvider,\n    public readonly networks: NetworkConfig[] = allNetworks,\n    public readonly options?: ethers.AbstractProviderOptions\n  ) {\n    // We support a lot of networks\n    // but we start with the default one\n    super(client.getChainId(), options)\n\n    // Emit events as defined by EIP-1193\n    client.onConnect(details => {\n      //this.emit('connect', details)\n      this.eip1193EventListeners.get('connect')?.forEach(listener => listener(details))\n    })\n\n    client.onDisconnect(error => {\n      //this.emit('disconnect', error)\n      this.eip1193EventListeners.get('disconnect')?.forEach(listener => listener(error))\n    })\n\n    client.onDefaultChainIdChanged(chainId => {\n      //this.emit('chainChanged', chainId)\n      this.eip1193EventListeners.get('chainChanged')?.forEach(listener => listener(chainId))\n    })\n\n    client.onAccountsChanged(accounts => {\n      //this.emit('accountsChanged', accounts)\n      this.eip1193EventListeners.get('accountsChanged')?.forEach(listener => listener(accounts))\n    })\n\n    // NOTICE: We don't emit 'open' and 'close' events\n    // because these are handled by the library, and they\n    // are not part of EIP-1193\n\n    // devs can still access them using\n    //   client.onOpen()\n    //   client.onClose()\n\n    // Create a Sequence signer too\n    this.signer = new SequenceSigner(this.client, this)\n\n    // Create a utils instance\n    this.utils = new WalletUtils(this.signer)\n  }\n\n  async on(event: ethers.ProviderEvent | EIP1193EventType, listener: ethers.Listener): Promise<this> {\n    if (EIP1193EventTypes.includes(event as EIP1193EventType)) {\n      const listeners = this.eip1193EventListeners.get(event as EIP1193EventType) || new Set()\n      listeners.add(listener)\n      this.eip1193EventListeners.set(event as EIP1193EventType, listeners)\n\n      return this\n    }\n\n    return super.on(event, listener) as Promise<this>\n  }\n\n  async off(event: ethers.ProviderEvent | EIP1193EventType, listener?: ethers.Listener | undefined): Promise<this> {\n    if (EIP1193EventTypes.includes(event as EIP1193EventType)) {\n      const listeners = this.eip1193EventListeners.get(event as EIP1193EventType)\n\n      if (listeners) {\n        if (listener) {\n          listeners.delete(listener)\n        } else {\n          listeners.clear()\n        }\n      }\n\n      return this\n    }\n\n    return super.off(event, listener) as Promise<this>\n  }\n\n  getSigner(): SequenceSigner\n  getSigner(chainId: ChainIdLike): SingleNetworkSequenceSigner\n  getSigner(chainId?: ChainIdLike): SequenceSigner | SingleNetworkSequenceSigner\n\n  getSigner(chainId?: ChainIdLike) {\n    return this.signer.getSigner(chainId)\n  }\n\n  connect(options: ConnectOptions) {\n    return this.client.connect(options)\n  }\n\n  disconnect() {\n    return this.client.disconnect()\n  }\n\n  isConnected() {\n    return this.client.isConnected()\n  }\n\n  getSession() {\n    return this.client.getSession()\n  }\n\n  listAccounts(): string[] {\n    return [this.client.getAddress()]\n  }\n\n  // @deprecated use getSigner() instead\n  getAddress() {\n    return this.client.getAddress()\n  }\n\n  getNetworks(): Promise<NetworkConfig[]> {\n    return this.client.getNetworks()\n  }\n\n  getChainId(): number {\n    return this.client.getChainId()\n  }\n\n  setDefaultChainId(chainId: ChainIdLike) {\n    return this.client.setDefaultChainId(this.toChainId(chainId))\n  }\n\n  isOpened(): boolean {\n    return this.client.isOpened()\n  }\n\n  closeWallet(): void {\n    return this.client.closeWallet()\n  }\n\n  getWalletContext(): Promise<commons.context.VersionedContext> {\n    return this.client.getWalletContext()\n  }\n\n  // @deprecated use getSigner() instead\n  async getWalletConfig(chainId?: ChainIdLike): Promise<commons.config.Config> {\n    const useChainId = await this.useChainId(chainId)\n    return this.client.getOnchainWalletConfig({ chainId: useChainId })\n  }\n\n  authorize(options: ConnectOptions) {\n    // Just an alias for connect with authorize: true\n    return this.client.connect({ ...options, authorize: true })\n  }\n\n  async openWallet(path?: string, intent?: OpenWalletIntent) {\n    await this.client.openWallet(path, intent)\n    return true\n  }\n\n  toChainId(chainId: ChainIdLike): number\n  toChainId(chainId?: ChainIdLike): number | undefined\n\n  toChainId(chainId?: ChainIdLike) {\n    if (chainId === undefined) {\n      return undefined\n    }\n\n    const resolved = findNetworkConfig(this.networks, chainId as ChainIdLike)\n\n    if (!resolved) {\n      throw new Error(`Unsupported network ${chainId}`)\n    }\n\n    return resolved.chainId\n  }\n\n  /**\n   *  Resolves the chainId to use for the given request. If no chainId is provided,\n   *  it uses the chainId defined by the client (default chainId). This can be\n   *  overriden to build a single-network SequenceProvider.\n   */\n  protected async useChainId(chainId?: ChainIdLike): Promise<number> {\n    return this.toChainId(chainId) || this.client.getChainId()\n  }\n\n  /**\n   *  This generates a provider that ONLY works for the given chainId.\n   *  the generated provider can't switch networks, and can't handle requests\n   *  for other networks.\n   */\n  getProvider(): SequenceProvider\n  getProvider(chainId: ChainIdLike): SingleNetworkSequenceProvider\n  getProvider(chainId?: ChainIdLike): SequenceProvider | SingleNetworkSequenceProvider\n\n  getProvider(chainId?: ChainIdLike) {\n    // The provider without a chainId is... this one\n    if (!chainId) {\n      return this as SequenceProvider\n    }\n\n    const useChainId = this.toChainId(chainId)\n\n    if (!this.singleNetworkProviders[useChainId]) {\n      this.singleNetworkProviders[useChainId] = new SingleNetworkSequenceProvider(\n        this.client,\n        this.providerFor,\n        useChainId,\n        this.options\n      )\n    }\n\n    return this.singleNetworkProviders[useChainId]\n  }\n\n  /**\n   *  This returns a subprovider, this is a regular non-sequence provider that\n   *  can be used to fulfill read only requests on a given network.\n   */\n  async _getSubprovider(chainId?: ChainIdLike): Promise<ethers.JsonRpcProvider> {\n    const useChainId = await this.useChainId(chainId)\n\n    // Whoever implements providerFrom should memoize the generated provider\n    // otherwise every instance of SequenceProvider will create a new subprovider\n    const provider = this.providerFor(useChainId)\n\n    if (!provider) {\n      throw new Error(`Unsupported network ${useChainId}`)\n    }\n\n    return provider\n  }\n\n  async _perform(req: ethers.PerformActionRequest): Promise<any> {\n    const { method, ...args } = req\n\n    const provider = await this._getSubprovider()\n    const prepared = provider.getRpcRequest(req) ?? { method, args: Object.values(args) }\n\n    if (!prepared) {\n      throw new Error(`Unsupported method ${req.method}`)\n    }\n\n    return provider.send(prepared.method, prepared.args)\n  }\n\n  async perform(method: string, params: any): Promise<any> {\n    // First we check if the method should be handled by the client\n    if (method === 'eth_chainId') {\n      return ethers.toQuantity(await this.useChainId())\n    }\n\n    if (method === 'eth_accounts') {\n      return [this.client.getAddress()]\n    }\n\n    if (method === 'wallet_switchEthereumChain') {\n      const args = params[0] as { chainId: string } | number | string\n      const chainId = normalizeChainId(args)\n      return this.setDefaultChainId(chainId)\n    }\n\n    // Usually these methods aren't used by calling the provider\n    // but to maximize compatibility we support them too.\n    // The correct way of accessing these methods is by using .getSigner()\n    if (\n      method === 'eth_sendTransaction' ||\n      method === 'eth_sign' ||\n      method === 'eth_signTypedData' ||\n      method === 'eth_signTypedData_v4' ||\n      method === 'personal_sign' ||\n      // These methods will use EIP-6492\n      // but this is handled directly by the wallet\n      method === 'sequence_sign' ||\n      method === 'sequence_signTypedData_v4'\n    ) {\n      // We pass the chainId to the client, if we don't pass one\n      // the client will use its own default chainId\n      return this.client.request({ method, params, chainId: this.getChainId() })\n    }\n\n    return this._perform({ method, ...params })\n  }\n\n  send(method: string, params: any): Promise<any> {\n    return this.perform(method, params)\n  }\n\n  request(request: { method: string; params?: any[] | undefined }) {\n    return this.perform(request.method, request.params)\n  }\n\n  async _detectNetwork(): Promise<ethers.Network> {\n    const chainId = this.client.getChainId()\n    const found = findNetworkConfig(this.networks, chainId)\n\n    if (!found) {\n      throw new Error(`Unknown network ${chainId}`)\n    }\n\n    const network = new ethers.Network(found.name, found.chainId)\n\n    return network\n  }\n\n  async detectNetwork(): Promise<ethers.Network> {\n    return this._detectNetwork()\n  }\n\n  // Override most of the methods, so we add support for an optional chainId\n  // argument, which is used to select the provider to use.\n  //\n  // NOTICE: We could use generics to avoid repeating the same code\n  // but this would make the code harder to read, and it's not worth it\n  // since we only have a few methods to override.\n\n  async waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number, optionals?: OptionalChainIdLike) {\n    const provider = await this._getSubprovider(optionals?.chainId)\n    return provider.waitForTransaction(transactionHash, confirmations, timeout)\n  }\n\n  async getBlockNumber(optionals?: OptionalChainIdLike) {\n    const provider = await this._getSubprovider(optionals?.chainId)\n    return provider.getBlockNumber()\n  }\n\n  async getFeeData(optionals?: OptionalChainIdLike) {\n    const provider = await this._getSubprovider(optionals?.chainId)\n    return provider.getFeeData()\n  }\n\n  async getBalance(addressOrName: string | Promise<string>, blockTag?: ethers.BlockTag, optionals?: OptionalChainIdLike) {\n    const provider = await this._getSubprovider(optionals?.chainId)\n    return provider.getBalance(addressOrName, blockTag)\n  }\n\n  async getTransactionCount(\n    addressOrName: string | Promise<string>,\n    blockTag?: ethers.BlockTag,\n    optionals?: OptionalChainIdLike\n  ) {\n    const provider = await this._getSubprovider(optionals?.chainId)\n    return provider.getTransactionCount(addressOrName, blockTag)\n  }\n\n  async getCode(addressOrName: string | Promise<string>, blockTag?: ethers.BlockTag, optionals?: OptionalChainIdLike) {\n    const provider = await this._getSubprovider(optionals?.chainId)\n    return provider.getCode(addressOrName, blockTag)\n  }\n\n  async getStorage(\n    addressOrName: string | Promise<string>,\n    position: ethers.BigNumberish,\n    blockTag?: ethers.BlockTag,\n    optionals?: OptionalChainIdLike\n  ) {\n    const provider = await this._getSubprovider(optionals?.chainId)\n    return provider.getStorage(addressOrName, position, blockTag)\n  }\n\n  async call(transaction: ethers.TransactionRequest, optionals?: OptionalChainIdLike) {\n    const provider = await this._getSubprovider(optionals?.chainId)\n    return provider.call(transaction)\n  }\n\n  async estimateGas(transaction: ethers.TransactionRequest, optionals?: OptionalChainIdLike) {\n    const provider = await this._getSubprovider(optionals?.chainId)\n    return provider.estimateGas(transaction)\n  }\n\n  async getBlock(blockHashOrBlockTag: ethers.BlockTag | string, prefetchTxs?: boolean, optionals?: OptionalChainIdLike) {\n    const provider = await this._getSubprovider(optionals?.chainId)\n    return provider.getBlock(blockHashOrBlockTag, prefetchTxs)\n  }\n\n  async getTransaction(transactionHash: string, optionals?: OptionalChainIdLike) {\n    const provider = await this._getSubprovider(optionals?.chainId)\n    return provider.getTransaction(transactionHash)\n  }\n\n  async getLogs(filter: ethers.Filter, optionals?: OptionalChainIdLike) {\n    const provider = await this._getSubprovider(optionals?.chainId)\n    return provider.getLogs(filter)\n  }\n\n  // ENS methods\n\n  async supportsENS(): Promise<boolean> {\n    const networks = await this.getNetworks()\n    return networks.some(n => n.chainId === 1)\n  }\n\n  async getResolver(name: string) {\n    if (!(await this.supportsENS())) {\n      return null\n    }\n\n    // Resolver is always on the chainId 1\n    const provider = await this._getSubprovider(1)\n    return provider.getResolver(name)\n  }\n\n  async resolveName(name: string) {\n    if (ethers.isAddress(name)) {\n      return name\n    }\n\n    if (!(await this.supportsENS())) {\n      return null\n    }\n\n    // Resolver is always on the chainId 1\n    const provider = await this._getSubprovider(1)\n    return provider.resolveName(name)\n  }\n\n  async lookupAddress(address: string) {\n    if (!(await this.supportsENS())) {\n      return null\n    }\n\n    // Resolver is always on the chainId 1\n    const provider = await this._getSubprovider(1)\n    return provider.lookupAddress(address)\n  }\n\n  async getAvatar(nameOrAddress: string) {\n    if (!(await this.supportsENS())) {\n      return null\n    }\n\n    const provider = await this._getSubprovider(1)\n    return provider.getAvatar(nameOrAddress)\n  }\n\n  static is = (provider: any): provider is SequenceProvider => {\n    return provider && typeof provider === 'object' && provider._isSequenceProvider === true\n  }\n}\n\nfunction normalizeChainId(chainId: ethers.BigNumberish | { chainId: string }): number {\n  if (typeof chainId === 'object') return normalizeChainId(chainId.chainId)\n  return Number(chainId)\n}\n\n/**\n *  This is the same provider, but it only allows a single network at a time.\n *  the network defined by the constructor is the only one that can be used.\n *\n *  Attempting to call any method with a different network will throw an error.\n *  Attempting to change the network of this provider will throw an error.\n *\n *  NOTICE: These networks won't support ENS unless they are the mainnet.\n */\nexport class SingleNetworkSequenceProvider extends SequenceProvider {\n  readonly _isSingleNetworkSequenceProvider = true\n\n  constructor(\n    client: SequenceClient,\n    providerFor: (networkId: number) => ethers.JsonRpcProvider,\n    public readonly chainId: ChainIdLike,\n    options?: ethers.AbstractProviderOptions\n  ) {\n    super(client, providerFor, undefined, options)\n  }\n\n  private _useChainId(chainId?: ChainIdLike): number {\n    const provided = this.toChainId(chainId)\n\n    if (provided && provided !== this.chainId) {\n      throw new Error(`This provider only supports the network ${this.chainId}, but ${provided} was requested.`)\n    }\n\n    return provided || super.toChainId(this.chainId)\n  }\n\n  protected useChainId(chainId?: ChainIdLike): Promise<number> {\n    return Promise.resolve(this._useChainId(chainId))\n  }\n\n  getChainId(): number {\n    return super.toChainId(this.chainId)\n  }\n\n  async getNetwork(): Promise<ethers.Network> {\n    const networks = await this.client.getNetworks()\n    const found = findNetworkConfig(networks, this.chainId)\n\n    if (!found) {\n      throw new Error(`Unsupported network ${this.chainId}`)\n    }\n\n    return new ethers.Network(found.name, found.chainId)\n  }\n\n  /**\n   *  Override getProvider and getSigner so they always use `useChainId`\n   *  this way they can't return providers and signers that can switch networks,\n   *  or that don't match the chainId of this signer.\n   */\n  getProvider(chainId?: ChainIdLike): SingleNetworkSequenceProvider {\n    if (this._useChainId(chainId) !== this.chainId) {\n      throw new Error(`Unreachable code`)\n    }\n\n    return this\n  }\n\n  getSigner(chainId?: ChainIdLike): SingleNetworkSequenceSigner {\n    return super.getSigner(this._useChainId(chainId))\n  }\n\n  setDefaultChainId(_chainId: ChainIdLike): void {\n    throw new Error(`This provider only supports the network ${this.chainId}; use the parent provider to switch networks.`)\n  }\n\n  static is(cand: any): cand is SingleNetworkSequenceProvider {\n    return cand && typeof cand === 'object' && cand._isSingleNetworkSequenceProvider === true\n  }\n}\n","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\n// copied from utils\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\n// Other libraries would silently corrupt the data instead of throwing an error,\n// when they don't support it.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!isBytes(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!isBytes(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        if (!isBytes(a))\n            throw new Error('Uint8Array expected');\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","// src/rpc/proto/databeat.gen.ts\nvar Databeat = class {\n  hostname;\n  fetch;\n  path = \"/rpc/Databeat/\";\n  constructor(hostname, fetch) {\n    this.hostname = hostname;\n    this.fetch = (input, init) => fetch(input, init);\n  }\n  url(name) {\n    return this.hostname + this.path + name;\n  }\n  ping = (headers, signal) => {\n    return this.fetch(\n      this.url(\"Ping\"),\n      createHTTPRequest({}, headers, signal)\n    ).then((res) => {\n      return buildResponse(res).then((_data) => {\n        return {\n          status: _data.status\n        };\n      });\n    }, (error) => {\n      throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || \"\"}` });\n    });\n  };\n  version = (headers, signal) => {\n    return this.fetch(\n      this.url(\"Version\"),\n      createHTTPRequest({}, headers, signal)\n    ).then((res) => {\n      return buildResponse(res).then((_data) => {\n        return {\n          version: _data.version\n        };\n      });\n    }, (error) => {\n      throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || \"\"}` });\n    });\n  };\n  runtimeStatus = (headers, signal) => {\n    return this.fetch(\n      this.url(\"RuntimeStatus\"),\n      createHTTPRequest({}, headers, signal)\n    ).then((res) => {\n      return buildResponse(res).then((_data) => {\n        return {\n          status: _data.status\n        };\n      });\n    }, (error) => {\n      throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || \"\"}` });\n    });\n  };\n  tick = (args, headers, signal) => {\n    return this.fetch(\n      this.url(\"Tick\"),\n      createHTTPRequest(args, headers, signal)\n    ).then((res) => {\n      return buildResponse(res).then((_data) => {\n        return {\n          ok: _data.ok\n        };\n      });\n    }, (error) => {\n      throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || \"\"}` });\n    });\n  };\n  rawEvents = (args, headers, signal) => {\n    return this.fetch(\n      this.url(\"RawEvents\"),\n      createHTTPRequest(args, headers, signal)\n    ).then((res) => {\n      return buildResponse(res).then((_data) => {\n        return {\n          ok: _data.ok\n        };\n      });\n    }, (error) => {\n      throw WebrpcRequestFailedError.new({ cause: `fetch(): ${error.message || \"\"}` });\n    });\n  };\n};\nvar createHTTPRequest = (body = {}, headers = {}, signal = null) => {\n  return {\n    method: \"POST\",\n    headers: { ...headers, \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(body || {}),\n    signal\n  };\n};\nvar buildResponse = (res) => {\n  return res.text().then((text) => {\n    let data;\n    try {\n      data = JSON.parse(text);\n    } catch (error) {\n      let message = \"\";\n      if (error instanceof Error) {\n        message = error.message;\n      }\n      throw WebrpcBadResponseError.new(\n        {\n          status: res.status,\n          cause: `JSON.parse(): ${message}: response text: ${text}`\n        }\n      );\n    }\n    if (!res.ok) {\n      const code = typeof data.code === \"number\" ? data.code : 0;\n      throw (webrpcErrorByCode[code] || WebrpcError).new(data);\n    }\n    return data;\n  });\n};\nvar WebrpcError = class _WebrpcError extends Error {\n  name;\n  code;\n  message;\n  status;\n  cause;\n  /** @deprecated Use message instead of msg. Deprecated in webrpc v0.11.0. */\n  msg;\n  constructor(name, code, message, status, cause) {\n    super(message);\n    this.name = name || \"WebrpcError\";\n    this.code = typeof code === \"number\" ? code : 0;\n    this.message = message || `endpoint error ${this.code}`;\n    this.msg = this.message;\n    this.status = typeof status === \"number\" ? status : 0;\n    this.cause = cause;\n    Object.setPrototypeOf(this, _WebrpcError.prototype);\n  }\n  static new(payload) {\n    return new this(payload.error, payload.code, payload.message || payload.msg, payload.status, payload.cause);\n  }\n};\nvar WebrpcEndpointError = class _WebrpcEndpointError extends WebrpcError {\n  constructor(name = \"WebrpcEndpoint\", code = 0, message = \"endpoint error\", status = 0, cause) {\n    super(name, code, message, status, cause);\n    Object.setPrototypeOf(this, _WebrpcEndpointError.prototype);\n  }\n};\nvar WebrpcRequestFailedError = class _WebrpcRequestFailedError extends WebrpcError {\n  constructor(name = \"WebrpcRequestFailed\", code = -1, message = \"request failed\", status = 0, cause) {\n    super(name, code, message, status, cause);\n    Object.setPrototypeOf(this, _WebrpcRequestFailedError.prototype);\n  }\n};\nvar WebrpcBadRouteError = class _WebrpcBadRouteError extends WebrpcError {\n  constructor(name = \"WebrpcBadRoute\", code = -2, message = \"bad route\", status = 0, cause) {\n    super(name, code, message, status, cause);\n    Object.setPrototypeOf(this, _WebrpcBadRouteError.prototype);\n  }\n};\nvar WebrpcBadMethodError = class _WebrpcBadMethodError extends WebrpcError {\n  constructor(name = \"WebrpcBadMethod\", code = -3, message = \"bad method\", status = 0, cause) {\n    super(name, code, message, status, cause);\n    Object.setPrototypeOf(this, _WebrpcBadMethodError.prototype);\n  }\n};\nvar WebrpcBadRequestError = class _WebrpcBadRequestError extends WebrpcError {\n  constructor(name = \"WebrpcBadRequest\", code = -4, message = \"bad request\", status = 0, cause) {\n    super(name, code, message, status, cause);\n    Object.setPrototypeOf(this, _WebrpcBadRequestError.prototype);\n  }\n};\nvar WebrpcBadResponseError = class _WebrpcBadResponseError extends WebrpcError {\n  constructor(name = \"WebrpcBadResponse\", code = -5, message = \"bad response\", status = 0, cause) {\n    super(name, code, message, status, cause);\n    Object.setPrototypeOf(this, _WebrpcBadResponseError.prototype);\n  }\n};\nvar WebrpcServerPanicError = class _WebrpcServerPanicError extends WebrpcError {\n  constructor(name = \"WebrpcServerPanic\", code = -6, message = \"server panic\", status = 0, cause) {\n    super(name, code, message, status, cause);\n    Object.setPrototypeOf(this, _WebrpcServerPanicError.prototype);\n  }\n};\nvar WebrpcInternalErrorError = class _WebrpcInternalErrorError extends WebrpcError {\n  constructor(name = \"WebrpcInternalError\", code = -7, message = \"internal error\", status = 0, cause) {\n    super(name, code, message, status, cause);\n    Object.setPrototypeOf(this, _WebrpcInternalErrorError.prototype);\n  }\n};\nvar WebrpcClientDisconnectedError = class _WebrpcClientDisconnectedError extends WebrpcError {\n  constructor(name = \"WebrpcClientDisconnected\", code = -8, message = \"client disconnected\", status = 0, cause) {\n    super(name, code, message, status, cause);\n    Object.setPrototypeOf(this, _WebrpcClientDisconnectedError.prototype);\n  }\n};\nvar WebrpcStreamLostError = class _WebrpcStreamLostError extends WebrpcError {\n  constructor(name = \"WebrpcStreamLost\", code = -9, message = \"stream lost\", status = 0, cause) {\n    super(name, code, message, status, cause);\n    Object.setPrototypeOf(this, _WebrpcStreamLostError.prototype);\n  }\n};\nvar WebrpcStreamFinishedError = class _WebrpcStreamFinishedError extends WebrpcError {\n  constructor(name = \"WebrpcStreamFinished\", code = -10, message = \"stream finished\", status = 0, cause) {\n    super(name, code, message, status, cause);\n    Object.setPrototypeOf(this, _WebrpcStreamFinishedError.prototype);\n  }\n};\nvar UnauthorizedError = class _UnauthorizedError extends WebrpcError {\n  constructor(name = \"Unauthorized\", code = 1e3, message = \"Unauthorized access\", status = 0, cause) {\n    super(name, code, message, status, cause);\n    Object.setPrototypeOf(this, _UnauthorizedError.prototype);\n  }\n};\nvar PermissionDeniedError = class _PermissionDeniedError extends WebrpcError {\n  constructor(name = \"PermissionDenied\", code = 2e3, message = \"Permission denied\", status = 0, cause) {\n    super(name, code, message, status, cause);\n    Object.setPrototypeOf(this, _PermissionDeniedError.prototype);\n  }\n};\nvar SessionExpiredError = class _SessionExpiredError extends WebrpcError {\n  constructor(name = \"SessionExpired\", code = 2001, message = \"Session expired\", status = 0, cause) {\n    super(name, code, message, status, cause);\n    Object.setPrototypeOf(this, _SessionExpiredError.prototype);\n  }\n};\nvar NotFoundError = class _NotFoundError extends WebrpcError {\n  constructor(name = \"NotFound\", code = 3e3, message = \"Resource not found\", status = 0, cause) {\n    super(name, code, message, status, cause);\n    Object.setPrototypeOf(this, _NotFoundError.prototype);\n  }\n};\nvar InvalidAppKeyError = class _InvalidAppKeyError extends WebrpcError {\n  constructor(name = \"InvalidAppKey\", code = 4e3, message = \"Invalid app key\", status = 0, cause) {\n    super(name, code, message, status, cause);\n    Object.setPrototypeOf(this, _InvalidAppKeyError.prototype);\n  }\n};\nvar QueryFailedError = class _QueryFailedError extends WebrpcError {\n  constructor(name = \"QueryFailed\", code = 4001, message = \"DB query failed\", status = 0, cause) {\n    super(name, code, message, status, cause);\n    Object.setPrototypeOf(this, _QueryFailedError.prototype);\n  }\n};\nvar InvalidProjectIdError = class _InvalidProjectIdError extends WebrpcError {\n  constructor(name = \"InvalidProjectId\", code = 4002, message = \"Invalid project id\", status = 0, cause) {\n    super(name, code, message, status, cause);\n    Object.setPrototypeOf(this, _InvalidProjectIdError.prototype);\n  }\n};\nvar webrpcErrorByCode = {\n  [0]: WebrpcEndpointError,\n  [-1]: WebrpcRequestFailedError,\n  [-2]: WebrpcBadRouteError,\n  [-3]: WebrpcBadMethodError,\n  [-4]: WebrpcBadRequestError,\n  [-5]: WebrpcBadResponseError,\n  [-6]: WebrpcServerPanicError,\n  [-7]: WebrpcInternalErrorError,\n  [-8]: WebrpcClientDisconnectedError,\n  [-9]: WebrpcStreamLostError,\n  [-10]: WebrpcStreamFinishedError,\n  [1e3]: UnauthorizedError,\n  [2e3]: PermissionDeniedError,\n  [2001]: SessionExpiredError,\n  [3e3]: NotFoundError,\n  [4e3]: InvalidAppKeyError,\n  [4001]: QueryFailedError,\n  [4002]: InvalidProjectIdError\n};\n\n// src/rpc/proto/index.ts\nvar DatabeatRpcClient = class extends Databeat {\n  constructor(hostname, auth) {\n    const globalFetch = globalThis.fetch.bind(globalThis);\n    super(hostname.endsWith(\"/\") ? hostname.slice(0, -1) : hostname, globalFetch);\n    this.auth = auth;\n    this._globalFetch = globalFetch;\n    this.fetch = this._fetch;\n  }\n  _globalFetch;\n  _fetch = (input, init) => {\n    if (this.auth) {\n      let headers = {};\n      if (this.auth.jwt?.length > 0) {\n        headers[\"Authorization\"] = `BEARER ${this.auth.jwt}`;\n      }\n      if (this.auth.headers) {\n        headers = { ...headers, ...this.auth.headers };\n      }\n      init.headers = { ...init.headers, ...headers };\n    }\n    return this._globalFetch(input, init);\n  };\n};\n\n// src/index.ts\nimport { sha256 } from \"@noble/hashes/sha256\";\nimport { bytesToHex } from \"@noble/hashes/utils\";\nvar Ident = /* @__PURE__ */ ((Ident2) => {\n  Ident2[Ident2[\"ANON\"] = 0] = \"ANON\";\n  Ident2[Ident2[\"PRIVATE\"] = 1] = \"PRIVATE\";\n  Ident2[Ident2[\"USER\"] = 2] = \"USER\";\n  return Ident2;\n})(Ident || {});\nvar MAX_QUEUE_SIZE = 150;\nvar defaultDatabeatOptions = {\n  defaultEnabled: true,\n  noop: false,\n  privacy: { userIdHash: true, userAgentSalt: false },\n  userIdentTracking: false,\n  strictMode: false,\n  flushInterval: 500,\n  initProps: () => {\n    return {};\n  }\n};\nvar Databeat2 = class {\n  rpc;\n  auth;\n  options;\n  enabled;\n  ident;\n  userId;\n  sessionId;\n  allowUserTracking;\n  projectId;\n  queue;\n  flushTimeout;\n  defaultProps;\n  previousPageKey;\n  ts;\n  constructor(host, auth, options) {\n    this.auth = auth;\n    this.rpc = new DatabeatRpcClient(host, auth);\n    this.options = defaultDatabeatOptions;\n    if (options) {\n      this.options = {\n        defaultEnabled: options.defaultEnabled || defaultDatabeatOptions.defaultEnabled,\n        projectId: options.projectId || null,\n        privacy: options.privacy || defaultDatabeatOptions.privacy,\n        userIdentTracking: options.userIdentTracking || defaultDatabeatOptions.userIdentTracking,\n        strictMode: options.strictMode || defaultDatabeatOptions.strictMode,\n        flushInterval: options.flushInterval || defaultDatabeatOptions.flushInterval,\n        noop: options.noop || false,\n        initProps: options.initProps || defaultDatabeatOptions.initProps\n      };\n    }\n    this.init();\n  }\n  // init is called on load by the constructor and also by reset().\n  init() {\n    this.enabled = isEnabled(this.options.defaultEnabled, this.auth);\n    this.projectId = this.options.projectId || null;\n    this.userId = null;\n    this.sessionId = genSessionId();\n    this.queue = [];\n    this.flushTimeout = null;\n    this.defaultProps = { ...getDefaultProps(), ...this.options.initProps() };\n    this.identify();\n  }\n  // reset will reset the user_id and session_id details. Similar to a \"logout\" action.\n  reset(skipInit) {\n    this.enabled = isEnabled(this.options.defaultEnabled, this.auth);\n    if (this.userId && !this.isAnon()) {\n      this.userId = null;\n    }\n    this.ident = 0 /* ANON */;\n    this.ts = setStorageVal({ on: this.enabled, id: this.userId, it: this.ident, ut: this.allowUserTracking });\n    if (skipInit === true) {\n      return;\n    }\n    this.init();\n  }\n  // identify can be called to seed the userId, where the behaviour changes\n  // depending on privacy or strict modes. identify is also called on init,\n  // where we load the data from localStorage.\n  identify(userId, options) {\n    if (!isBrowser())\n      return;\n    if (options && options.allowTracking !== void 0) {\n      this.allowTracking(options.allowTracking);\n    }\n    if (!userId) {\n      const val = getStorageVal();\n      if (val !== null && val.id !== null) {\n        this.userId = val.id;\n        this.ident = val.it;\n        this.allowUserTracking = val.ut;\n        if (val.it === void 0) {\n          if (this.userId.startsWith(\"anon:\")) {\n            this.ident = 0 /* ANON */;\n          } else {\n            this.ident = 1 /* PRIVATE */;\n          }\n          this.ts = setStorageVal({ on: this.enabled, id: this.userId, it: this.ident, ut: this.allowUserTracking });\n        } else {\n          this.ident = val.it;\n        }\n      }\n    }\n    if (userId || this.userId === null) {\n      const v = genUserId(userId, this.allowUserTracking, this.options);\n      this.userId = v.userId;\n      this.ident = v.ident;\n      this.ts = setStorageVal({ on: this.enabled, id: this.userId, it: this.ident, ut: this.allowUserTracking });\n    }\n    this.track({ event: \"INIT\", source: getPagePath(), props: this.defaultProps });\n    this.flush();\n  }\n  // allowTracking is used by strict mode to enable/disable tracking.\n  allowTracking(allowTracking) {\n    this.allowUserTracking = allowTracking;\n    setStorageVal({ on: this.enabled, id: this.userId, it: this.ident, ut: this.allowUserTracking });\n    if (this.options.strictMode) {\n      if (allowTracking) {\n        this.enable();\n      } else {\n        this.disable();\n      }\n    }\n  }\n  async track(events, options) {\n    if (isBrowser() && this.userId === null) {\n      throw new Error(\"databeat: init first\");\n    }\n    if (Array.isArray(events)) {\n      for (let i = 0; i < events.length; i++) {\n        events[i].ident = this.ident;\n        events[i].userId = this.userId;\n        events[i].sessionId = this.sessionId;\n        if (!events[i].projectId && this.projectId) {\n          events[i].projectId = this.projectId;\n        }\n      }\n      this.queue.push(...events);\n    } else {\n      events.ident = this.ident;\n      events.userId = this.userId;\n      events.sessionId = this.sessionId;\n      if (!events.projectId && this.projectId) {\n        events.projectId = this.projectId;\n      }\n      this.queue.push(events);\n    }\n    if (this.queue.length > MAX_QUEUE_SIZE) {\n      this.queue = this.queue.splice(this.queue.length - MAX_QUEUE_SIZE);\n    }\n    if (!this.enabled)\n      return;\n    if (options && options.flush) {\n      await this.flush();\n    } else if (this.flushTimeout === null) {\n      this.flushTimeout = setTimeout(() => {\n        this.flush();\n      }, this.options.flushInterval);\n    }\n  }\n  trackView(props = {}) {\n    const eventProps = { ...this.defaultProps, ...props };\n    const eventSource = getPagePath();\n    const pageKey = `${eventSource}:${JSON.stringify(eventProps)}:${this.userId}:${this.sessionId}`;\n    if (this.previousPageKey === pageKey)\n      return;\n    this.previousPageKey = pageKey;\n    this.track({ event: \"VIEW\", source: eventSource, props: eventProps });\n  }\n  flush = async () => {\n    if (this.flushTimeout !== null) {\n      clearTimeout(this.flushTimeout);\n      this.flushTimeout = null;\n    }\n    if (!this.enabled)\n      return;\n    if (this.options.noop)\n      return;\n    if (this.options.strictMode && !this.allowUserTracking)\n      return;\n    if (this.queue.length === 0)\n      return;\n    const events = this.dedupedQueue();\n    this.queue = [];\n    try {\n      await this.rpc.tick({ events });\n    } catch (err) {\n      console.warn(`databeat flush failed: ${err}`);\n    }\n  };\n  isEnabled() {\n    return this.enabled;\n  }\n  isAnon() {\n    return this.ident === 0 /* ANON */;\n  }\n  getIdent() {\n    return this.ident;\n  }\n  getUserId() {\n    return this.userId;\n  }\n  getSessionId() {\n    return this.sessionId;\n  }\n  getStorageTS() {\n    if (this.ts) {\n      return this.ts;\n    }\n    const val = getStorageVal();\n    if (val === void 0 || val === null || val.id === null) {\n      return void 0;\n    }\n    this.ts = val.ts;\n    return this.ts;\n  }\n  enable() {\n    if (!isAuthEnabled(this.auth)) {\n      this.enabled = false;\n      return;\n    }\n    if (!isBrowser())\n      return;\n    this.enabled = true;\n    this.ts = setStorageVal({ on: this.enabled, id: this.userId, it: this.ident, ut: this.allowUserTracking });\n    this.identify();\n  }\n  disable() {\n    if (!isBrowser())\n      return;\n    this.enabled = false;\n    this.ts = setStorageVal({ on: this.enabled, id: this.userId, it: this.ident, ut: this.allowUserTracking });\n  }\n  dedupedQueue = () => {\n    const uniqEvents = /* @__PURE__ */ new Map();\n    for (let i = 0; i < this.queue.length; i++) {\n      const ev = this.queue[i];\n      const key = `${ev.event}:${ev.source}:${ev.userId}:${ev.sessionId}:${JSON.stringify(ev.props)}:${JSON.stringify(ev.nums)}`;\n      if (!uniqEvents.has(key)) {\n        uniqEvents.set(key, ev);\n      }\n    }\n    return Array.from(uniqEvents.values());\n  };\n};\nvar isBrowser = () => {\n  return typeof window === \"object\" && typeof window.localStorage === \"object\" && typeof window.localStorage.getItem === \"function\" && typeof window.localStorage.setItem === \"function\";\n};\nvar isEnabled = (defaultEnabled, auth) => {\n  if (!isAuthEnabled(auth)) {\n    return false;\n  }\n  if (!isBrowser()) {\n    return true;\n  }\n  const val = getStorageVal();\n  if (val === null) {\n    if (defaultEnabled !== null && defaultEnabled !== void 0) {\n      return defaultEnabled;\n    } else {\n      return true;\n    }\n  } else {\n    return val.on;\n  }\n};\nvar isAuthEnabled = (auth) => {\n  if (auth?.jwt?.length > 0) {\n    return true;\n  }\n  if (auth?.headers && Object.keys(auth.headers).length > 0) {\n    return true;\n  }\n  return false;\n};\nvar getPagePath = () => {\n  try {\n    return window.location.pathname;\n  } catch (err) {\n    return \"\";\n  }\n};\nvar getDefaultProps = () => {\n  if (!isBrowser())\n    return {};\n  const params = new URL(window.location.href).searchParams;\n  const props = {};\n  props[\"origin\"] = window.location.origin;\n  if (params.get(\"ref\") && params.get(\"ref\") !== \"\") {\n    props[\"ref\"] = params.get(\"ref\") || \"\";\n  }\n  if (params.get(\"source\") && params.get(\"source\") !== \"\") {\n    props[\"source\"] = params.get(\"source\") || \"\";\n  }\n  if (params.get(\"utm_source\") && params.get(\"utm_source\") !== \"\") {\n    props[\"utmSource\"] = params.get(\"utm_source\") || \"\";\n  }\n  if (params.get(\"utm_campaign\") && params.get(\"utm_campaign\") !== \"\") {\n    props[\"utmCampaign\"] = params.get(\"utm_campaign\") || \"\";\n  }\n  if (params.get(\"utm_medium\") && params.get(\"utm_medium\") !== \"\") {\n    props[\"utmMedium\"] = params.get(\"utm_medium\") || \"\";\n  }\n  if (params.get(\"utm_content\") && params.get(\"utm_content\") !== \"\") {\n    props[\"utmContent\"] = params.get(\"utm_content\") || \"\";\n  }\n  if (params.get(\"utm_term\") && params.get(\"utm_term\") !== \"\") {\n    props[\"utmTerm\"] = params.get(\"utm_term\") || \"\";\n  }\n  if (document.referrer && document.referrer !== \"\") {\n    props[\"referrer\"] = document.referrer;\n  }\n  if (params.get(\"gclid\") && params.get(\"gclid\") !== \"\") {\n    props[\"gclid\"] = params.get(\"gclid\") || \"\";\n  }\n  if (params.get(\"wbraid\") && params.get(\"wbraid\") !== \"\") {\n    props[\"wbraid\"] = params.get(\"wbraid\") || \"\";\n  }\n  return props;\n};\nvar storageKey = \"_dbeat\";\nvar getStorageVal = () => {\n  try {\n    return JSON.parse(window.localStorage.getItem(storageKey));\n  } catch (err) {\n    return null;\n  }\n};\nvar setStorageVal = (val) => {\n  try {\n    if (!val.ts) {\n      val.ts = Math.floor(Date.now() / 1e3);\n    }\n    window.localStorage.setItem(storageKey, JSON.stringify(val));\n    return val.ts;\n  } catch (err) {\n    return;\n  }\n};\nvar genUserId = (seed, allowUserTracking, options) => {\n  if (!seed || seed === null || seed === \"\") {\n    const id = Math.floor(Math.random() * 1e14);\n    return { userId: `${id}`, ident: 0 /* ANON */ };\n  }\n  if (options.userIdentTracking && allowUserTracking) {\n    return { userId: seed, ident: 2 /* USER */ };\n  }\n  if (options.privacy.userIdHash === true || !options.userIdentTracking || !allowUserTracking) {\n    if (isBrowser() && options.privacy.userAgentSalt === true) {\n      seed = seed + \":\" + navigator.userAgent;\n    }\n    if (options.privacy.extraSalt && options.privacy.extraSalt.length > 0) {\n      seed = seed + \":\" + options.privacy.extraSalt;\n    }\n    return { userId: bytesToHex(sha256(seed)).substring(0, 50), ident: 1 /* PRIVATE */ };\n  } else {\n    throw new Error(\"invalid configuration\");\n  }\n};\nvar genSessionId = () => {\n  const isSessionStorageAvail = isBrowser() && typeof window.sessionStorage === \"object\" && typeof window.sessionStorage.getItem === \"function\" && typeof window.sessionStorage.setItem === \"function\";\n  if (!isSessionStorageAvail) {\n    return genRandHex(16);\n  } else {\n    const sid = window.sessionStorage.getItem(storageKey);\n    if (!!sid && sid.length > 0) {\n      return sid;\n    } else {\n      const sid2 = genRandHex(16);\n      window.sessionStorage.setItem(storageKey, sid2);\n      return sid2;\n    }\n  }\n};\nvar genRandHex = (n) => {\n  let hexString = \"\";\n  for (let i = 0; i < n; i++) {\n    hexString += Math.floor(Math.random() * 16).toString(16);\n  }\n  return \"0x\" + hexString;\n};\nif (typeof process === \"object\" && process.version && process.version < \"v18\") {\n  console.error(`ERROR! expecting node v18+ but your node version is reporting ${process.version}`);\n  if (process && process.exit) {\n    process.exit(1);\n  }\n}\nexport {\n  Databeat2 as Databeat,\n  Ident,\n  genSessionId,\n  genUserId,\n  getStorageVal,\n  isBrowser\n};\n//# sourceMappingURL=databeat-tracker.mjs.map","import { Databeat, Event as DatabeatEvent, Auth, isBrowser } from '@databeat/tracker'\n\nexport enum EventType {\n  // Core types part of Databeat\n  INIT,\n  VIEW,\n\n  // Provider specific\n  SIGN_MESSAGE_REQUEST,\n  SIGN_TYPED_DATA_REQUEST,\n  SEND_TRANSACTION_REQUEST\n}\n\nexport type EventTypes = keyof typeof EventType\nexport type Event = DatabeatEvent<EventTypes>\n\n// Analytics sub-class to add some custom helper methods\nexport class Analytics extends Databeat<EventTypes> {}\n\n// Setup analytics tracker\nexport const setupAnalytics = (projectAccessKey: string, server?: string) => {\n  if (!server) {\n    server = 'https://nodes.sequence.app'\n  }\n\n  // disable tracking if projectAccessKey is not set\n  const noop = !projectAccessKey\n\n  // auth\n  const auth: Auth = {}\n  if (projectAccessKey) {\n    auth.headers = { 'X-Access-Key': projectAccessKey }\n  }\n\n  return new Analytics(server, auth, {\n    noop: noop,\n    defaultEnabled: true,\n    privacy: { userIdHash: true, userAgentSalt: false },\n    initProps: () => {\n      if (!isBrowser()) {\n        return {}\n      } else {\n        return { origin: window.location.origin }\n      }\n    }\n  })\n}\n","import { NetworkConfig } from '@0xsequence/network'\nimport {\n  ConnectDetails,\n  ConnectOptions,\n  ItemStore,\n  MuxMessageProvider,\n  MuxTransportTemplate,\n  OpenWalletIntent,\n  OptionalChainId,\n  OptionalEIP6492,\n  ProviderTransport,\n  WalletEventTypes,\n  WalletSession,\n  isMuxTransportTemplate,\n  isProviderTransport,\n  messageToBytes\n} from '.'\nimport { commons, VERSION } from '@0xsequence/core'\nimport { TypedData } from '@0xsequence/utils'\nimport { toExtended } from './extended'\nimport { Analytics, setupAnalytics } from './analytics'\nimport { ethers } from 'ethers'\n\n/**\n *  This session class is meant to persist the state of the wallet connection\n *  whitin the dapp. This enables the client to retain the wallet address (and some more)\n *  even if the user refreshes the page. Otherwise we would have to open the popup again.\n */\nexport class SequenceClientSession {\n  static readonly SESSION_LOCALSTORE_KEY = '@sequence.session'\n\n  constructor(private store: ItemStore) {}\n\n  connectedSession(): Required<WalletSession> {\n    const session = this.getSession()\n\n    if (session && session.accountAddress && session.walletContext && session.networks) {\n      return {\n        accountAddress: session.accountAddress!,\n        walletContext: session.walletContext!,\n        networks: session.networks!\n      }\n    }\n\n    throw new Error('Sequence session not connected')\n  }\n\n  hasSession(): boolean {\n    return this.getSession()?.accountAddress !== undefined\n  }\n\n  setSession(session: WalletSession) {\n    return this.store.setItem(SequenceClientSession.SESSION_LOCALSTORE_KEY, JSON.stringify(session))\n  }\n\n  getSession(): WalletSession | undefined {\n    const session = this.store.getItem(SequenceClientSession.SESSION_LOCALSTORE_KEY)\n\n    if (session) {\n      return JSON.parse(session)\n    }\n\n    return undefined\n  }\n\n  async clearSession() {\n    return this.store.removeItem(SequenceClientSession.SESSION_LOCALSTORE_KEY)\n  }\n}\n\n/**\n *  The wallet webapp doesn't really care what's the \"default chain\" for the user.\n *  so we don't even bother to send this information to the wallet. Instead, we\n *  track it locally using storage, that way the data stays always in sync.\n */\nexport class DefaultChainIdTracker {\n  static readonly SESSION_CHAIN_ID_KEY = '@sequence.session.defaultChainId'\n\n  callbacks: ((chainId: number) => void)[] = []\n\n  constructor(\n    private store: ItemStore,\n    private startingChainId: number = 1\n  ) {\n    store.onItemChange(DefaultChainIdTracker.SESSION_CHAIN_ID_KEY, (value: string | null) => {\n      if (value) {\n        const chainId = parseInt(value)\n        this.callbacks.forEach(cb => cb(chainId))\n      }\n    })\n  }\n\n  onDefaultChainIdChanged(callback: (chainId: number) => void) {\n    this.callbacks.push(callback)\n    return () => {\n      this.callbacks = this.callbacks.filter(cb => cb !== callback)\n    }\n  }\n\n  setDefaultChainId(chainId: number) {\n    if (chainId !== this.getDefaultChainId()) {\n      this.store.setItem(DefaultChainIdTracker.SESSION_CHAIN_ID_KEY, chainId.toString())\n    }\n  }\n\n  getDefaultChainId(): number {\n    const read = this.store.getItem(DefaultChainIdTracker.SESSION_CHAIN_ID_KEY)\n\n    if (!read || read.length === 0) {\n      return this.startingChainId\n    }\n\n    return parseInt(read)\n  }\n}\n\nexport type SequenceClientOptions = {\n  defaultChainId?: number\n  defaultEIP6492?: boolean\n  projectAccessKey?: string\n  analytics?: boolean\n}\n\n/**\n *  This is a wallet client for sequence wallet-webapp. It connects using *some* transport\n *  and it allows to perform all sequence specific (or write) operations related to the wallet.\n *s\n *  It doesn't implement a full ethereum Provider, it doesn't include read-only methods.\n */\n\n// TODO: rename Client to transport.. or something.. like SequenceTransport ..\nexport class SequenceClient {\n  private readonly session: SequenceClientSession\n  private readonly defaultChainId: DefaultChainIdTracker\n  private readonly callbacks: { [K in keyof WalletEventTypes]?: WalletEventTypes[K][] } = {}\n\n  public readonly transport: ProviderTransport\n\n  public readonly defaultEIP6492: boolean\n  public readonly projectAccessKey?: string\n  public readonly analytics?: Analytics\n\n  constructor(transport: ProviderTransport | MuxTransportTemplate, store: ItemStore, options?: SequenceClientOptions) {\n    if (isMuxTransportTemplate(transport)) {\n      this.transport = MuxMessageProvider.new(transport)\n    } else if (isProviderTransport(transport)) {\n      this.transport = transport\n    } else {\n      throw new Error('Invalid transport')\n    }\n\n    const defaultChainId = options?.defaultChainId\n    this.defaultEIP6492 = options?.defaultEIP6492 ?? false\n\n    this.session = new SequenceClientSession(store)\n    this.defaultChainId = new DefaultChainIdTracker(store, defaultChainId)\n\n    this.transport.on('accountsChanged', (accounts: string[]) => {\n      if (accounts.length > 1) {\n        console.warn('SequenceClient: wallet-webapp returned more than one account')\n      }\n\n      this.callbacks.accountsChanged?.forEach(cb => cb(accounts))\n    })\n\n    this.transport.on('connect', (response: ConnectDetails) => {\n      const chainIdHex = ethers.toQuantity(this.getChainId())\n      this.callbacks.connect?.forEach(cb =>\n        cb({\n          ...response,\n          // Ignore the full connect response\n          // use the chainId defined locally\n          chainId: chainIdHex\n        })\n      )\n    })\n\n    this.transport.on('disconnect', (error, origin) => {\n      this.callbacks.disconnect?.forEach(cb => cb(error, origin))\n    })\n\n    this.transport.on('networks', networks => {\n      this.callbacks.networks?.forEach(cb => cb(networks))\n    })\n\n    this.transport.on('walletContext', context => {\n      this.callbacks.walletContext?.forEach(cb => cb(context))\n    })\n\n    this.transport.on('open', info => {\n      this.callbacks.open?.forEach(cb => cb(info))\n    })\n\n    this.transport.on('close', () => {\n      this.callbacks.close?.forEach(cb => cb())\n    })\n\n    this.transport.on('chainChanged', (chainIdHex, origin) => {\n      this.callbacks.chainChanged?.forEach(cb => cb(chainIdHex, origin))\n    })\n\n    // We don't listen for the transport chainChanged event\n    // instead we handle it locally, so we listen for changes in the store\n    this.defaultChainId.onDefaultChainIdChanged((chainId: number) => {\n      const chainIdHex = ethers.toQuantity(chainId)\n      this.callbacks.chainChanged?.forEach(cb => cb(chainIdHex))\n    })\n\n    if (options?.projectAccessKey) {\n      this.projectAccessKey = options.projectAccessKey\n    }\n    if (this.projectAccessKey && options?.analytics) {\n      this.analytics = setupAnalytics(this.projectAccessKey)\n    }\n\n    if (this.session.getSession()?.accountAddress) {\n      this.analytics?.identify(this.session.getSession()?.accountAddress?.toLowerCase())\n    }\n  }\n\n  // Callbacks\n\n  registerCallback<K extends keyof WalletEventTypes>(eventName: K, callback: WalletEventTypes[K]) {\n    if (!this.callbacks[eventName]) {\n      this.callbacks[eventName] = []\n    }\n\n    this.callbacks[eventName]!.push(callback)\n\n    return () => {\n      this.callbacks[eventName] = this.callbacks[eventName]!.filter(c => c !== callback) as any\n    }\n  }\n\n  // Individual callbacks lead to more idiomatic code\n\n  onOpen(callback: WalletEventTypes['open']) {\n    return this.registerCallback('open', callback)\n  }\n\n  onClose(callback: WalletEventTypes['close']) {\n    return this.registerCallback('close', callback)\n  }\n\n  onConnect(callback: WalletEventTypes['connect']) {\n    return this.registerCallback('connect', callback)\n  }\n\n  onDisconnect(callback: WalletEventTypes['disconnect']) {\n    return this.registerCallback('disconnect', callback)\n  }\n\n  onNetworks(callback: WalletEventTypes['networks']) {\n    return this.registerCallback('networks', callback)\n  }\n\n  onAccountsChanged(callback: WalletEventTypes['accountsChanged']) {\n    return this.registerCallback('accountsChanged', callback)\n  }\n\n  // @deprecated\n  onWalletContext(callback: WalletEventTypes['walletContext']) {\n    return this.registerCallback('walletContext', callback)\n  }\n\n  onChainChanged(callback: WalletEventTypes['chainChanged']) {\n    return this.registerCallback('chainChanged', callback)\n  }\n\n  onDefaultChainIdChanged(callback: WalletEventTypes['chainChanged']) {\n    return this.registerCallback('chainChanged', callback)\n  }\n\n  getChainId(): number {\n    return this.defaultChainId.getDefaultChainId()\n  }\n\n  setDefaultChainId(chainId: number) {\n    return this.defaultChainId.setDefaultChainId(chainId)\n  }\n\n  // Proxy transport methods\n\n  async openWallet(path?: string, intent?: OpenWalletIntent) {\n    this.transport.openWallet(path, intent, this.getChainId())\n    await this.transport.waitUntilOpened()\n    return this.isOpened()\n  }\n\n  closeWallet() {\n    return this.transport.closeWallet()\n  }\n\n  isOpened(): boolean {\n    return this.transport.isOpened()\n  }\n\n  isConnected(): boolean {\n    return this.session.hasSession()\n  }\n\n  getSession(): WalletSession | undefined {\n    return this.session.getSession()\n  }\n\n  // Basic API\n  getAddress(): string {\n    const session = this.session.connectedSession()\n    return session.accountAddress\n  }\n\n  async connect(options: ConnectOptions): Promise<ConnectDetails> {\n    if (options?.authorizeVersion === undefined) {\n      // Populate default authorize version if not provided\n      options.authorizeVersion = 2\n    }\n\n    if (options?.refresh === true) {\n      this.disconnect()\n    }\n\n    options.projectAccessKey = this.projectAccessKey\n\n    if (options) {\n      if (options.authorize) {\n        if (!options.app) {\n          throw new Error(`connecting with 'authorize' option also requires 'app' to be set`)\n        }\n\n        if (options.authorizeVersion === undefined) {\n          options.authorizeVersion = 2\n        }\n      }\n    }\n\n    await this.openWallet(undefined, {\n      type: 'connect',\n      options: { ...options, networkId: this.getChainId(), clientVersion: VERSION }\n    })\n\n    const connectDetails = await this.transport.waitUntilConnected().catch((error): ConnectDetails => {\n      if (error instanceof Error) {\n        return { connected: false, error: error.message }\n      } else {\n        return { connected: false, error: JSON.stringify(error) }\n      }\n    })\n\n    // Normalize chainId into a decimal string\n    // TODO: Remove this once wallet-webapp returns chainId as a string\n    if (connectDetails.chainId) {\n      connectDetails.chainId = BigInt(connectDetails.chainId).toString()\n    }\n\n    if (connectDetails.connected) {\n      if (!connectDetails.session) {\n        throw new Error('impossible state, connect response is missing session')\n      }\n\n      this.session.setSession(connectDetails.session)\n\n      if (connectDetails.session?.accountAddress) {\n        this.analytics?.identify(connectDetails.session.accountAddress.toLowerCase())\n      }\n    }\n\n    return connectDetails\n  }\n\n  disconnect() {\n    if (this.isOpened()) {\n      this.closeWallet()\n    }\n\n    this.analytics?.reset()\n\n    return this.session.clearSession()\n  }\n\n  // Higher level API\n\n  async request(request: { method: string; params?: any[]; chainId?: number }): Promise<any> {\n    // Internally when sending requests we use `legacy_sign`\n    // to avoid the default EIP6492 behavior overriding an explicit\n    // \"legacy sign\" request, so we map the method here.\n    request.method = this.mapSignMethod(request.method)\n\n    const result = await this.transport.request(request)\n\n    // We may need to unwrap the response if it's a JSON-RPC response. ie. older universal wallet versions\n    return unwrapJsonRpcResponse(result)\n  }\n\n  async getNetworks(pull?: boolean): Promise<NetworkConfig[]> {\n    const connectedSession = this.session.connectedSession()\n\n    if (pull) {\n      connectedSession.networks = await this.request({ method: 'sequence_getNetworks' })\n      this.session.setSession(connectedSession)\n    }\n\n    return connectedSession.networks\n  }\n\n  // NOTICE: `legacy_sign` will get overriden by `send`\n  // it is done this way to ensure that:\n  //  - `send` handles `personal_sign` as a request for the default sign method\n  //  - explicit `personal_sign` is not replaced by `sequence_sign` (if default is EI6492)\n  private signMethod(options?: OptionalEIP6492) {\n    if (options?.eip6492 === undefined) {\n      return 'personal_sign'\n    }\n\n    return options.eip6492 ? 'sequence_sign' : 'legacy_sign'\n  }\n\n  private signTypedDataMethod(options?: OptionalEIP6492) {\n    if (options?.eip6492 === undefined) {\n      return 'eth_signTypedData_v4'\n    }\n\n    return options.eip6492 ? 'sequence_signTypedData_v4' : 'legacy_signTypedData_v4'\n  }\n\n  private mapSignMethod(method: string): string {\n    if (method === 'personal_sign') {\n      if (this.defaultEIP6492) {\n        return 'sequence_sign'\n      } else {\n        return 'personal_sign'\n      }\n    }\n\n    if (method === 'eth_signTypedData_v4') {\n      if (this.defaultEIP6492) {\n        return 'sequence_signTypedData_v4'\n      } else {\n        return 'eth_signTypedData_v4'\n      }\n    }\n\n    if (method === 'legacy_sign') {\n      return 'personal_sign'\n    }\n\n    if (method === 'legacy_signTypedData_v4') {\n      return 'eth_signTypedData_v4'\n    }\n\n    return method\n  }\n\n  async signMessage(message: ethers.BytesLike, options?: OptionalEIP6492 & OptionalChainId): Promise<string> {\n    const method = this.signMethod(options)\n\n    this.analytics?.track({ event: 'SIGN_MESSAGE_REQUEST', props: { chainId: `${options?.chainId || this.getChainId()}` } })\n\n    message = ethers.hexlify(messageToBytes(message))\n\n    // Address is ignored by the wallet webapp\n    return this.request({\n      method,\n      params: [message, this.getAddress()],\n      chainId: options?.chainId\n    })\n  }\n\n  async signTypedData(typedData: TypedData, options?: OptionalEIP6492 & OptionalChainId): Promise<string> {\n    const method = this.signTypedDataMethod(options)\n\n    // TODO: Stop using ethers for this, this is the only place where we use it\n    // and it makes the client depend on ethers.\n    const encoded = ethers.TypedDataEncoder.getPayload(typedData.domain, typedData.types, typedData.message)\n\n    // The sign typed data will use one of the following chainIds, in order:\n    // - The one provided in the options\n    // - The one provided in the typedData.domain.chainId\n    // - The default chainId\n\n    this.analytics?.track({ event: 'SIGN_TYPED_DATA_REQUEST', props: { chainId: `${options?.chainId || this.getChainId()}` } })\n\n    return this.request({\n      method,\n      params: [this.getAddress(), encoded],\n      chainId: options?.chainId || (typedData.domain.chainId && Number(typedData.domain.chainId)) || this.getChainId()\n    })\n  }\n\n  async sendTransaction(tx: ethers.TransactionRequest[] | ethers.TransactionRequest, options?: OptionalChainId): Promise<string> {\n    const sequenceTxs = Array.isArray(tx) ? tx : [tx]\n    const extendedTxs = toExtended(sequenceTxs)\n\n    this.analytics?.track({ event: 'SEND_TRANSACTION_REQUEST', props: { chainId: `${options?.chainId || this.getChainId()}` } })\n\n    return this.request({ method: 'eth_sendTransaction', params: [extendedTxs], chainId: options?.chainId })\n  }\n\n  async getWalletContext(): Promise<commons.context.VersionedContext> {\n    return this.request({ method: 'sequence_getWalletContext' })\n  }\n\n  async getOnchainWalletConfig(options?: OptionalChainId): Promise<commons.config.Config> {\n    // NOTICE: sequence_getWalletConfig sends the chainId as a param\n    const res = await this.request({\n      method: 'sequence_getWalletConfig',\n      params: [options?.chainId || this.getChainId()],\n      chainId: options?.chainId\n    })\n    return Array.isArray(res) ? res[0] : res\n  }\n\n  // NOTICE: We are leaving out all the \"regular\" methods os a tipical\n  // JSON RPC Provider (eth_getBlockByNumber, eth_call, etc)\n  // wallet-webapp does implement them, but this client is meant to be\n  // exclusively used for Sequence specific methods\n}\n\n// Unwrap a JsonRpcResponse result\nconst unwrapJsonRpcResponse = (response: any): any => {\n  if (response && typeof response === 'object' && 'jsonrpc' in response && 'result' in response) {\n    return response.result\n  }\n\n  return response\n}\n","import { ethers } from 'ethers'\n\nexport type ExtendedTransactionRequest = ethers.TransactionRequest & {\n  auxiliary?: ethers.TransactionRequest[]\n}\n\nexport function toExtended(transactions: ethers.TransactionRequest[]): ExtendedTransactionRequest {\n  if (transactions.length === 0) {\n    throw new Error('No transaction provided')\n  }\n\n  const [first, ...rest] = transactions\n\n  return {\n    ...first,\n    auxiliary: rest\n  }\n}\n\nexport function fromExtended(transaction: ExtendedTransactionRequest): ethers.TransactionRequest[] {\n  return [transaction, ...(transaction.auxiliary || [])]\n}\n\nexport function isExtended(transaction: ethers.TransactionRequest): transaction is ExtendedTransactionRequest {\n  return (transaction as any).auxiliary !== undefined\n}\n","import {\n  CachedProvider,\n  ChainIdLike,\n  NetworkConfig,\n  allNetworks,\n  exceptionProviderMiddleware,\n  findNetworkConfig,\n  loggingProviderMiddleware,\n  JsonRpcProvider\n} from '@0xsequence/network'\nimport { MuxTransportTemplate } from './transports'\nimport { ItemStore, useBestStore } from './utils'\nimport { ethers } from 'ethers'\nimport { SequenceClient } from './client'\nimport { SequenceProvider } from './provider'\n\nexport interface ProviderConfig {\n  // The local storage dependency for the wallet provider, defaults to window.localStorage.\n  // For example, this option should be used when using React Native since window.localStorage is not available.\n  localStorage?: ItemStore\n\n  // defaultNetwork is the primary network of a dapp and the default network a\n  // provider will communicate. Note: this setting is also configurable from the\n  // Wallet constructor's first argument. If both are specified, then they\n  // need to match\n  defaultNetwork?: ChainIdLike\n\n  // defaultEIP6492 defines if EIP-6492 is enabled by default when signing messages.\n  defaultEIP6492?: boolean\n\n  // networks is a configuration list of networks used by the wallet. This list\n  // is combined with the network list specified by sequence.js.\n  // notice that this can only replace the rpc urls on the dapp side,\n  // the networks on wallet-webapp side remain the same.\n  //\n  // NOTICE: It's not possible to define networks that aren't already\n  // defined in sequence.js.\n  networks?: Partial<NetworkConfig>[]\n\n  // transports for dapp to wallet jron-rpc communication\n  transports?: MuxTransportTemplate\n\n  // analytics .... (default: true)\n  analytics?: boolean\n}\n\nexport const DefaultProviderConfig = {\n  transports: {\n    walletAppURL: 'https://sequence.app',\n    windowTransport: { enabled: true },\n    proxyTransport: { enabled: false }\n  },\n\n  defaultNetwork: 1,\n  analytics: true\n}\n\nlet sequenceWalletProvider: SequenceProvider | undefined\n\n/**\n * Initializes a wallet with the provided project access key and optional configuration.\n *\n * @param projectAccessKey - Access key for the project that can be obtained from Sequence Builder on sequence.build\n * @param partialConfig - Optional partial configuration for the wallet.\n * @returns The initialized wallet provider.\n * @throws Error if projectAccessKey is not provided, empty string or is not string.\n */\nexport const initWallet = (projectAccessKey: string, partialConfig?: Partial<ProviderConfig>) => {\n  if (!projectAccessKey || typeof projectAccessKey !== 'string') {\n    throw new Error('Please pass a projectAccessKey in initWallet.')\n  }\n\n  if (sequenceWalletProvider) {\n    return sequenceWalletProvider\n  }\n\n  // Combine both the provided config and the default config\n  const config = {\n    ...DefaultProviderConfig,\n    ...partialConfig,\n    transports: {\n      ...DefaultProviderConfig.transports,\n      ...partialConfig?.transports\n    }\n  }\n\n  const rpcProviders: Record<number, ethers.JsonRpcProvider> = {}\n\n  // Find any new networks that aren't already defined in sequence.js\n  // and add them to the list of networks, (they must have a rpcUrl and chainId)\n  const newNetworks = (config.networks?.filter(n => {\n    n.rpcUrl !== undefined && n.chainId !== undefined && !allNetworks.find(an => an.chainId === n.chainId)\n  }) ?? []) as NetworkConfig[]\n\n  // Override any information about the networks using the config\n  const combinedNetworks = allNetworks\n    .map(n => {\n      const network = config.networks?.find(cn => cn.chainId === n.chainId)\n      return network ? { ...n, ...network } : n\n    })\n    .concat(newNetworks)\n    .map(network => {\n      // don't double-append in the case the user has already included their access key in the rpc URL\n      if (network.rpcUrl.includes(projectAccessKey)) {\n        return network\n      }\n\n      // this will probably break non-sequence RPC provider URLs.\n      network.rpcUrl = network.rpcUrl + `/${projectAccessKey}`\n      return network\n    })\n\n  // This builds a \"public rpc\" on demand, we build them on demand because we don't want to\n  // generate a bunch of providers for networks that aren't used.\n  const providerForChainId = (chainId: number) => {\n    if (!rpcProviders[chainId]) {\n      const rpcUrl = combinedNetworks.find(n => n.chainId === chainId)?.rpcUrl\n      if (!rpcUrl) {\n        throw new Error(`no rpcUrl found for chainId: ${chainId}`)\n      }\n\n      rpcProviders[chainId] = new JsonRpcProvider(\n        rpcUrl,\n        {\n          middlewares: [loggingProviderMiddleware, exceptionProviderMiddleware, new CachedProvider()]\n        },\n        { cacheTimeout: -1 }\n      )\n    }\n\n    return rpcProviders[chainId]\n  }\n\n  // This is the starting default network (as defined by the config)\n  // it can be later be changed using `wallet_switchEthereumChain` or some\n  // of the other methods on the provider.\n  const defaultNetwork = config.defaultNetwork ? findNetworkConfig(combinedNetworks, config.defaultNetwork)?.chainId : undefined\n  if (!defaultNetwork && config.defaultNetwork) {\n    throw new Error(`defaultNetwork not found for chainId: ${config.defaultNetwork}`)\n  }\n\n  // Generate ItemStore\n  const itemStore = config.localStorage || useBestStore()\n\n  // Create client, provider and return signer\n  const client = new SequenceClient(config.transports, itemStore, {\n    defaultChainId: defaultNetwork,\n    defaultEIP6492: config.defaultEIP6492,\n    projectAccessKey: projectAccessKey,\n    analytics: config.analytics\n  })\n\n  sequenceWalletProvider = new SequenceProvider(client, providerForChainId)\n  return sequenceWalletProvider\n}\n\nexport const unregisterWallet = () => {\n  if (!sequenceWalletProvider) return\n  sequenceWalletProvider.client.closeWallet()\n  sequenceWalletProvider.client.transport.unregister()\n  sequenceWalletProvider = undefined\n}\n\nexport const getWallet = () => {\n  if (!sequenceWalletProvider) {\n    throw new Error('Wallet has not been initialized, call sequence.initWallet(config) first.')\n  }\n  return sequenceWalletProvider\n}\n","import { BaseWalletTransport } from '../base-wallet-transport'\nimport { WalletRequestHandler } from '../wallet-request-handler'\nimport { InitState, ProviderMessage } from '../../types'\nimport { ProxyMessageChannelPort } from './proxy-message-channel'\n\nexport class ProxyMessageHandler extends BaseWalletTransport {\n  private port: ProxyMessageChannelPort\n\n  constructor(walletRequestHandler: WalletRequestHandler, port: ProxyMessageChannelPort) {\n    super(walletRequestHandler)\n    this.port = port\n    this._init = InitState.OK\n  }\n\n  register() {\n    this.port.handleMessage = (message: ProviderMessage<any>): void => {\n      this.handleMessage(message)\n    }\n    this._registered = true\n  }\n\n  // note: we can't decide whether to restore the session within register(), because session info is\n  // received asyncronously via EventType.OPEN after register() is executed.\n  // And in the case of a redirect/reload, EventType.OPEN is not sent at all,\n  // because the wallet is already open.\n  //\n  // call this method from wallet redirect hander when a session restore is needed\n  async restoreSession() {\n    const cachedSession = await this.getCachedTransportSession()\n    if (cachedSession) {\n      this.open(cachedSession)\n    }\n  }\n\n  unregister() {\n    // @ts-ignore\n    this.port.handleMessage = undefined\n    this._registered = false\n  }\n\n  sendMessage(message: ProviderMessage<any>) {\n    this.port.sendMessage(message)\n  }\n}\n","import {\n  ProviderMessageRequest,\n  ProviderMessage,\n  EventType,\n  InitState,\n  WindowSessionParams,\n  OpenWalletIntent,\n  ProviderRpcError,\n  TransportSession\n} from '../../types'\nimport { WalletRequestHandler } from '../wallet-request-handler'\nimport { BaseWalletTransport } from '../base-wallet-transport'\nimport { logger, base64DecodeObject, bigintReviver, bigintReplacer } from '@0xsequence/utils'\nimport { ethers } from 'ethers'\n\nexport class WindowMessageHandler extends BaseWalletTransport {\n  protected parentWindow: Window\n\n  private _isPopup: boolean = false\n\n  constructor(walletRequestHandler: WalletRequestHandler) {\n    super(walletRequestHandler)\n    this._init = InitState.NIL\n  }\n\n  async register(windowHref?: any) {\n    const isPopup = parent.window.opener !== null\n    this._isPopup = isPopup\n    if (isPopup !== true) {\n      return\n    }\n\n    // record open details (sessionId + default network) from the window url\n    const { search: rawParams } = new URL(windowHref || window.location.href)\n\n    let session: TransportSession | null = this.getWindowTransportSession(rawParams)\n\n    // provider should always include sid when opening a new window\n    const isNewWindowSession = !!session.sessionId\n\n    // attempt to restore previous session in the case of a redirect or window reload\n    if (!isNewWindowSession) {\n      session = await this.getCachedTransportSession()\n    }\n\n    if (!session) {\n      logger.error('window session is undefined')\n      return\n    }\n\n    // record parent window instance for communication\n    this.parentWindow = parent.window.opener\n\n    // listen for window-transport requests\n    window.addEventListener('message', this.onWindowEvent, false)\n    this._registered = true\n\n    // send open event to the app which opened us\n    this.open(session)\n      .then(opened => {\n        if (!opened) {\n          const err = `failed to open to network ${session?.networkId}`\n          logger.error(err)\n          this.notifyClose({ message: err } as ProviderRpcError)\n          window.close()\n        }\n      })\n      .catch(e => {\n        const err = `failed to open to network ${session?.networkId}, due to: ${e}`\n        logger.error(err)\n        this.notifyClose({ message: err } as ProviderRpcError)\n        window.close()\n      })\n  }\n\n  unregister() {\n    window.removeEventListener('message', this.onWindowEvent)\n    this._registered = false\n  }\n\n  // onmessage is called when (the wallet) receives request messages from the dapp\n  // over the window post-messaging transport\n  private onWindowEvent = async (event: MessageEvent) => {\n    if (!event.origin || event.origin === '') {\n      // skip same-origin or when event.origin is empty/undefined\n      return\n    }\n    if (this.appOrigin && event.origin !== this.appOrigin) {\n      // skip message as not from expected app origin\n      return\n    }\n\n    // Wallet always expects json-rpc request messages from a dapp\n    let request: ProviderMessageRequest\n    try {\n      request = JSON.parse(event.data, bigintReviver)\n    } catch (err) {\n      // event is not a ProviderMessage JSON object, skip\n      return\n    }\n\n    logger.debug('RECEIVED MESSAGE', request)\n\n    // Record event origin for valid init ack\n    if (this._init !== InitState.OK && this.isValidInitAck(request)) {\n      this.appOrigin = event.origin\n    }\n    if (this._init === InitState.OK && (!this.appOrigin || this.appOrigin.length < 8)) {\n      // impossible state\n      logger.error('impossible state, init.OK and appOrigin required')\n      return\n    }\n\n    // Handle message via the base transport\n    this.handleMessage(request)\n  }\n\n  // postMessage sends message to the dapp window\n  sendMessage(message: ProviderMessage<any>) {\n    // prepare payload\n    const payload = JSON.stringify(message, bigintReplacer)\n\n    // post-message to app.\n    // only for init requests, we send to '*' origin\n    if (message.type === EventType.INIT) {\n      this.postMessage(payload, true)\n    } else {\n      this.postMessage(payload)\n    }\n  }\n\n  get isPopup(): boolean {\n    return this._isPopup\n  }\n\n  private postMessage(message: any, init = false) {\n    if (init !== true && this._init !== InitState.OK) {\n      logger.error('impossible state, should not be calling postMessage until inited')\n      return\n    }\n\n    if (init) {\n      // init message transmission to global target -- for 'init' payloads only\n      this.parentWindow.postMessage(message, '*')\n    } else {\n      // open message transmission\n      if (this.appOrigin && this.appOrigin.length > 4) {\n        // just above '.com'\n        this.parentWindow.postMessage(message, this.appOrigin)\n      } else {\n        logger.error('unable to postMessage as parentOrigin is invalid')\n      }\n    }\n  }\n\n  private getWindowTransportSession = (windowParams: string | undefined): TransportSession => {\n    const params = new WindowSessionParams(windowParams)\n    return {\n      sessionId: params.get('sid'),\n      networkId: params.get('net'),\n      intent: base64DecodeObject<OpenWalletIntent>(params.get('intent'))\n    }\n  }\n}\n","import {\n  ProviderMessageRequest,\n  ProviderMessage,\n  EventType,\n  InitState,\n  WindowSessionParams,\n  OpenWalletIntent,\n  ProviderRpcError,\n  TransportSession\n} from '../../types'\nimport { WalletRequestHandler } from '../wallet-request-handler'\nimport { BaseWalletTransport } from '../base-wallet-transport'\nimport { logger, base64DecodeObject, bigintReplacer } from '@0xsequence/utils'\nimport { overrideLogs } from './overridelogs'\n\n// all lowercase is an annoying limitation of Unreal CEF BindUObject\ninterface UnrealInjectedWalletWindow {\n  ue?: {\n    sequencewallettransport?: {\n      onmessagefromsequencejs?: (message: ProviderMessageRequest) => void\n      sendmessagetosequencejs: (message: string) => void\n    }\n  }\n}\ndeclare const window: Window & typeof globalThis & UnrealInjectedWalletWindow\n\n/**\n * Initialized on Wallet side\n */\nexport class UnrealMessageHandler extends BaseWalletTransport {\n  constructor(walletRequestHandler: WalletRequestHandler) {\n    super(walletRequestHandler)\n    this._init = InitState.NIL\n  }\n\n  async register(windowHref?: string | URL) {\n    if (window.ue?.sequencewallettransport === undefined) {\n      return\n    }\n    overrideLogs('wallet')\n\n    // record open details (sessionId + default network) from the window url\n    const { search: rawParams } = new URL(windowHref || window.location.href)\n\n    let session: TransportSession | null = this.getUnrealTransportSession(rawParams)\n\n    // provider should always include sid when opening a new window\n    const isNewWindowSession = !!session.sessionId\n\n    // attempt to restore previous session in the case of a redirect or window reload\n    if (!isNewWindowSession) {\n      session = await this.getCachedTransportSession()\n    }\n\n    if (!session) {\n      logger.error('unreal session is undefined')\n      return\n    }\n\n    // listen for window-transport requests\n    window.ue.sequencewallettransport.onmessagefromsequencejs = this.onMessageFromUnreal\n    this._registered = true\n\n    // send open event to the app which opened us\n    this.open(session)\n      .then(opened => {\n        if (!opened) {\n          const err = `failed to open to network ${session?.networkId}`\n          logger.error(err)\n          this.notifyClose({ message: err } as ProviderRpcError)\n          window.close()\n        }\n      })\n      .catch(e => {\n        const err = `failed to open to network ${session?.networkId}, due to: ${e}`\n        logger.error(err)\n        this.notifyClose({ message: err } as ProviderRpcError)\n        window.close()\n      })\n  }\n\n  unregister() {\n    if (window.ue?.sequencewallettransport?.onmessagefromsequencejs === this.onMessageFromUnreal) {\n      delete window.ue.sequencewallettransport.onmessagefromsequencejs\n    }\n    this._registered = false\n  }\n\n  // onmessage is called when (the wallet) receives request messages from the dapp\n  // over the unreal json-messaging transport\n  private onMessageFromUnreal = (request: ProviderMessageRequest) => {\n    // Wallet always expects json-rpc request messages from a dapp\n\n    logger.debug('RECEIVED MESSAGE', request)\n\n    // Handle message via the base transport\n    this.handleMessage(request)\n  }\n\n  // sendMessage sends message to the dapp window\n  sendMessage(message: ProviderMessage<any>) {\n    if (message.type !== EventType.INIT && this._init !== InitState.OK) {\n      logger.error('impossible state, should not be calling postMessage until inited')\n      return\n    }\n    // prepare payload\n    const payload = JSON.stringify(message, bigintReplacer)\n\n    // post-message to app.\n    window.ue?.sequencewallettransport?.sendmessagetosequencejs(payload)\n  }\n\n  private getUnrealTransportSession = (windowParams: string | undefined): TransportSession => {\n    const params = new WindowSessionParams(windowParams)\n    return {\n      sessionId: params.get('sid'),\n      networkId: params.get('net'),\n      intent: base64DecodeObject<OpenWalletIntent>(params.get('intent'))\n    }\n  }\n}\n","import { ethers } from 'ethers'\nimport { logger } from '@0xsequence/utils'\nimport { FeeOption, FeeQuote, Relayer } from '.'\nimport { ProviderRelayer, ProviderRelayerOptions } from './provider-relayer'\nimport { commons } from '@0xsequence/core'\n\nexport type LocalRelayerOptions = Omit<ProviderRelayerOptions, 'provider'> & {\n  signer: ethers.Signer\n}\n\nexport function isLocalRelayerOptions(obj: any): obj is LocalRelayerOptions {\n  return typeof obj === 'object' && obj.signer instanceof ethers.AbstractSigner\n}\n\nexport class LocalRelayer extends ProviderRelayer implements Relayer {\n  private signer: ethers.Signer\n  private txnOptions: ethers.TransactionRequest\n\n  constructor(options: LocalRelayerOptions | ethers.AbstractSigner) {\n    super(\n      options instanceof ethers.AbstractSigner\n        ? { provider: options.provider! }\n        : { ...options, provider: options.signer.provider! }\n    )\n    this.signer = options instanceof ethers.AbstractSigner ? options : options.signer\n    if (!this.signer.provider) throw new Error('Signer must have a provider')\n  }\n\n  async getFeeOptions(_address: string, ..._transactions: commons.transaction.Transaction[]): Promise<{ options: FeeOption[] }> {\n    return { options: [] }\n  }\n\n  async getFeeOptionsRaw(\n    _entrypoint: string,\n    _data: ethers.BytesLike,\n    _options?: {\n      simulate?: boolean\n    }\n  ): Promise<{ options: FeeOption[] }> {\n    return { options: [] }\n  }\n\n  async gasRefundOptions(address: string, ...transactions: commons.transaction.Transaction[]): Promise<FeeOption[]> {\n    const { options } = await this.getFeeOptions(address, ...transactions)\n    return options\n  }\n\n  setTransactionOptions(transactionRequest: ethers.TransactionRequest) {\n    this.txnOptions = transactionRequest\n  }\n\n  async relay(\n    signedTxs: commons.transaction.IntendedTransactionBundle,\n    quote?: FeeQuote,\n    waitForReceipt: boolean = true\n  ): Promise<commons.transaction.TransactionResponse<ethers.TransactionReceipt>> {\n    if (quote !== undefined) {\n      logger.warn(`LocalRelayer doesn't accept fee quotes`)\n    }\n\n    const data = commons.transaction.encodeBundleExecData(signedTxs)\n\n    // TODO: think about computing gas limit individually, summing together and passing across\n    // NOTE: we expect that all txns have set their gasLimit ahead of time through proper estimation\n    // const gasLimit = signedTxs.transactions.reduce((sum, tx) => sum + tx.gasLimit, 0n)\n    // txRequest.gasLimit = gasLimit\n\n    const responsePromise = this.signer.sendTransaction({\n      to: signedTxs.entrypoint,\n      data,\n      ...this.txnOptions,\n      gasLimit: 9000000\n    })\n\n    if (waitForReceipt) {\n      const response: commons.transaction.TransactionResponse = await responsePromise\n      response.receipt = await response.wait()\n      return response\n    } else {\n      return responsePromise\n    }\n  }\n}\n","import { commons } from '@0xsequence/core'\n\nexport const transactions = commons.transaction\n\nexport type Transaction = commons.transaction.Transaction\nexport type TransactionEncoded = commons.transaction.TransactionEncoded\nexport type TransactionResponse = commons.transaction.TransactionResponse\nexport type Transactionish = commons.transaction.Transactionish\nexport type SignedTransactionBundle = commons.transaction.SignedTransactionBundle\nexport type RelayReadyTransactionBundle = commons.transaction.RelayReadyTransactionBundle\n","export const extractProjectIdFromAccessKey = (accessKey: string): number => {\n  // Convert URL-safe base64 string to standard base64 string\n  const base64String = accessKey.replace(/-/g, '+').replace(/_/g, '/')\n  // Decode the base64 string to a binary string\n  const binaryString = atob(base64String)\n\n  // Convert the binary string to a byte array (Uint8Array)\n  const byteArray = new Uint8Array(binaryString.length)\n  for (let i = 0; i < binaryString.length; i++) {\n    byteArray[i] = binaryString.charCodeAt(i)\n  }\n\n  if (byteArray[0] !== 1) {\n    throw new Error('UnsupportedVersion')\n  }\n\n  // Extract the project ID from bytes 2 to 9 (8 bytes)\n  const projectIdBytes = byteArray.slice(1, 9)\n  const projectId =\n    projectIdBytes[7] |\n    (projectIdBytes[6] << 8) |\n    (projectIdBytes[5] << 16) |\n    (projectIdBytes[4] << 24) |\n    (projectIdBytes[3] << 32) |\n    (projectIdBytes[2] << 40) |\n    (projectIdBytes[1] << 48) |\n    (projectIdBytes[0] << 56)\n\n  return projectId\n}\n","export function promisify<T>(f: (cb: (err: any, res: T) => void) => void, thisContext?: any): () => Promise<T>\nexport function promisify<A, T>(f: (arg: A, cb: (err: any, res: T) => void) => void, thisContext?: any): (arg: A) => Promise<T>\nexport function promisify<A, A2, T>(\n  f: (arg: A, arg2: A2, cb: (err: any, res: T) => void) => void,\n  thisContext?: any\n): (arg: A, arg2: A2) => Promise<T>\nexport function promisify<A, A2, A3, T>(\n  f: (arg: A, arg2: A2, arg3: A3, cb: (err: any, res: T) => void) => void,\n  thisContext?: any\n): (arg: A, arg2: A2, arg3: A3) => Promise<T>\nexport function promisify<A, A2, A3, A4, T>(\n  f: (arg: A, arg2: A2, arg3: A3, arg4: A4, cb: (err: any, res: T) => void) => void,\n  thisContext?: any\n): (arg: A, arg2: A2, arg3: A3, arg4: A4) => Promise<T>\nexport function promisify<A, A2, A3, A4, A5, T>(\n  f: (arg: A, arg2: A2, arg3: A3, arg4: A4, arg5: A5, cb: (err: any, res: T) => void) => void,\n  thisContext?: any\n): (arg: A, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Promise<T>\n\nexport function promisify(f: any, thisContext?: any) {\n  return function (...a: any[]) {\n    const args = Array.prototype.slice.call(a)\n    return new Promise(async (resolve, reject) => {\n      try {\n        args.push((err: any, result: any) => (err ? reject(err) : resolve(result)))\n        await f.apply(thisContext, args)\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n}\n","export function queryStringFromObject(name: string, obj: any) {\n  const k = encodeURIComponent(name)\n  const v = encodeURIComponent(JSON.stringify(obj))\n  return `${k}=${v}`\n}\n\nexport function queryStringToObject(qs: string): { [key: string]: any } {\n  const p = qs.split('&')\n  const o: { [key: string]: any } = {}\n  for (const v of p) {\n    const z = v.split('=')\n    o[decodeURIComponent(z[0])] = JSON.parse(decodeURIComponent(z[1]))\n  }\n  return o\n}\n","export const sleep = (t: number) => {\n  return new Promise<void>(resolve => {\n    const timeout = setTimeout(() => {\n      clearTimeout(timeout)\n      resolve()\n    }, t)\n  })\n}\n","// urlClean removes double slashes from url path\nexport const urlClean = (url: string) => url.replace(/([^:]\\/)\\/+/g, '$1')\n"],"names":["inputs","internalType","type","name","outputs","stateMutability","constant","payable","isValidSignatureBytes32","walletContracts","erc6492","erc5719","erc1271","factory","mainModule","components","mainModuleUpgradable","sequenceUtils","anonymous","indexed","requireFreshSigner","SortOrder","TokenType","API","constructor","hostname","fetch","this","path","ping","headers","signal","url","createHTTPRequest","then","res","buildResponse","_data","status","error","WebrpcRequestFailedError","new","cause","message","version","runtimeStatus","clock","serverTime","getSequenceContext","data","getAuthToken","args","jwtToken","address","user","getAuthToken2","sendPasswordlessLink","friendList","page","friends","getFriendByAddress","friend","searchFriends","addFriend","updateFriendNickname","removeFriend","contractCall","returns","decodeContractCall","call","lookupContractCallSelectors","signatures","userStorageFetch","object","userStorageSave","ok","userStorageDelete","userStorageFetchAll","objects","getMoonpayLink","signedUrl","getSardineClientToken","token","getSardineNFTCheckoutToken","resp","getSardineNFTCheckoutOrderStatus","resolveENSAddress","isValidSignature","isValid","isValidMessageSignature","isValidTypedDataSignature","isValidETHAuthProof","getCoinPrices","tokenPrices","getCollectiblePrices","getExchangeRate","exchangeRate","memoryStore","memoryLoad","value","getInviteInfo","inviteInfo","isValidAccessCode","internalClaimAccessCode","blockNumberAtTime","blocks","paperSessionSecret","secret","paperSessionSecret2","linkWallet","linkedWalletAddress","getLinkedWallets","linkedWallets","removeLinkedWallet","generateWaaSVerificationURL","nonce","verificationURL","validateWaaSVerificationNonce","walletAddress","getSwapQuotes","swapQuotes","addCurrencyGroup","groupId","updateCurrencyGroup","listCurrencyGroups","currencyGroups","deleteCurrencyGroup","addInventoryPaymentConfig","configId","getInventoryPaymentConfig","config","listInventoryPaymentConfigs","configs","updateInventoryPaymentConfig","deleteInventoryPaymentConfig","requestInventoryPayment","payment","input","init","body","method","_extends","JSON","stringify","text","parse","Error","WebrpcBadResponseError","code","webrpcErrorByCode","WebrpcError","super","msg","Object","setPrototypeOf","prototype","payload","WebrpcEndpointError","WebrpcBadRouteError","WebrpcBadMethodError","WebrpcBadRequestError","WebrpcServerPanicError","WebrpcInternalErrorError","WebrpcClientDisconnectedError","WebrpcStreamLostError","WebrpcStreamFinishedError","UnauthorizedError","PermissionDeniedError","SessionExpiredError","AbortedError","GeoblockedError","InvalidArgumentError","UnavailableError","QueryFailedError","NotFoundError","errors","globalThis","SequenceAPIClient","ApiRpc","projectAccessKey","jwtAuth","endsWith","slice","_fetch","length","_hasBuffer","Buffer","_TD","TextDecoder","undefined","_TE","TextEncoder","b64chs","Array","b64tab","a","tab","forEach","c","i","b64re","_fromCC","String","fromCharCode","bind","_U8Afrom","Uint8Array","from","it","_mkUriSafe","src","replace","m0","_tidyB64","s","btoaPolyfill","bin","u32","c0","c1","c2","asc","pad","charCodeAt","TypeError","substring","_btoa","btoa","toString","_fromUint8Array","u8a","strs","l","push","apply","subarray","join","cb_utob","cc","re_utob","utob","u","_encode","encode","urlsafe","re_btou","cb_btou","cccc","offset","btou","b","atobPolyfill","test","u24","r1","r2","charAt","_atob","atob","_toUint8Array","split","map","_decode","decode","_unURI","gBase64","__assign","assign","t","n","arguments","p","hasOwnProperty","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","__generator","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","pop","ETHAuthPrefix","ETHAuthEIP712Domain","Proof","prefix","toLowerCase","claims","app","iat","exp","signature","extra","setIssuedAtNow","Math","round","Date","getTime","setExpiryIn","seconds","validateClaims","messageDigest","typedData","err","ethers","getBytes","messageTypedData","TypedDataEncoder","hash","domain","types","Claims","typ","ogn","now","max","ValidateEOAProof","provider","chainId","proof","_a","verifyMessage","ValidateContractAccountProof","walletCode","abi","getCode","Contract","IsValidSignatureBytes32MagicValue","ETHAuth","validators","_i","_this","configJsonRpcProvider","ethereumJsonRpcURL","netVersion","JsonRpcProvider","send","parseInt","configValidators","encodeProof","skipSignatureValidation","claimsJSON","proofString","validateProof","Base64","decodeProof","parts","messageBase64","isValidClaims","validateProofClaims","concat","validateProofSignature","retIsValid","validator","ChainId","NetworkType","networks","MAINNET","title","logoURI","blockExplorer","rootUrl","nativeToken","symbol","decimals","ensAddress","ROPSTEN","TESTNET","testnet","deprecated","RINKEBY","GOERLI","KOVAN","SEPOLIA","POLYGON","POLYGON_MUMBAI","POLYGON_AMOY","POLYGON_ZKEVM","BSC","BSC_TESTNET","OPTIMISM","OPTIMISM_KOVAN","OPTIMISM_GOERLI","OPTIMISM_SEPOLIA","ARBITRUM","ARBITRUM_GOERLI","ARBITRUM_SEPOLIA","ARBITRUM_NOVA","AVALANCHE","AVALANCHE_TESTNET","GNOSIS","BASE","BASE_GOERLI","BASE_SEPOLIA","HOMEVERSE","HOMEVERSE_TESTNET","XAI","XAI_SEPOLIA","ASTAR_ZKEVM","ASTAR_ZKYOTO","XR_SEPOLIA","B3_SEPOLIA","APECHAIN_TESTNET","BLAST","BLAST_SEPOLIA","TELOS","BORNE_TESTNET","SKALE_NEBULA_TESTNET","SONEIUM_MINATO","HARDHAT","HARDHAT_2","getChainId","Number","isValidNetworkConfig","networkConfig","raise","skipRelayerCheck","isArray","chainIds","sort","dupes","filter","indexOf","names","nameDupes","defaultChain","rpcUrl","relayer","isDefaultChain","ensureValidNetworks","validateAndSortNetworks","sortNetworks","findNetworkConfig","startsWith","id","find","defaultConfigIdx","findIndex","splice","stringTemplate","sTemplate","mData","fullMath","grp","val","valueOf","MAX_UINT_256","BigInt","isBigNumberish","match","isHexString","toHexString","parseUnits","integer","fraction","negative","left","unit","right","rounded","padStart","padEnd","formatUnits","display","bigintReplacer","key","$bigint","bigintReviver","hex","base64EncodeObject","obj","base64DecodeObject","encodedObject","encodeMessageDigest","keccak256","packMessageData","digest","solidityPacked","subDigestOf","isNode","jwtDecodeClaims","jwt","logLevel","Logger","configure","DEBUG","INFO","WARN","ERROR","DISABLED","silence","debug","optionalParams","console","log","info","warn","onwarn","onerror","logger","Base","bufferIndexOf","array","element","isSorted","binarySearch","compare","linearSearch","eqChecker","buffer1","buffer2","compareFunction","start","end","mid","floor","ordering","len","min","bufferify","bufferToHex","withPrefix","prefixed","hexlify","bufferifyFn","MerkleTree","leaves","options","hashFn","layers","sortLeaves","sortPairs","processLeaves","getOptions","createHashes","nodes","layerIndex","layerLimit","combined","getRoot","getHexRoot","getProof","leaf","index","isInteger","layer","isRightNode","pairIndex","position","getHexProof","item","verify","targetNode","root","node","isLeftNode","buffers","getFetchRequest","req","FetchRequest","setHeader","deterministically","_key","fromEntries","entries","sanitizeNumberString","numString","trim","sanitizeAlphanumeric","alphanum","sanitizeHost","host","encodeTypedDataHash","encodeTypedDataDigest","defineProperties","resolveProperties","indexerURL","network","relayerURL","nodesURL","findSupportedNetwork","chainIdOrName","allNetworks","toChainIdNumber","chainIdLike","createNetworkConfig","indexerUrl","hardhatNetworks","isAuthChain","disabled","JsonRpcRouter","middlewares","sender","handler","setMiddleware","createJsonRpcMiddlewareStack","request","toMiddleware","requestHandler","chain","isJsonRpcProvider","cand","defaultUrl","detectNetwork","getSigner","perform","isJsonRpcSender","JsonRpcHandler","defaultChainId","params","allowProviderMiddleware","isAllowed","CachedProvider","cachableJsonRpcMethods","cachableJsonRpcMethodsByBlock","cache","cacheByBlock","cacheByBlockResetLock","onUpdateCallback","async","includes","cacheKey","getCacheValue","shouldCacheResponse","setCacheValue","setCacheByBlockValue","getCache","setCache","setTimeout","clearCache","blockCache","onUpdate","callback","EagerProvider","toQuantity","accountAddress","getAddress","walletContext","exceptionProviderMiddleware","loggingProviderMiddleware","chainIdLabel","SignerJsonRpcMethods","SingleflightMiddleware","singleflightJsonRpcMethods","inflight","requestKey","response","_chainId","_classPrivateFieldLooseKey","_nextId","_sender","jsonRpcApiProviderOptions","defineProperty","writable","jsonRpcRequest","_classPrivateFieldLooseBase","jsonrpc","fetchRequest","getResult","toUtf8String","router","getNetwork","Network","chainIdHex","subdigestOf","solidityPackedKeccak256","isSignedPayload","EIP1271_MAGIC_VALUE","EIP1271_ABI","isValidEIP1271Signature","contract","SigType","canRecover","bytes","EIP712","ETH_SIGN","recoverSigner","digestBytes","splitSignature","r","recoverAddress","hashMessage","WALLET_BYTES32","tryRecoverSigner","_unused","SignaturePartType","isAddressMember","member","isUnrecoveredSignatureMember","weight","isDynamic","isUnrecoveredSignature","threshold","signers","decodeSignature","EOASignature","unrecovered","Address","DynamicSignature","size","encodeSignature","isBytesLike","encodedSigners","fill","recoverSignature","subdigest","base","all","encodeSigners","subdigests","has","get","encoded","SignatureCoder","supportsNoChainId","recover","hasEnoughSigningPower","chainSignatures","_main","_suffix","hashSetImageHash","_imageHash","signaturesOf","signaturesOfDecoded","ConfigCoder","isWalletConfig","imageHashOf","reduce","imageHash","signer","AbiCoder","defaultAbiCoder","hasSubdigest","_walletConfig","_subdigest","isComplete","_config","checkpointOf","signersOf","fromSimple","checkpoint","update","isKindUsed","buildTransaction","wallet","context","kind","module","Interface","transactions","to","encodeFunctionData","getFunction","gasLimit","delegateCall","revertOnError","entrypoint","decodeTransaction","tx","toJSON","plainMembers","fromJSON","json","parsed","editConfig","action","_action$threshold","newSigners","add","remove","buildStubSignature","overrides","Map","set","DeployedWalletContext","guestModule","walletCreationCode","SetImageHashPrefix","messageSetImageHash","decodeMessageSetImageHash","arr","SignatureType","SignaturePartTypeLength","isUnrecoveredNode","isUnrecoveredNestedLeaf","tree","isUnrecoveredSignatureLeaf","decodeSignatureTree","pointer","append","prevPointer","Signature","Node","nodeHash","Branch","Subdigest","Nested","InvalidSignatureLeafError","recoverTopology","partEncoder","branch","nested","dynamicSignature","arrSignature","encodeTree","NoChainIdDynamic","Dynamic","Legacy","topology","disableTrim","isLeftSigner","isSignerLeaf","isRightSigner","hashNode","isNestedLeaf","isNodeLeaf","isSubdigestLeaf","include","part","forceDynamicEncoding","deepestConfigOfSignature","isChainedSignature","suffix","sig","decoded","isUnrecoveredChainedSignature","every","isSignature","decodeSignatureBody","Chained","decodeChainedSignature","main","setImageHashStruct","signedPayload","mutatedPayload","recovered","unshift","nextMessage","encodeChain","encodedMap","flat","encodeSignatureBody","encodeSignatureTree","encodedRight","encodedLeft","utopology","trimSignature","trimmed","trimUnrecoveredTree","trimStaticDigest","ZeroHash","_unused2","isEncodedSignerLeaf","decodeSignerLeaf","Infinity","reversed","reverse","subdigestsOfDecoded","topologyToJSON","topologyFromJSON","isLeaf","encodeSignerLeaf","byte","isSimpleNestedMember","members","topologyToMembers","membersAsTopologies","builder","legacyTopologyBuilder","acc","merkleTopologyBuilder","j1","j2","optimized2SignersTopologyBuilder","toWalletConfig","simpleWalletConfig","stack","Set","_config$subdigests","_context","_kind","_tx$transactions$0$va","_tx$transactions$","_tx$transactions$0$ga","_tx$transactions$2","decodeFunctionData","newImageHash","_action$checkpoint","prev","hasUnknownNodes","coders","addressOf","codeHash","zeroPadValue","dataSlice","defaultContexts","context1","context2","contexts","allVersions","recovered1","recovered2","imageHash2","some","versions","keys","MetaTransactionsType","intendedTransactionID","bundle","intent","unpackMetaTransactionsData","packMetaTransactionsData","txs","sequenceTxAbiEncode","digestOfTransactions","subdigestOfTransactions","subdigestOfGuestModuleTransactions","toSequenceTransactions","toSequenceTransaction","ZeroAddress","isNullish","transaction","walletInterface","isSequenceTransaction","hasSequenceTransactions","_tx$to","target","fromTxAbiEncode","encodeNonce","space","bspace","bnonce","shl","decodeNonce","shr","fromTransactionish","isTransactionBundle","isSignedTransactionBundle","encodeBundleExecData","selfExecuteSelector","selfExecuteAbi","unwind","unwound","txData","d","innerTransactions","unwoundTransactions","toObject","EIP_6492_OFFCHAIN_DEPLOY_CODE","EIP_6492_SUFFIX","validateEIP6492Offchain","OnChainReader","isDeployedCache","isDeployed","implementation","getStorage","readNonce","isWalletSignRequestMetadata","ALL_CODERS","v1","v2","coderFor","genericCoderFor","VERSION","counterfactualVersion","firstImageHash","commons","MIGRATION_NONCE_SPACE","v1v2","configCoder","signatureCoder","newConfig","v2Config","updateBundle","fromVersion","toVersion","toConfig","decoded2","Migrator","tracker","migrations","migration","validateMigrations","lastMigration","last","values","getAllMigratePresignedTransaction","fromImageHash","fih","fversion","migs","mig","getMigration","signedMigrations","missing","lastImageHash","lastVersion","signNextMigration","nextConfig","unsignedMigration","signTransactionBundle","DefaultMigrations","DEFAULT_GAS_LIMIT","ProviderRelayerDefaults","waitPollRate","deltaBlocksLog","fromBlockLog","ProviderRelayer","opts","simulate","estimateGas","executed","succeeded","gasUsed","getNonce","blockTag","wait","metaTxnId","timeoutDuration","delay","maxFails","_this2","timedOut","retry","errorMessage","fails","waitReceipt","lastBlock","block","getBlockNumber","normalMetaTxnId","logs","getLogs","fromBlock","toBlock","topics","found","getTransactionReceipt","transactionHash","getTransaction","out","receipt","race","ETHTxnStatus","TransferType","FeeTokenType","Relayer","getChainID","chainID","sendMetaTxn","txnHash","getMetaTxnNonce","getMetaTxnReceipt","results","updateMetaTxnGasLimits","feeTokens","isFeeRequired","tokens","feeOptions","sponsored","quote","getMetaTxnNetworkFeeOptions","getMetaTransactions","sentTransactions","pendingTransactions","getGasTank","gasTank","addGasTank","updateGasTank","getGasSponsor","gasSponsor","addressGasSponsors","gasSponsors","listGasSponsors","addGasSponsor","updateGasSponsor","removeGasSponsor","reportGasSponsorUsage","gasSponsorUsage","nextGasTankBalanceAdjustmentNonce","adjustGasTankBalance","adjustment","getGasTankBalanceAdjustment","listGasTankBalanceAdjustments","adjustments","MethodNotFoundError","FINAL_STATUSES","proto","DROPPED","SUCCEEDED","PARTIALLY_FAILED","FAILED","FAILED_STATUSES","RpcRelayer","service","AbstractProvider","staticNetwork","isCancelled","metaTxID","txnReceipt","getFeeOptions","symbols","_tag","_quote","getFeeOptionsRaw","gasRefundOptions","encodedNonce","walletContractAddress","decodedSpace","decodedNonce","relay","signedTxs","waitForReceipt","typecheckedQuote","metaTxn","confirmations","_confirmations","_waitResponse$receipt","waitResponse","waitForTransaction","timeout","MetaTransactionResponseException","txReceipt","blockHash","blockNumber","raw","isRelayer","AbstractSigner","resolveArrayProperties","o","isSapientSigner","buildDeployTransaction","predecorateSignedTransactions","decorateTransactions","sign","notifyStatusChange","SignerWrapper","eoa","_metadata","signMessage","_s","_m","SignerState","isSignerStatusPending","state","INITIAL","SIGNING","Orchestrator","tag","randomTag","observers","count","setSigners","randomBytes","pullId","getSigners","subscribe","observer","notifyObservers","metadata","newBundle","output","candidates","ended","lastMetadata","onNewMetadata","newMetadata","onStatusUpdate","pending","addresses","accepted","allSettled","saddr","SIGNED","catch","promise","reason","statusToSignatureParts","suffixed","Wallet","_options$provider","orchestrator","_reader","reader","newWallet","setConfig","setOrchestrator","setAddress","decorated","deployTx","ignoreDeployed","includeChildren","childBundle","deploy","factoryInterface","buildUpdateConfigurationTransaction","isLaterUpdate","signDigest","childMetadata","subdigestBytes","signTypedData","signTransactions","fetchNonceOrSpace","spaceValue","randomNonce","serial","resultNonce","defaultedNonce","meta","sendSignedTransaction","signedBundle","sendTransaction","signed","fillGasLimits","simulations","connect","signTransaction","encodeGasRefundTransaction","option","UNKNOWN","ERC20_TOKEN","contractAddress","AccountSigner","account","providerFor","_this$options$cantVal","_this$options","cantValidateBehavior","_this$options$cantVal2","_this$options2","defaultSelectFee","_txs","balanceOfAbi","getBalance","balanceOf","_this$options$stubSig","_this$options3","_this$options$selectF","_this$options4","_this$options5","prepare","prepareTransactions","stubSignatureOverrides","simulateForFeeOptions","selectMethod","selectFee","feeOption","finalTransactions","feeQuote","nonceSpace","resolveName","_provider","getTransactionCount","getGasPrice","getFeeData","populateCall","checkTransaction","populateTransaction","_checkProvider","operation","Chain0Reader","_wallet","_space","_digest","_signature","Account","migrator","defaults","_options$migrations","lastCoder","saveCounterfactualWallet","tcid","setJwt","contextFor","ctx","walletForStatus","coder","universal","walletFor","isNetworkZero","longestPath","isDeployedPromise","counterfactualImageHashPromise","imageHashOfCounterfactualWallet","counterFactualVersionPromise","onChainVersionPromise","onChainImageHashPromise","deployedImageHash","counterfactualImageHash","onChainConfigPromise","onChainImageHash","onChainConfig","configOfImageHash","onChainVersion","presignedMigrate","presigned","loadPresignedConfiguration","nextImageHash","original","onChain","deployed","fullyMigrated","presignedConfigurations","canOnchainValidate","mustBeFullyMigrated","bundles","predecorated","predecorateTransactions","updateConfig","_bundles$","bootstrapBundle","buildBootstrapTransactions","hasBootstrapTxs","decoratedBundle","decorateSignature","chainedSignature","publishWitness","saveWitnesses","decorate","chainRef","buildEIP6492Signature","buildOnChainSignature","hexSubdigest","saveWalletConfig","changes","currentConfig","updateStruct","savePresignedConfiguration","reverseConfig","noCache","_bundle$transactions","deployTransaction","m","bootstrapTransactions","prestatus","doBootstrap","bootstrapTxs","pstatus","nonceOptions","signMigrations","nextCoder","saveMigration","signAllMigrations","failedChains","successfulSignedMigrations","isMigratedAllChains","_this3","migratedAllChains","sendSignedTransactions","gasRefundQuotes","wstatus","stubSignature","gasRefundQuote","flatDecorated","skipPreDecorate","childBundles","_this4","ts","_last","latestImageHash","latestConfig","getAllSigners","_this5","allSigners","fullChain","iconf","isLast","exists","flaggedForRemoval","ContractType","EventLogType","EventLogDataType","OrderStatus","TxnTransferType","TransactionStatus","TransactionType","Indexer","getEtherBalance","balance","getTokenBalances","balances","getTokenSupplies","contractType","tokenIDs","getTokenSuppliesMap","supplies","getBalanceUpdates","getTransactionHistory","syncBalance","fetchTransactionReceipt","getOrderbookOrders","orders","getTopOrders","fetchTransactionReceiptWithFilter","getAllWebhookListeners","listeners","getWebhookListener","listener","addWebhookListener","updateWebhookListener","removeWebhookListener","toggleWebhookListener","webhookListener","pauseAllWebhookListeners","resumeAllWebhookListeners","subscribeReceipts","sseResponse","onError","subscribeEvents","subscribeBalanceUpdates","retryFetch","onMessage","onOpen","onClose","getReader","decoder","buffer","lastReadTime","intervalId","setInterval","read","stream","DOMException","lines","webrpcError","clearInterval","RequestConflictError","TimeoutError","ResourceExhaustedError","ProjectNotFoundError","MetadataCallFailedError","SequenceIndexer","IndexerRpc","PropertyType","SwapType","TaskStatus","Metadata","getTokenMetadata","tokenMetadata","refreshTokenMetadata","taskId","enqueueTokensForRefresh","getTokenRefreshStatus","getTokenRefreshResult","failureReasons","cancelRefreshJob","getTokenMetadataBatch","contractTokenMetadata","searchTokenMetadata","searchTokenIDs","tokenIds","tokenCollectionFilters","filters","getContractInfo","contractInfo","getContractInfoBatch","contractInfoMap","searchContractInfo","contractInfoList","searchContractInfoBatch","contractInfoByChain","searchMetadata","searchTokens","nextPage","searchContracts","getNiftyswapTokenQuantity","quantity","getNiftyswapUnitPrices","prices","getNiftyswapUnitPricesWithQuantities","addContractToMintMonitor","removeContractFromMintMonitor","mintMonitorJobStatus","task","mintMonitorTriggerJob","syncContractTokens","taskID","abortContractSync","contractSyncJobStatus","refreshTask","syncTask","directoryGetNetworks","directoryGetCollections","collections","directorySearchCollections","Collections","createCollection","collection","getCollection","listCollections","updateCollection","deleteCollection","publishCollection","unpublishCollection","createContractCollection","contractCollection","getContractCollection","listContractCollections","contractCollections","updateContractCollection","deleteContractCollection","createToken","assets","getToken","listTokens","updateToken","deleteToken","createAsset","asset","getAsset","updateAsset","deleteAsset","FailError","RequiredArgumentError","ValidationFailedError","RateLimitedError","ChainNotFoundError","TokenDirectoryDisabledError","SequenceMetadata","MetadataRpc","DEFAULT_SESSION_EXPIRATION","Services","settings","_initialAuthRequest","proofStrings","onAuthCallbacks","apiClient","metadataClient","indexerClients","expiration","_this$settings$metada","onAuth","cb","dump","auth","maxTries","sequenceApiUrl","getJWT","tryAuth","proofStringKey","getProofStringKey","getProofString","api","authResp","ewtString","isProofStringValid","delete","ethAuth","sequenceApiChainId","_unused3","getAPIClient","getMetadataClient","sequenceMetadataUrl","getIndexerClient","indexer","window","location","origin","signAuthorization","ErrAccountIsRequired","AuthError","expiry","chainIdNumber","walletsOfSigner","line","CachedEIP5719","solver","runByEIP5719","timestamp","tries","recoveredAddr","_unused4","altUri","tryAwait","eip5719Contract","getAlternativeSignature","altSignature","URISolverIPFS","gateway","uri","isIPFS","clean","useGateway","MemoryTrackerStore","v2Nodes","counterfactualWallets","payloads","loadConfig","saveConfig","loadV2Node","saveV2Node","loadCounterfactualWallet","loadPayloadOfSubdigest","savePayloadOfSubdigest","loadSubdigestsOfSigner","loadSignatureOfSubdigest","_this$signatures$sign","saveSignatureOfSubdigest","loadMigrationsSubdigest","_this$migrations$wall","saveMigrationsSubdigest","toImageHash","instanceOfAny","constructors","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","prop","receiver","IDBTransaction","objectStoreNames","objectStore","wrap","wrapFunction","func","IDBDatabase","IDBCursor","advance","continue","continuePrimaryKey","unwrap","storeNames","transformCachableValue","unlisten","removeEventListener","complete","addEventListener","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","Proxy","IDBRequest","success","promisifyRequest","newValue","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","storeName","store","shift","recreateBigNumbers","_isBigNumber","_hex","oldTraps","isPlainNode","isPlainNested","isPlainV2Config","dbName","_lazyDb","getDb","db","put","getAllKeysFromIndex","IDBKeyRange","only","getAllFromIndex","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","event","oldVersion","newVersion","openDB","createObjectStore","createIndex","unique","LocalConfigTracker","useEIP5719","cachedEIP5719","loadTopology","saveTopology","saveLeft","saveRight","saveThis","saveTree","configOfImageHashCache","fullConfig","savePayload","payloadOfSubdigestCache","payloadOfSubdigest","saveNextConfig","fromConfig","subdigestsOfSigner","nextImageHashes","bestCandidate","sortedNextConfigsAndCheckpoints","nextCheckpoint","entry","bestCheckpoint","replacedSignature","Boolean","nextStep","decodedAddress","saveToConfig","updateProvider","Sessions","wallets","deployHash","configUpdates","updates","saveWallet","saveSignature","saveSignerSignatures","RemoteConfigTracker","onlyRecoverable","sessions","allUpdates","is404NotFound","encodeConfig","filteredSignatures","numberString","decodeV2ConfigTree","decodeConfig","deployConfig","toBeHex","EthSign","EIP1271","chainIdString","chooseMigration","migrations_","toVersions","toHash","executor","_contexts","encodeTransaction","numberNumber","encodeV2ConfigTree","tree_","raceUntil","promises","fallback","evalRes","allSafe","PromiseCache","do","validMilliseconds","entry_","isDedupedTracker","DedupedTracker","verbose","invalidateCache","trackers","requests","result1","skipTracker","tmptracker","result2","w","witnesses","checkpoints","best","_checkpoints$reduce$r","_checkpoints$reduce","config2","migration1","migration2","isSessionDumpV1","isSessionDumpV2","CRITICAL_CHAINS","SessionSettingsDefault","Session","services","singleSigner","referenceSigner","addSigners","selectWallet","_args$settings$tracke","_args$settings","_findNetworkConfig$ch","_findNetworkConfig","_settings$services$se","_settings$services","_networks$","onAccountAddress","editConfigOnMigration","onMigration","referenceChainId","foundWallets","selectedWallet","servicesObj","isFullyMigrated","isFullyMigrated2","prevConfig","load","_dump$jwt$expiration","_dump$jwt","_dump$jwt2","oldAddress","jwtExpired","_dump$jwt$expiration2","_dump$jwt3","_dump$jwt4","_dump$jwt$expiration3","ValidateSequenceWalletProof","readerFor","Guard","getSignerConfig","signerConfig","signWith","patch","authMethods","methods","active","setPIN","resetPIN","createTOTP","commitTOTP","codes","resetTOTP","reset2FA","recoveryCodes","resetRecoveryCodes","AuthMethod","parseAuthMethod","PIN","TOTP","isSignedOwnershipProof","signerAddress","signOwnershipProof","getOwnershipProofTypedData","signAuthUpdateProof","_typedData$domain$cha","getAuthUpdateProofTypedData","AuthMethods","toUTCString","AuthUpdate","date","appendSuffix","guard","_metadata$parts","guardTotpCode","auxData","packMsgAndSig","_id","_status","getAuthMethods","Authorization","signedProof","setPin","pin","resetPin","createTotp","URL","commitTotp","resetTotp","reset2fa","recoveryCode","getRecoveryCodes","addContractsToTokenDirectory","removeContractsFromTokenDirectory","modifyFeatureIndex","getFeatureIndex","featured","listTokenDirectory","CollectionsRpc","isAllowedFunc","setIsAllowedFunc","fn","networkChainId","privateJsonRpcMethods","setRpcUrl","getRpcUrl","ensureUniqueNetworks","updateNetworkConfig","dest","checkNetworkConfig","PROHIBITED_FUNCTIONS","validateTransactionRequest","isCreateContractCall","selector","validateTransaction","nextTickSupported","process","nextTick","symbolsSupported","reflectSupported","Reflect","_setImmediate","setImmediate","ownKeys","getOwnPropertyNames","getOwnPropertySymbols","_events","_conf","conf","delimiter","maxListeners","_maxListeners","wildcard","newListener","_newListener","removeListener","_removeListener","verboseMemoryLeak","ignoreErrors","listenerTree","logPossibleMemoryLeak","eventName","errorMsg","emitWarning","emitter","trace","toArray","valuesCount","TargetObserver","on","off","_emitter","_target","_listeners","_listenersCount","addListener","_on","_off","_observers","resolveOptions","schema","reducers","allowUnknown","computedOptions","reducer","constructorReducer","makeTypeReducer","firstType","secondType","localEvent","eventObj","emit","_onNewListener","_event","_onRemoveListener","hasListeners","unsubscribe","events","clearRefs","findTargetIndex","functionReducer","objectFunctionReducer","makeCancelablePromise","isCancelable","callbacks","subscriptionClosed","timer","onCancel","cleanup","clearTimeout","overload","isFinite","cancel","_resolve","_reject","searchListenerTree","handlers","typeLength","ns","j","dl","xTree","xxTree","isolatedBranch","endReached","branches","currentType","nextType","growListenerTree","prepend","warned","collectTreeEvents","asArray","branchName","isArrayPath","recursivelyGarbageCollect","flag","Listener","setupListener","promisify","objectify","_listener","_origin","_async","EventEmitter","EventEmitter2","listenTo","listen","isSingleReducer","stopListeningTo","matched","setMaxListeners","getMaxListeners","once","_once","prependOnceListener","_many","many","ttl","prependMany","self","_all","containsSymbol","al","emitAsync","prependListener","onAny","_onAny","prependAny","temp","returnValue","leafs","iLeaf","offAny","fns","removeAllListeners","allListeners","eventNames","nsAsArray","listenerCount","listenersAny","waitFor","handleError","defaultMaxListeners","isNaN","enumerable","errorListener","eventListener","configurable","define","amd","exports","isProviderTransport","transport","register","unregister","openWallet","closeWallet","isOpened","isConnected","WindowSessionParams","URLSearchParams","EventType","OpenState","InitState","ProviderError","ErrSignedInRequired","PROVIDER_OPEN_TIMEOUT","_messageIdx","nextMessageIdx","BaseProviderTransport","pendingMessageRequests","responseCallbacks","confirmationOnly","openPayload","connectPayload","accountsChangedPayload","networksPayload","walletContextPayload","_sessionId","_init","_registered","sendMessageRequest","idx","responseCallback","sendMessage","waitUntilOpened","openTimeout","opened","CLOSED","_this$openPayload","session","openInfo","waitUntilConnected","connectDetails","NIL","registered","networkId","OPENED","_this$openPayload2","MESSAGE","clientVersion","handleMessage","INIT","OK","sessionId","requestIdx","OPEN","ACCOUNTS_CHANGED","accounts","CHAIN_CHANGED","NETWORKS","WALLET_CONTEXT","CLOSE","close","CONNECT","DISCONNECT","_message$data","_message$data2","_message$data3","pendingMessageRequest","clear","EIP_191_PREFIX_EXCEPTIONS","predicate","stringified","DCL_REGEX","ZeroXV3EIP1271OrderWithHashAbi","eip191prefix","toUtf8Bytes","messageToBytes","prefixEIP191Message","messageBytes","messageIsExemptFromEIP191Prefix","isBrowserExtension","protocol","isUnityPlugin","navigator","userAgent","isWalletUpToDate","MemoryItemStore","getItem","setItem","removeItem","onItemChange","LocalStorage","isAvailable","localStorage","useBestStore","TRANSPORT_SESSION_LS_KEY","BaseWalletTransport","walletRequestHandler","_initNonce","_initCallback","appOrigin","isValidInitAck","saveTransportSession","setOpenIntent","connectOptions","authorizeOptions","setConnectOptions","getAccount","isSignedIn","notifyOpen","promptConnect","connected","notifyConnect","keepWalletOpened","notifyClose","walletSession","getCachedTransportSession","notifyDisconnect","notifyAccountsChanged","notifyNetworks","notifyChainChanged","notifyWalletContext","initTimeout","performance","SENT_NONCE","ProxyMessageChannelPort","conn","ProxyMessageProvider","port","OPENING","overrideLogs","side","_window$ue","ue","sequencewallettransport","logsOverriddenForUnreal","_window$ue2","logfromjs","warnfromjs","errorfromjs","things","registeredUnrealMessageProvider","UnrealMessageProvider","walletAppURL","walletURL","onmessagefromwallet","onUnrealCallback","href","windowSessionParams","pathname","search","_window$ue3","postedMessage","sendmessagetowallet","CHANNEL_ID","ExtensionMessageProvider","runtime","onConnect","BaseInjectedTransport","write","registeredWindowMessageProvider","WindowMessageProvider","walletWindow","onWindowEvent","popup","interval","closed","focus","windowSize","windowPos","abs","screen","width","height","screenX","innerWidth","screenY","innerHeight","windowFeatures","_this$walletWindow","postMessage","isMuxTransportTemplate","windowTransport","proxyTransport","extensionTransport","unrealTransport","enabled","MuxMessageProvider","messageProviders","template","_template$windowTrans","_template$proxyTransp","_template$extensionTr","_template$unrealTrans","muxMessageProvider","windowMessageProvider","proxyMessageProvider","appPort","extensionMessageProvider","unrealMessageProvider","getLegacyWalletState","published","permittedJsonRpcMethods","SequenceSigner","utils","client","singleNetworkSigners","_isSequenceSigner","SequenceProvider","is","useChainId","toChainId","SingleNetworkSequenceSigner","eip6492","getProvider","resolved","txHash","check","getWalletConfig","getOnchainWalletConfig","getNetworks","optionals","_operation","_blockTag","_transaction","_isSingleNetworkSequenceSigner","_useChainId","provided","WalletUtils","EIP1193EventTypes","singleNetworkProviders","_isSequenceProvider","eip1193EventListeners","details","_this$eip1193EventLis","onDisconnect","_this$eip1193EventLis2","onDefaultChainIdChanged","_this$eip1193EventLis3","onAccountsChanged","_this$eip1193EventLis4","disconnect","getSession","listAccounts","setDefaultChainId","getWalletContext","authorize","SingleNetworkSequenceProvider","_getSubprovider","_perform","_provider$getRpcReque","_objectWithoutPropertiesLoose","_excluded","prepared","getRpcRequest","normalizeChainId","_detectNetwork","addressOrName","getBlock","blockHashOrBlockTag","prefetchTxs","supportsENS","getResolver","isAddress","lookupAddress","getAvatar","nameOrAddress","_isSingleNetworkSequenceProvider","lengths","instance","checkFinished","destroyed","finished","isBytes","createView","DataView","byteOffset","byteLength","rotr","word","Uint32Array","hexes","bytesToHex","toBytes","str","utf8ToBytes","Hash","clone","_cloneInto","wrapConstructor","hashCons","hashC","tmp","outputLen","blockLen","create","SHA2","padOffset","isLE","pos","view","take","dataView","roundClean","digestInto","setBigUint64","_32n","_u32_max","wh","wl","h","setUint32","oview","outLen","destroy","Maj","SHA256_K","IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","getUint32","W15","W2","s0","s1","T1","T2","sha256","Databeat","tick","rawEvents","_WebrpcError","_WebrpcRequestFailedError","_WebrpcBadResponseError","_WebrpcEndpointError","_WebrpcBadRouteError","_WebrpcBadMethodError","_WebrpcBadRequestError","_WebrpcServerPanicError","_WebrpcInternalErrorError","_WebrpcClientDisconnectedError","_WebrpcStreamLostError","_WebrpcStreamFinishedError","_UnauthorizedError","_PermissionDeniedError","_SessionExpiredError","_NotFoundError","_InvalidAppKeyError","_QueryFailedError","_InvalidProjectIdError","DatabeatRpcClient","globalFetch","_globalFetch","defaultDatabeatOptions","defaultEnabled","noop","privacy","userIdHash","userAgentSalt","userIdentTracking","strictMode","flushInterval","initProps","Databeat2","rpc","ident","userId","allowUserTracking","projectId","queue","flushTimeout","defaultProps","previousPageKey","isEnabled","genSessionId","getDefaultProps","identify","reset","skipInit","isAnon","setStorageVal","ut","isBrowser","allowTracking","getStorageVal","genUserId","track","source","getPagePath","props","flush","enable","disable","trackView","eventProps","eventSource","pageKey","dedupedQueue","getIdent","getUserId","getSessionId","getStorageTS","isAuthEnabled","uniqEvents","ev","nums","searchParams","document","referrer","storageKey","seed","random","extraSalt","sessionStorage","sid","sid2","genRandHex","hexString","exit","Analytics","SequenceClientSession","connectedSession","hasSession","_this$getSession","setSession","SESSION_LOCALSTORE_KEY","clearSession","DefaultChainIdTracker","startingChainId","SESSION_CHAIN_ID_KEY","getDefaultChainId","SequenceClient","_options$defaultEIP","_this$session$getSess","defaultEIP6492","analytics","_this$analytics","_this$session$getSess2","_this$callbacks$accou","accountsChanged","_this$callbacks$conne","_this$callbacks$disco","_this$callbacks$netwo","_this$callbacks$walle","_this$callbacks$open","_this$callbacks$close","_this$callbacks$chain","chainChanged","_this$callbacks$chain2","setupAnalytics","server","registerCallback","onNetworks","onWalletContext","onChainChanged","authorizeVersion","refresh","_connectDetails$sessi","_this$analytics2","_this$analytics3","mapSignMethod","unwrapJsonRpcResponse","pull","signMethod","signTypedDataMethod","_this$analytics4","_this$analytics5","getPayload","_this$analytics6","extendedTxs","first","rest","auxiliary","toExtended","DefaultProviderConfig","transports","defaultNetwork","sequenceWalletProvider","initWallet","partialConfig","_config$networks$filt","_config$networks","rpcProviders","newNetworks","an","combinedNetworks","_config$networks2","cn","itemStore","_combinedNetworks$fin","cacheTimeout","unregisterWallet","getWallet","port1","port2","restoreSession","cachedSession","parentWindow","_isPopup","getWindowTransportSession","windowParams","windowHref","isPopup","parent","opener","rawParams","_session","_session2","prompter","signerReadyCallbacks","_openIntent","_connectOptions","onConnectOptionsChange","promptConnectDetails","signerReady","_this$prompter$getDef","_this$prompter","signIn","setAccount","defaultNetworkId","_this$prompter2","promptSignInConnect","_this$prompter3","promptChangeNetwork","signOut","signerReset","_ref","_options$networkId","authOptions","authorizeNonce","_message$clientVersio","isJsonRpcResponse","jsonRpcResponse","_this$account","_request$chainId","jsonRpcProvider","walletBalance","_address","prefixedMessage","sequenceVerified","_request$chainId2","promptSignMessage","signingAddress","typedDataObject","_request$chainId3","transactionParams","fromExtended","gas","_request$chainId4","_txnResponse$hash","txnResponse","promptSendTransaction","_request$chainId5","promptSignTransaction","txChainId","broadcastTransaction","transactionObject","feeData","gasPrice","switchParams","_this$account$address","_this$account2","openIntent","_this$onConnectOption","_this$prompter4","_session$networks","_connectDetails$sessi2","handleConfirmWalletDeployPrompt","skipsDeploy","promptConfirmWalletDeploy","onMessageFromUnreal","getUnrealTransportSession","onmessagefromsequencejs","sendmessagetosequencejs","ethereumSignedMessagePartSlicedArray","maxPrefixCharLength","prefixCharLenght","prefixAsNumber","txnOptions","_transactions","_entrypoint","_options","setTransactionOptions","transactionRequest","responsePromise","accessKey","base64String","binaryString","byteArray","projectIdBytes","encodedString","elements","toLeaf","generateTree","hashed","generateRoot","generateProof","verifyProof","tokenId","thisContext","encodeURIComponent","qs","z","decodeURIComponent","getRandomInt","MAX_SAFE_INTEGER","ceil"],"mappings":"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EACTF,gBAAiB,cAEnB,CACEH,KAAM,WACNC,KAAM,UACNG,UAAU,EACVN,OAAQ,CACN,CACEe,WAAY,CACV,CACEb,KAAM,OACNC,KAAM,gBAER,CACED,KAAM,OACNC,KAAM,iBAER,CACED,KAAM,UACNC,KAAM,YAER,CACED,KAAM,UACNC,KAAM,UAER,CACED,KAAM,UACNC,KAAM,SAER,CACED,KAAM,QACNC,KAAM,SAGVD,KAAM,WAER,CACEA,KAAM,WAER,CACEA,KAAM,UAGVE,QAAS,GACTG,SAAS,EACTF,gBAAiB,cAEnB,CACEH,KAAM,WACNC,KAAM,iBACNH,OAAQ,CACN,CACEE,KAAM,UAGVK,SAAS,EACTF,gBAAiB,WAEnB,CACEH,KAAM,WACNC,KAAM,oBACNG,UAAU,EACVN,OAAQ,CACN,CACEE,KAAM,UACNC,KAAM,aAER,CACED,KAAM,UACNC,KAAM,eAGVC,QAAS,GACTG,SAAS,EACTF,gBAAiB,iBH5InBW,uDIfiB,CACjB,CACEd,KAAM,WACNC,KAAM,kBACNG,UAAU,EACVN,OAAQ,CACN,CACEE,KAAM,YAGVE,QAAS,GACTG,SAAS,EACTF,gBAAiB,QAEnB,CACEH,KAAM,WACNC,KAAM,YACNG,UAAU,EACVN,OAAQ,GACRI,QAAS,CACP,CACEF,KAAM,YAGVK,SAAS,EACTF,gBAAiB,WJTnBY,gDKhBiB,CACjB,CACEjB,OAAQ,CACN,CACEC,aAAc,UACdE,KAAM,WACND,KAAM,WAER,CACED,aAAc,UACdE,KAAM,cACND,KAAM,YAGVG,gBAAiB,aACjBH,KAAM,eAER,CACEgB,WAAW,EACXlB,OAAQ,CACN,CACEmB,SAAS,EACTlB,aAAc,UACdE,KAAM,UACND,KAAM,WAER,CACEiB,SAAS,EACTlB,aAAc,UACdE,KAAM,aACND,KAAM,WAER,CACEiB,SAAS,EACTlB,aAAc,UACdE,KAAM,aACND,KAAM,WAER,CACEiB,SAAS,EACTlB,aAAc,QACdE,KAAM,WACND,KAAM,UAGVC,KAAM,iBACND,KAAM,SAER,CACEgB,WAAW,EACXlB,OAAQ,CACN,CACEmB,SAAS,EACTlB,aAAc,UACdE,KAAM,UACND,KAAM,WAER,CACEiB,SAAS,EACTlB,aAAc,UACdE,KAAM,UACND,KAAM,YAGVC,KAAM,iBACND,KAAM,SAER,CACEF,OAAQ,CACN,CACEC,aAAc,UACdE,KAAM,QACND,KAAM,YAGVC,KAAM,gBACNC,QAAS,CACP,CACEH,aAAc,UACdE,KAAM,GACND,KAAM,YAGVG,gBAAiB,OACjBH,KAAM,YAER,CACEF,OAAQ,GACRG,KAAM,kBACNC,QAAS,CACP,CACEH,aAAc,UACdE,KAAM,GACND,KAAM,YAGVG,gBAAiB,OACjBH,KAAM,YAER,CACEF,OAAQ,CACN,CACEC,aAAc,UACdE,KAAM,KACND,KAAM,YAGVC,KAAM,gBACNC,QAAS,CACP,CACEH,aAAc,UACdE,KAAM,GACND,KAAM,YAGVG,gBAAiB,OACjBH,KAAM,YAER,CACEF,OAAQ,GACRG,KAAM,cACNC,QAAS,CACP,CACEH,aAAc,UACdE,KAAM,KACND,KAAM,YAGVG,gBAAiB,OACjBH,KAAM,YAER,CACEF,OAAQ,CACN,CACEC,aAAc,UACdE,KAAM,QACND,KAAM,YAGVC,KAAM,WACNC,QAAS,CACP,CACEH,aAAc,QACdE,KAAM,OACND,KAAM,UAGVG,gBAAiB,OACjBH,KAAM,YAER,CACEF,OAAQ,CACN,CACEC,aAAc,UACdE,KAAM,QACND,KAAM,YAGVC,KAAM,eACNC,QAAS,CACP,CACEH,aAAc,UACdE,KAAM,WACND,KAAM,YAGVG,gBAAiB,OACjBH,KAAM,YAER,CACEF,OAAQ,CACN,CACEC,aAAc,UACdE,KAAM,QACND,KAAM,YAGVC,KAAM,eACNC,QAAS,CACP,CACEH,aAAc,UACdE,KAAM,OACND,KAAM,YAGVG,gBAAiB,OACjBH,KAAM,YAER,CACEF,OAAQ,GACRG,KAAM,eACNC,QAAS,CACP,CACEH,aAAc,UACdE,KAAM,GACND,KAAM,YAGVG,gBAAiB,OACjBH,KAAM,YAER,CACEF,OAAQ,GACRG,KAAM,iBACNC,QAAS,CACP,CACEH,aAAc,UACdE,KAAM,GACND,KAAM,YAGVG,gBAAiB,OACjBH,KAAM,YAER,CACEF,OAAQ,GACRG,KAAM,cACNC,QAAS,CACP,CACEH,aAAc,UACdE,KAAM,GACND,KAAM,YAGVG,gBAAiB,OACjBH,KAAM,YAER,CACEF,OAAQ,GACRG,KAAM,eACNC,QAAS,CACP,CACEH,aAAc,UACdE,KAAM,GACND,KAAM,YAGVG,gBAAiB,OACjBH,KAAM,YAER,CACEF,OAAQ,GACRG,KAAM,eACNC,QAAS,CACP,CACEH,aAAc,UACdE,KAAM,GACND,KAAM,YAGVG,gBAAiB,OACjBH,KAAM,YAER,CACEF,OAAQ,GACRG,KAAM,aACNC,QAAS,CACP,CACEH,aAAc,UACdE,KAAM,GACND,KAAM,YAGVG,gBAAiB,OACjBH,KAAM,YAER,CACEF,OAAQ,GACRG,KAAM,gBACNC,QAAS,CACP,CACEH,aAAc,UACdE,KAAM,GACND,KAAM,YAGVG,gBAAiB,OACjBH,KAAM,YAER,CACEF,OAAQ,CACN,CACEC,aAAc,UACdE,KAAM,GACND,KAAM,YAGVC,KAAM,mBACNC,QAAS,CACP,CACEH,aAAc,UACdE,KAAM,GACND,KAAM,YAGVG,gBAAiB,OACjBH,KAAM,YAER,CACEF,OAAQ,CACN,CACEC,aAAc,UACdE,KAAM,GACND,KAAM,YAGVC,KAAM,sBACNC,QAAS,CACP,CACEH,aAAc,UACdE,KAAM,GACND,KAAM,YAGVG,gBAAiB,OACjBH,KAAM,YAER,CACEF,OAAQ,CACN,CACEC,aAAc,UACdE,KAAM,GACND,KAAM,YAGVC,KAAM,mBACNC,QAAS,CACP,CACEH,aAAc,UACdE,KAAM,GACND,KAAM,YAGVG,gBAAiB,OACjBH,KAAM,YAER,CACEF,OAAQ,CACN,CACEC,aAAc,UACdE,KAAM,GACND,KAAM,YAGVC,KAAM,mBACNC,QAAS,CACP,CACEH,aAAc,UACdE,KAAM,GACND,KAAM,YAGVG,gBAAiB,OACjBH,KAAM,YAER,CACEF,OAAQ,CACN,CACEe,WAAY,CACV,CACEd,aAAc,OACdE,KAAM,eACND,KAAM,QAER,CACED,aAAc,OACdE,KAAM,gBACND,KAAM,QAER,CACED,aAAc,UACdE,KAAM,WACND,KAAM,WAER,CACED,aAAc,UACdE,KAAM,SACND,KAAM,WAER,CACED,aAAc,UACdE,KAAM,QACND,KAAM,WAER,CACED,aAAc,QACdE,KAAM,OACND,KAAM,UAGVD,aAAc,oCACdE,KAAM,OACND,KAAM,YAGVC,KAAM,YACNC,QAAS,CACP,CACEH,aAAc,SACdE,KAAM,aACND,KAAM,UAER,CACED,aAAc,UACdE,KAAM,WACND,KAAM,YAGVG,gBAAiB,UACjBH,KAAM,YAER,CACEF,OAAQ,CACN,CACEC,aAAc,UACdE,KAAM,UACND,KAAM,WAER,CACED,aAAc,UACdE,KAAM,aACND,KAAM,WAER,CACEa,WAAY,CACV,CACEd,aAAc,UACdE,KAAM,SACND,KAAM,WAER,CACED,aAAc,UACdE,KAAM,SACND,KAAM,YAGVD,aAAc,+BACdE,KAAM,WACND,KAAM,WAER,CACED,aAAc,OACdE,KAAM,SACND,KAAM,SAGVC,KAAM,gBACNC,QAAS,GACTC,gBAAiB,aACjBH,KAAM,YAER,CACEF,OAAQ,CACN,CACEC,aAAc,UACdE,KAAM,UACND,KAAM,WAER,CACED,aAAc,UACdE,KAAM,QACND,KAAM,WAER,CACED,aAAc,UACdE,KAAM,eACND,KAAM,WAER,CACED,aAAc,QACdE,KAAM,aACND,KAAM,SAER,CACED,aAAc,OACdE,KAAM,SACND,KAAM,SAGVC,KAAM,wBACNC,QAAS,GACTC,gBAAiB,aACjBH,KAAM,YAER,CACEF,OAAQ,CACN,CACEC,aAAc,UACdE,KAAM,UACND,KAAM,WAER,CACED,aAAc,UACdE,KAAM,SACND,KAAM,YAGVC,KAAM,kBACNC,QAAS,GACTC,gBAAiB,OACjBH,KAAM,YAER,CACEF,OAAQ,CACN,CACEC,aAAc,UACdE,KAAM,cACND,KAAM,YAGVC,KAAM,oBACNC,QAAS,GACTC,gBAAiB,OACjBH,KAAM,eLhfRkB,qDMjBiB,CACjB,CACEpB,OAAQ,CACN,CACEC,aAAc,UACdE,KAAM,GACND,KAAM,YAGVC,KAAM,qBACNC,QAAS,GACTC,gBAAiB,a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"}