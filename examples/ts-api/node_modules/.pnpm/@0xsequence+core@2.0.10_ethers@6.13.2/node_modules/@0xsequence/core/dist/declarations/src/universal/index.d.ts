import { commons, v1, v2 } from "../index.js";
export declare const ALL_CODERS: ({
    config: commons.config.ConfigCoder<v1.config.WalletConfig>;
    signature: commons.signature.SignatureCoder<v1.config.WalletConfig, v1.signature.Signature, v1.signature.UnrecoveredSignature>;
} | {
    config: commons.config.ConfigCoder<v2.config.WalletConfig>;
    signature: commons.signature.SignatureCoder<v2.config.WalletConfig, v2.signature.Signature, v2.signature.UnrecoveredSignature | v2.signature.UnrecoveredChainedSignature>;
})[];
export declare function coderFor(version: number): {
    config: commons.config.ConfigCoder<v1.config.WalletConfig>;
    signature: commons.signature.SignatureCoder<v1.config.WalletConfig, v1.signature.Signature, v1.signature.UnrecoveredSignature>;
} | {
    config: commons.config.ConfigCoder<v2.config.WalletConfig>;
    signature: commons.signature.SignatureCoder<v2.config.WalletConfig, v2.signature.Signature, v2.signature.UnrecoveredSignature | v2.signature.UnrecoveredChainedSignature>;
};
/**
 *  Same as `coderFor` but returns `generic` coders without versioned types.
 */
export declare function genericCoderFor(version: number): {
    config: commons.config.ConfigCoder;
    signature: commons.signature.SignatureCoder;
};
