import { ethers } from 'ethers';
import { commons } from "../index.js";
import { Config } from "./config.js";
/**
 * Request metadata, used by the wallet to pass additional information through the orchestrator.
 */
export type WalletSignRequestMetadata = {
    address: string;
    digest: ethers.BytesLike;
    chainId: ethers.BigNumberish;
    config: Config;
    parts?: Map<string, commons.signature.SignaturePart>;
    message?: ethers.BytesLike;
    transactions?: commons.transaction.Transaction[];
    parent?: WalletSignRequestMetadata;
    decorate?: boolean;
    cantValidateBehavior?: 'ignore' | 'eip6492' | 'throw';
};
export declare function isWalletSignRequestMetadata(obj: any): obj is WalletSignRequestMetadata;
/**
 * Request metadata, used by the wallet to pass additional information through the orchestrator.
 */
export type WalletDeployMetadata = {
    includeChildren?: boolean;
    ignoreDeployed?: boolean;
};
