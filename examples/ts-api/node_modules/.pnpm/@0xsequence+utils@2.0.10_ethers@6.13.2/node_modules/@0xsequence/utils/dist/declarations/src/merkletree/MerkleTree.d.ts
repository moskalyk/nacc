import { Base } from "./Base.js";
export interface Options {
    sortLeaves?: boolean;
    sortPairs?: boolean;
}
export type Proof = {
    position: 'left' | 'right';
    data: Uint8Array;
}[];
export declare class MerkleTree extends Base {
    private hashFn;
    private leaves;
    private layers;
    private sortLeaves;
    private sortPairs;
    constructor(leaves: any[], options?: Options);
    getOptions(): {
        sortLeaves: boolean;
        sortPairs: boolean;
    };
    private processLeaves;
    private createHashes;
    getRoot(): Uint8Array;
    getHexRoot(): string;
    getProof(leaf: Uint8Array | string, index?: number): Proof;
    getHexProof(leaf: Uint8Array | string, index?: number): string[];
    verify(proof: Proof | string[], targetNode: Uint8Array | string, root: Uint8Array | string): boolean;
}
