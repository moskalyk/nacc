import { ethers } from 'ethers';
import { commons } from '@0xsequence/core';
import { Status } from "../orchestrator.js";
import { SapientSigner } from "./signer.js";
export declare class SignerWrapper implements SapientSigner {
    signer: ethers.Signer;
    eoa: boolean;
    constructor(signer: ethers.Signer, eoa?: boolean);
    getAddress(): Promise<string>;
    buildDeployTransaction(_metadata: object): Promise<commons.transaction.TransactionBundle | undefined>;
    predecorateSignedTransactions(_metadata: object): Promise<commons.transaction.SignedTransactionBundle[]>;
    decorateTransactions(bundle: commons.transaction.IntendedTransactionBundle, _metadata: object): Promise<commons.transaction.IntendedTransactionBundle>;
    sign(message: ethers.BytesLike): Promise<ethers.BytesLike>;
    notifyStatusChange(_i: string, _s: Status, _m: object): void;
    suffix(): ethers.BytesLike;
}
