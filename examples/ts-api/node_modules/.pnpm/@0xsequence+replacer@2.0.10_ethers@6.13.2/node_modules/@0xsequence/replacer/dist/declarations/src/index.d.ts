import { ethers } from 'ethers';
export * from "./cached.js";
export declare function eip5719Contract(address: string, provider: ethers.Provider): ethers.Contract;
export declare function eip1271Contract(address: string, provider: ethers.Provider): ethers.Contract;
export declare function isValidSignature(address: string, provider: ethers.Provider, digest: ethers.BytesLike, signature: ethers.BytesLike): Promise<boolean>;
export interface URISolver {
    resolve: (uri: string) => Promise<string>;
}
export declare function runByEIP5719(address: string, provider: ethers.Provider, digest: ethers.BytesLike, signature: ethers.BytesLike, solver?: URISolver, tries?: number): Promise<ethers.BytesLike>;
export declare class URISolverIPFS implements URISolver {
    gateway: string;
    constructor(gateway?: string);
    uri: (uri: string) => string;
    resolve: (uri: string) => Promise<string>;
}
